# Calculate dilutions for each sample
dna.meta.sub <- dna.meta.sub %>%
mutate(conc_goal = if_else(AdjConc <= 1, AdjConc, 1),
template_uL = round((conc_goal*20)/AdjConc, 0), # C1V1=C2V2, rounded to nearest whole uL
mgH2O_uL = 20-template_uL) %>%
arrange(Sample)
dna.meta.sub %>%
select(Sample, template_uL, mgH2O_uL) %>%
write_csv(., file="../data_intermediate/SFA2_dnadilutions.csv")
head(dna.meta.group)
head(dna.meta.group)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
rm(list=ls())
library(tidyverse)
sessionInfo()
# Create list of files in directory
files <- list.files(path="../data_picogreen/SFA2", full.names=TRUE, recursive=FALSE)
# Import DNA conc. data
dna <- tibble()
for (i in files) {
if (str_detect(i, c("tidy", ".txt")) & !str_detect(i, "redo")) { # select files tidied using picogreen_tidy.py
dat <- read_tsv(i) %>%
select(Sample, AdjConc) %>%
mutate(Sample = as.double(Sample))
dna <- bind_rows(dna, dat)
} else {
next
}
}
# Add metadata
meta <- read_csv("../metadata/SFA2_metadata.csv")
dna.meta <- full_join(dna, meta) %>%
arrange(Sample)
dna.meta %>%
mutate(Innoculant = as_factor(Innoculant)) %>%
ggplot(aes(x=Day, y=AdjConc)) +
geom_point(aes(color=Innoculant)) +
#facet_wrap(~Innoculant) +
labs(y="DNA conc. (ng/uL)") +
theme_test()
# Graph each innoculant separately with sample labels
for (x in as.character(unique(dna.meta$Innoculant))) {
p <- dna.meta %>%
filter(Innoculant == x) %>%
ggplot(aes(x=Day, y=AdjConc)) +
geom_point(alpha=0.5) +
geom_text(aes(label=Sample), size=3, hjust=0, vjust=0) +
labs(y="DNA conc. (ng/uL)", title=paste("Innoculant", x)) +
theme_test()
print(p)
}
hist(dna.meta$AdjConc, breaks=15)
# Import DNA conc. data
for (i in files) {
if (str_detect(i, c("tidy", "redos", ".txt"))) { # select files tidied using picogreen_tidy.py
dna.redo <- read_tsv(i) %>%
select(Sample, AdjConc) %>%
mutate(Sample = as.double(Sample)) %>%
add_column(Status = rep("redo", nrow(.)))
} else {
next
}
}
# Add metadata
redo.meta <- inner_join(dna.redo, meta) %>%
arrange(Sample)
# First pass DNA extractions
dna.meta <- add_column(dna.meta, Status = rep("original", nrow(dna.meta)))
# Add redos
dna.meta <- bind_rows(dna.meta, redo.meta)
redos <- c(163, 164, 165, 166, 218, 219, 220, 235, 236, 237, 252, 253, 269, 271, 275, 276, 277, 280, 281, 282, 287, 288, 310, 312, 325, 341)
dna.meta %>%
filter(Sample %in% redos) %>%
mutate(Sample = as.factor(Sample)) %>%
ggplot(aes(x=Sample, y=AdjConc)) +
geom_point(aes(color=Status)) +
labs() +
theme_test()
dna.meta %>%
filter(Sample %in% redos) %>%
mutate(Sample = as.factor(Sample)) %>%
ggplot(aes(y=AdjConc)) +
geom_boxplot(aes(color=Status)) +
labs() +
theme_test()
# Graph each innoculant over time
for (x in as.character(unique(dna.meta$Innoculant))) {
p <- dna.meta %>%
filter(!(Status == "original" & Sample %in% redos)) %>%
filter(Innoculant == x) %>%
ggplot(aes(x=Day, y=AdjConc)) +
geom_point(alpha=0.5) +
geom_text(aes(label=Sample), size=3, hjust=0, vjust=0) +
labs(y="DNA conc. (ng/uL)", title=paste("Innoculant", x)) +
theme_test()
print(p)
}
# Replace redos
dna.meta.sub <- filter(dna.meta, !(Status == "original" & Sample %in% redos))
head(dna.meta.sub)
write.csv(dna.meta.sub, file="data_picogreen/SFA2_dnaconc_final.csv")
write_csv(dna.meta.sub, file="data_picogreen/SFA2_dnaconc_final.csv")
?write_csv
write_csv(dna.meta.sub, "data_picogreen/SFA2_dnaconc_final.csv")
getwd()
write_csv(dna.meta.sub, "../data_picogreen/SFA2_dnaconc_final.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
melt <- read_csv("../data_qPCR/SFA2_meltcurve_troubleshoot.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
rm(list=ls())
library(tidyverse)
sessionInfo()
melt <- read_csv("../data_qPCR/SFA2_meltcurve_troubleshoot.csv")
dna <- read_csv("../data_picogreen/SFA2_dnaconc_final.csv")
melt_dna <- inner_join(melt, dna)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
rm(list=ls())
library(tidyverse)
sessionInfo()
melt <- read_csv("../data_qPCR/SFA2_meltcurve_troubleshoot.csv")
dna <- read_csv("../data_picogreen/SFA2_dnaconc_final.csv")
melt_dna <- left_join(melt, dna)
head(melt_dna)
melt_dna <- ggplot(aes(x=AdjConc, y=melt_curve)) +
geom_point()
melt_dna <- gplot(aes(x=AdjConc, y=melt_curve)) +
geom_point()
melt_dna <- ggplot(aes(x=AdjConc, y=melt_curve)) +
geom_point()
str(melt_dna)
melt_dna <- ggplot(melt_dna, aes(x=AdjConc, y=melt_curve)) +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
rm(list=ls())
library(tidyverse)
sessionInfo()
melt <- read_csv("../data_qPCR/SFA2_meltcurve_troubleshoot.csv")
dna <- read_csv("../data_picogreen/SFA2_dnaconc_final.csv")
melt_dna <- left_join(melt, dna)
ggplot(melt_dna, aes(x=AdjConc, y=melt_curve)) +
geom_point()
ggplot(melt_dna, aes(x=AdjConc, y=melt_curve)) +
geom_point() +
theme_test()
ggplot(melt_dna, aes(x=AdjConc, y=melt_curve)) +
geom_jitter() +
theme_test()
ggplot(melt_dna, aes(x=AdjConc, y=melt_curve, color=melt_curve)) +
geom_jitter() +
theme_test()
melt_dna <- left_join(melt, dna) %>%
mutate(melt_curve, melt_curve = if_else(2, "high", if_else(1, "intermediate", "normal")))
melt_dna <- left_join(melt, dna) %>%
mutate(melt_curve, melt_curve = if_else(melt_curve==2, "high", if_else(melt_curve==1, "intermediate", "normal")))
head(melt_dna)
ggplot(melt_dna, aes(x=AdjConc, y=melt_curve, color=melt_curve)) +
geom_jitter() +
theme_test()
ggplot(melt_dna, aes(x=AdjConc, y=melt_curve, color=melt_curve)) +
geom_jitter() +
labs(x="DNA concentraion (ng/uL)", y="Melt curve temp.")
melt_dna <- left_join(melt, dna) %>%
mutate(melt_curve, melt_curve = if_else(melt_curve==2, "high", if_else(melt_curve==1, "intermediate", "normal")),
melt_curve = as_factor(melt_curve))
head(melt_curve)
head(melt_dna)
levels(melt_dna$melt_curve)
?fct_relevel
ggplot(melt_dna, aes(x=AdjConc, y=melt_curve, color=melt_curve)) +
geom_jitter() +
labs(x="DNA concentraion (ng/uL)", y="Melt curve temp.") +
theme_test()
melt_dna <- left_join(melt, dna) %>%
mutate(melt_curve, melt_curve = if_else(melt_curve==2, "high", if_else(melt_curve==1, "intermediate", "normal")),
melt_curve = as_factor(melt_curve),
melt_curve = fct_relevel(melt_curve, c("normal", "intermediate", "high")))
ggplot(melt_dna, aes(x=AdjConc, y=melt_curve, color=melt_curve)) +
geom_jitter() +
labs(x="DNA concentraion (ng/uL)", y="Melt curve temp.") +
theme_test()
str(melt_dna)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
rm(list=ls())
library(tidyverse)
sessionInfo()
# Create list of files in directory
files <- list.files(path="../data_picogreen/SFA2", full.names=TRUE, recursive=FALSE)
# Import DNA conc. data
dna <- tibble()
for (i in files) {
if (str_detect(i, c("tidy", ".txt")) & !str_detect(i, "redo")) { # select files tidied using picogreen_tidy.py
dat <- read_tsv(i) %>%
select(Sample, AdjConc) %>%
mutate(Sample = as.double(Sample))
dna <- bind_rows(dna, dat)
} else {
next
}
}
# Add metadata
meta <- read_csv("../metadata/SFA2_metadata.csv")
dna.meta <- full_join(dna, meta) %>%
arrange(Sample)
dna.meta %>%
mutate(Innoculant = as_factor(Innoculant)) %>%
ggplot(aes(x=Day, y=AdjConc)) +
geom_point(aes(color=Innoculant)) +
#facet_wrap(~Innoculant) +
labs(y="DNA conc. (ng/uL)") +
theme_test()
# Graph each innoculant separately with sample labels
for (x in as.character(unique(dna.meta$Innoculant))) {
p <- dna.meta %>%
filter(Innoculant == x) %>%
ggplot(aes(x=Day, y=AdjConc)) +
geom_point(alpha=0.5) +
geom_text(aes(label=Sample), size=3, hjust=0, vjust=0) +
labs(y="DNA conc. (ng/uL)", title=paste("Innoculant", x)) +
theme_test()
print(p)
}
hist(dna.meta$AdjConc, breaks=15)
# Import DNA conc. data
for (i in files) {
if (str_detect(i, c("tidy", "redos", ".txt"))) { # select files tidied using picogreen_tidy.py
dna.redo <- read_tsv(i) %>%
select(Sample, AdjConc) %>%
mutate(Sample = as.double(Sample)) %>%
add_column(Status = rep("redo", nrow(.)))
} else {
next
}
}
# Add metadata
redo.meta <- inner_join(dna.redo, meta) %>%
arrange(Sample)
# First pass DNA extractions
dna.meta <- add_column(dna.meta, Status = rep("original", nrow(dna.meta)))
# Add redos
dna.meta <- bind_rows(dna.meta, redo.meta)
redos <- c(163, 164, 165, 166, 218, 219, 220, 235, 236, 237, 252, 253, 269, 271, 275, 276, 277, 280, 281, 282, 287, 288, 310, 312, 325, 341)
dna.meta %>%
filter(Sample %in% redos) %>%
mutate(Sample = as.factor(Sample)) %>%
ggplot(aes(x=Sample, y=AdjConc)) +
geom_point(aes(color=Status)) +
labs() +
theme_test()
dna.meta %>%
filter(Sample %in% redos) %>%
mutate(Sample = as.factor(Sample)) %>%
ggplot(aes(y=AdjConc)) +
geom_boxplot(aes(color=Status)) +
labs() +
theme_test()
# Graph each innoculant over time
for (x in as.character(unique(dna.meta$Innoculant))) {
p <- dna.meta %>%
filter(!(Status == "original" & Sample %in% redos)) %>%
filter(Innoculant == x) %>%
ggplot(aes(x=Day, y=AdjConc)) +
geom_point(alpha=0.5) +
geom_text(aes(label=Sample), size=3, hjust=0, vjust=0) +
labs(y="DNA conc. (ng/uL)", title=paste("Innoculant", x)) +
theme_test()
print(p)
}
# Replace redos
dna.meta.sub <- filter(dna.meta, !(Status == "original" & Sample %in% redos))
# Average
dna.avg <- dna.meta.sub %>%
group_by(Innoculant, Day, DOC_pheno) %>%
summarize(dna_avg = mean(AdjConc), dna_sd = sd(AdjConc))
# Visualize
dna.avg %>%
mutate(Innoculant = as.factor(Innoculant)) %>%
filter(!Day == 30) %>%
ggplot(aes(x=Day, y=dna_avg)) +
geom_point(aes(color=Innoculant)) +
geom_line(aes(color=Innoculant)) +
geom_hline(yintercept=1, linetype=2) +
labs(y="Mean DNA conc. (ng/uL)") +
theme_test()
# log transform
dna.avg %>%
mutate(Innoculant = as.factor(Innoculant)) %>%
filter(!Day == 30) %>%
ggplot(aes(x=Day, y=log(dna_avg))) +
geom_point(aes(color=Innoculant)) +
geom_line(aes(color=Innoculant)) +
facet_wrap(~Innoculant) +
geom_vline(xintercept = 10, linetype = 2) +
labs(y="Log mean DNA conc. (ng/uL)") +
theme_test()
# separate by DOC phenotype
dna.avg %>%
mutate(Innoculant = as.factor(Innoculant)) %>%
filter(!Day == 30) %>%
ggplot(aes(x=Day, y=dna_avg)) +
geom_point(aes(color=Innoculant)) +
geom_line(aes(color=Innoculant)) +
facet_wrap(~DOC_pheno) +
geom_hline(yintercept=1, linetype=2) +
labs(title="Separared by DOC phenotype", y="Mean DNA conc. (ng/uL)") +
theme_test()
dna.avg %>%
mutate(Innoculant = as.factor(Innoculant)) %>%
filter(!Day == 30) %>%
ggplot(aes(x=Day, y=log(dna_avg))) +
geom_point(aes(color=Innoculant)) +
geom_line(aes(color=Innoculant)) +
facet_wrap(~DOC_pheno) +
labs(title="Separared by DOC phenotype", y="Log mean DNA conc. (ng/uL)") +
theme_test()
min(dna.avg$dna_avg)
max(dna.avg$dna_avg)
# min
dna.avg %>%
filter(dna_avg < 1) %>%
group_by() %>%
summarize(min(dna_avg))
# max
dna.avg %>%
filter(dna_avg < 1) %>%
group_by() %>%
summarize(max(dna_avg))
# min
dna.avg %>%
filter(dna_avg > 1) %>%
group_by() %>%
summarize(min(dna_avg))
# max
dna.avg %>%
filter(dna_avg > 1) %>%
group_by() %>%
summarize(max(dna_avg))
min(dna.meta.sub$AdjConc)
max(dna.meta.sub$AdjConc)
# min
dna.meta.sub %>%
filter(AdjConc < 1) %>%
group_by() %>%
summarize(min(AdjConc))
# max
dna.meta.sub %>%
filter(AdjConc < 1) %>%
group_by() %>%
summarize(max(AdjConc))
# min
dna.meta.sub %>%
filter(AdjConc > 1) %>%
group_by() %>%
summarize(min(AdjConc))
# max
dna.meta.sub %>%
filter(AdjConc > 1) %>%
group_by() %>%
summarize(max(AdjConc))
# label groups based on averaged dna concentration
dna.avg.groups <- mutate(dna.avg, spike_group = if_else(dna_avg < 1, "low", "high"))
# visualize
dna.avg.groups %>%
ggplot(aes(x=spike_group, y=dna_avg)) +
geom_boxplot() +
theme_test()
# Apply labels to unaveraged dataset
dna.meta.group <- dna.meta.sub %>%
full_join(dna.avg.groups) %>%
select(-dna_avg)
# visualize
dna.meta.group %>%
ggplot(aes(x=spike_group, y=AdjConc)) +
geom_boxplot() +
theme_test()
dna.meta.group %>%
group_by(spike_group) %>%
filter(Day > 0) %>%
summarize(dna_avg = mean(AdjConc), dna_median = median(AdjConc), dna_min = min(AdjConc), dna_max = max(AdjConc))
dna.meta.group %>%
ggplot(aes(x=Day, y=AdjConc)) +
geom_point(aes(color=spike_group)) +
facet_wrap(~Innoculant) +
theme_test()
for (x in as.character(unique(dna.meta.group$Innoculant))) {
p <- dna.meta.group %>%
filter(!(Status == "original" & Sample %in% redos)) %>%
filter(Innoculant == x) %>%
ggplot(aes(x=Day, y=AdjConc, color=spike_group)) +
geom_point(alpha=0.5) +
geom_hline(yintercept = 1) +
geom_text(aes(label=Sample), size=3, hjust=0, vjust=0) +
labs(y="DNA conc. (ng/uL)", title=paste("Innoculant", x)) +
theme_test()
print(p)
}
# label borderline samples
dna.meta.group <- mutate(dna.meta.group, borders = case_when(spike_group=="low" & AdjConc <= 1 ~ "low",
spike_group=="high" & AdjConc >= 1 ~ "high",
spike_group=="low" & AdjConc >= 1 ~ "both",
spike_group=="high" & AdjConc <= 1 ~ "both"))
# Number of samples in each spike group
dna.meta.group %>%
group_by(borders) %>%
summarize(count(.))
head(dna.meta.group)
write_csv(dna.meta.group, "../data_picogreen/SFA2_dnaspikes.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
rm(list=ls())
library(tidyverse)
sessionInfo()
melt <- read_csv("../data_qPCR/SFA2_meltcurve_troubleshoot.csv")
dna <- read_csv("../data_picogreen/SFA2_dnaspikes.csv")
melt_dna <- left_join(melt, dna) %>%
mutate(melt_curve, melt_curve = if_else(melt_curve==2, "high", if_else(melt_curve==1, "intermediate", "normal")),
melt_curve = as_factor(melt_curve),
melt_curve = fct_relevel(melt_curve, c("normal", "intermediate", "high")))
ggplot(melt_dna, aes(x=AdjConc, y=melt_curve, color=melt_curve)) +
geom_jitter() +
labs(x="DNA concentraion (ng/uL)", y="Melt curve temp.") +
theme_test()
head(melt_dna)
ggplot(melt_dna, aes(x=spike_group, y=melt_curve, color=melt_curve)) +
geom_jitter() +
labs(x="DNA concentraion (ng/uL)", y="Melt curve temp.") +
theme_test()
ggplot(melt_dna, aes(x=spike_group, y=melt_curve, color=melt_curve)) +
geom_jitter() +
labs(x="Spike-in level", y="Melt curve temp.") +
theme_test()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
rm(list=ls())
library(tidyverse)
sessionInfo()
melt <- read_csv("../data_qPCR/SFA2_meltcurve_troubleshoot.csv")
dna <- read_csv("../data_picogreen/SFA2_dnaspikes.csv")
melt_dna <- left_join(melt, dna) %>%
mutate(melt_curve, melt_curve = if_else(melt_curve==2, "high", if_else(melt_curve==1, "intermediate", "normal")),
melt_curve = as_factor(melt_curve),
melt_curve = fct_relevel(melt_curve, c("normal", "intermediate", "high")))
ggplot(melt_dna, aes(x=AdjConc, y=melt_curve, color=melt_curve)) +
geom_jitter() +
labs(x="DNA concentraion (ng/uL)", y="Melt curve temp.") +
theme_test()
ggplot(melt_dna, aes(x=spike_group, y=melt_curve, color=melt_curve)) +
geom_jitter() +
labs(x="Spike-in level", y="Melt curve temp.") +
theme_test()
ggplot(melt_dna, aes(x=Day, y=melt_curve, color=melt_curve)) +
geom_jitter() +
labs(x="Spike-in level", y="Melt curve temp.") +
theme_test()
ggplot(melt_dna, aes(x=Day, y=melt_curve, color=melt_curve)) +
geom_jitter() +
labs(x="Day", y="Melt curve temp.") +
theme_test()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
rm(list=ls())
library(tidyverse)
sessionInfo()
melt <- read_csv("../data_qPCR/SFA2_meltcurve_troubleshoot.csv")
dna <- read_csv("../data_picogreen/SFA2_dnaspikes.csv")
melt_dna <- left_join(melt, dna) %>%
mutate(melt_curve, melt_curve = if_else(melt_curve==2, "high", if_else(melt_curve==1, "intermediate", "normal")),
melt_curve = as_factor(melt_curve),
melt_curve = fct_relevel(melt_curve, c("normal", "intermediate", "high")))
ggplot(melt_dna, aes(x=AdjConc, y=melt_curve, color=melt_curve)) +
geom_jitter() +
labs(x="DNA concentraion (ng/uL)", y="Melt curve temp.") +
theme_test()
ggplot(melt_dna, aes(x=spike_group, y=melt_curve, color=melt_curve)) +
geom_jitter() +
labs(x="Spike-in level", y="Melt curve temp.") +
theme_test()
ggplot(melt_dna, aes(x=Day, y=melt_curve, color=melt_curve)) +
geom_jitter() +
geom_vline(xintercept = 7) +
labs(x="Day", y="Melt curve temp.") +
theme_test()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(tidyverse)
library(cowplot)
sessionInfo()
rm(list=ls())
# List of directories containing data files
dir = list.dirs(path="../data_CO2/SFA2/data", full.names=TRUE, recursive=FALSE)
head(dir)
# Create lists of .txt files from directories
files = list()
for (i in dir) {
files[[i]] <- list.files(path=i, pattern="*.txt", full.names=TRUE, recursive=FALSE)
}
head(files)
