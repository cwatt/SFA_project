filter(dup==FALSE) %>% # remove duplicates
select(Sample1, Sample2, wuni_dist)
# Reformat
groweff_mx <- groweff %>%
mutate(ucosm = paste0(Inoculant, Day)) %>%
filter(!is.na(Day)) %>% # remove NAs
select(ucosm, growth_eff) %>%
column_to_rownames(var="ucosm") %>%
as.matrix()
groweff_diff <- dist(groweff_mx, method="maximum") %>% # calculate difference
as.matrix() %>%
as.data.frame() %>%
rownames_to_column(var="Sample1") %>%
pivot_longer(-Sample1, names_to = "Sample2", values_to = "greff_diff") %>%
filter(greff_diff!=0) %>% # remove self-comparisons
mutate(foo = as.character(paste0(Sample1, Sample2)), # remove repeated comparisons
foo = str_arrange(foo)) %>%
bind_cols(dup=duplicated(.$foo)) %>% # id duplicated comparisons
filter(dup==FALSE) %>% # remove duplicates
select(Sample1, Sample2, greff_diff)
# Add metadata and combine
meta2 <- rownames_to_column(meta2, var="ucosm")
greff_dist <- inner_join(groweff_diff, wuni_dist_df) %>%
inner_join(meta2, by=c("Sample1"="ucosm")) %>%
select(Sample1, Inoc1=Inoculant, Sample2, greff_diff, wuni_dist) %>%
inner_join(meta2, by=c("Sample2"="ucosm")) %>%
select(Sample1, Inoc1, Sample2, Inoc2=Inoculant, Day, greff_diff, wuni_dist)
# Visualize
greff_dist %>%
ggplot(aes(x=wuni_dist, y=log(greff_diff))) +
geom_point(aes(color=Day)) +
geom_smooth(method="lm") +
labs(x="Weighted unifrac, relative abundance normalized", y="Difference in growth efficiency") +
theme_test()
# Visualize
greff_dist %>%
ggplot(aes(x=wuni_dist, y=log(greff_diff))) +
geom_point(aes(color=Day)) +
geom_smooth(method="lm", color="black") +
labs(x="Weighted unifrac, relative abundance normalized", y="Difference in growth efficiency") +
theme_test()
# Visualize
greff_dist %>%
ggplot(aes(x=wuni_dist, y=log(greff_diff))) +
geom_point(aes(color=Day)) +
geom_smooth(method="lm", color="black") +
labs(x="Weighted unifrac, relative abundance normalized", y="ln Difference in growth efficiency") +
theme_test()
# Visualize
greff_dist %>%
mutate(color = if_else(Day==0, "yes", "no")) %>%
ggplot(aes(x=wuni_dist, y=log(greff_diff))) +
geom_point(aes(color=color)) +
geom_smooth(method="lm", color="black") +
labs(x="Weighted unifrac, relative abundance normalized", y="ln Difference in growth efficiency") +
theme_test()
# Visualize
greff_dist %>%
mutate(color = if_else(Day<4, "yes", "no")) %>%
ggplot(aes(x=wuni_dist, y=log(greff_diff))) +
geom_point(aes(color=color)) +
geom_smooth(method="lm", color="black") +
labs(x="Weighted unifrac, relative abundance normalized", y="ln Difference in growth efficiency") +
theme_test()
# Visualize
greff_dist %>%
mutate(color = if_else(Day<3, "yes", "no")) %>%
ggplot(aes(x=wuni_dist, y=log(greff_diff))) +
geom_point(aes(color=color)) +
geom_smooth(method="lm", color="black") +
labs(x="Weighted unifrac, relative abundance normalized", y="ln Difference in growth efficiency") +
theme_test()
# Visualize
greff_dist %>%
mutate(color = if_else(Day<4, "yes", "no")) %>%
ggplot(aes(x=wuni_dist, y=log(greff_diff))) +
geom_point(aes(color=color)) +
geom_smooth(method="lm", color="black") +
labs(x="Weighted unifrac, relative abundance normalized", y="ln Difference in growth efficiency") +
theme_test()
# Visualize
greff_dist %>%
mutate(color = if_else(Day==30, "yes", "no")) %>%
ggplot(aes(x=wuni_dist, y=log(greff_diff))) +
geom_point(aes(color=color)) +
geom_smooth(method="lm", color="black") +
labs(x="Weighted unifrac, relative abundance normalized", y="ln Difference in growth efficiency") +
theme_test()
# Visualize
greff_dist %>%
#mutate(color = if_else(Day==30, "yes", "no")) %>%
ggplot(aes(x=wuni_dist, y=log(greff_diff))) +
geom_point(aes(color=color)) +
geom_smooth(method="lm", color="black") +
labs(x="Weighted unifrac, relative abundance normalized", y="ln Difference in growth efficiency") +
theme_test()
# Visualize
greff_dist %>%
#mutate(color = if_else(Day==30, "yes", "no")) %>%
ggplot(aes(x=wuni_dist, y=log(greff_diff))) +
geom_point(aes(color=color)) +
geom_smooth(method="lm", color="black") +
labs(x="Weighted unifrac, relative abundance normalized", y="ln Difference in growth efficiency") +
theme_test()
# Visualize
greff_dist %>%
#mutate(color = if_else(Day==30, "yes", "no")) %>%
ggplot(aes(x=wuni_dist, y=log(greff_diff))) +
geom_point(aes(color=Day)) +
geom_smooth(method="lm", color="black") +
labs(x="Weighted unifrac, relative abundance normalized", y="ln Difference in growth efficiency") +
theme_test()
# Average technical replicates
rare_avg <- data.frame(otu_table(physeq_rare)) %>% # lots of reformatting needed
as.matrix() %>%
t() %>%
as.data.frame() %>%
rownames_to_column(var="SampleID") %>%
pivot_longer(cols=c(-SampleID), names_to="ASV", values_to="rare") %>% # long format
mutate(SampleID = gsub("sa", "", SampleID),
SampleID = as.numeric(SampleID)) %>%
filter(!(SampleID %in% nongrowth_sams)) %>%
inner_join(meta) %>% # add metadata
mutate(ucosm = paste0(Inoculant, Day)) %>%
group_by(ucosm, ASV) %>%
summarize(rare_avg = mean(rare)) %>% # calc. mean
ungroup() %>%
pivot_wider(names_from=ASV, values_from=rare_avg) %>%
column_to_rownames(var="ucosm") %>% # reformat back
as.matrix() %>%
t()
meta2 <- meta %>%
filter(Type=="Growth") %>%
mutate(ucosm = paste0(Inoculant, Day)) %>%
select(ucosm, Type, Inoculant, Day) %>%
unique() %>%
column_to_rownames(var="ucosm")
physeq_rare_avg <- phyloseq(otu_table(rare_avg, taxa_are_rows = TRUE),
sample_data(meta2), phy_tree(physeq_rare))
# String sorting function stolen from https://gist.github.com/martinctc/56b3fb701a182f5b8dffceecd65b6d86
str_arrange <- function(x) {
x %>%
stringr::str_split("") %>% # Split string into letters
purrr::map(~sort(.) %>% paste(collapse = "")) %>% # Sort and re-combine
as_vector()
} # Convert list into vector
# Calculate distances
wuni_rare_avg <- distance(physeq_rare_avg, method="wunifrac")
# Reformat
wuni_dist_df <- wuni_rare_avg %>%
as.matrix() %>%
as.data.frame() %>%
rownames_to_column(var="Sample1") %>%
pivot_longer(-Sample1, names_to = "Sample2", values_to = "wuni_dist") %>%
filter(wuni_dist!=0) %>% # remove self-comparisons
mutate(foo = as.character(paste0(Sample1, Sample2)), # remove repeated comparisons
foo = str_arrange(foo)) %>%
bind_cols(dup=duplicated(.$foo)) %>% # id duplicated comparisons
filter(dup==FALSE) %>% # remove duplicates
select(Sample1, Sample2, wuni_dist)
wuni_dist_df
# Add metadata and combine
meta2 <- rownames_to_column(meta2, var="ucosm")
greff_dist <- inner_join(groweff_diff, wuni_dist_df) %>%
inner_join(meta2, by=c("Sample1"="ucosm")) %>%
select(Sample1, Inoc1=Inoculant, Sample2, greff_diff, wuni_dist) %>%
inner_join(meta2, by=c("Sample2"="ucosm")) %>%
select(Sample1, Inoc1, Sample2, Inoc2=Inoculant, Day, greff_diff, wuni_dist)
# Visualize
greff_dist %>%
#mutate(color = if_else(Day==30, "yes", "no")) %>%
ggplot(aes(x=wuni_dist, y=log(greff_diff))) +
geom_point(aes(color=Day)) +
geom_smooth(method="lm", color="black") +
labs(x="Weighted unifrac, relative abundance normalized", y="ln Difference in growth efficiency") +
theme_test()
wuni_dist_df
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
# Import libraries
library(phyloseq)
library(tidyverse)
library(cowplot)
sessionInfo()
# Clear environment
rm(list=ls())
# Metadata
meta <- read_tsv("../data_amplicon/SFA2_full/SFA2_metadata_corrected.tsv")
# Growth efficiency
groweff <- readRDS("../data_intermediate/SFA2_growtheff.rds")
# Rarefied count
physeq_rare <- readRDS("../data_intermediate/SFA2_physeq_rare.rds")
# Not rarefied counts
physeq_unrare <- readRDS("../data_intermediate/SFA2_physeq_unrare.rds")
# How many taxa/samples are lost to rarefication?
physeq_rare
physeq_unrare
# Per sample?
rare_count <- data.frame(otu_table(physeq_rare))
unrare_count <- data.frame(otu_table(physeq_unrare))
# Count ASVs per sample
rare_binary <- rare_count %>%
mutate(across(everything(), ~if_else(. > 1, 1, 0)))
rare_binary <- colSums(rare_binary)
rare_sams <- names(rare_binary) # samples left after rarefication
unrare_binary <- unrare_count %>%
mutate(across(everything(), ~if_else(. > 1, 1, 0)))
unrare_binary <- colSums(unrare_binary)
unrare_binary <- unrare_binary[names(unrare_binary) %in% rare_sams] # filter samples not in rarefied
# Combine
rich_compare <- data.frame(rare=rare_binary, unrare=unrare_binary) %>%
mutate(diff = unrare - rare)
# Visualize
rich_compare %>%
ggplot(aes(x=reorder(rownames(.), diff), y=diff)) +
geom_point() +
labs(x="sample", y="difference in ASVs") +
theme_test()
rich_compare %>%
mutate(SampleID = rownames(.),
SampleID = gsub("sa", "", SampleID),
SampleID = as.numeric(SampleID)) %>%
inner_join(meta) %>%
ggplot(aes(x=Day, y=diff)) +
geom_point() +
labs(x="Day", y="difference in ASVs") +
theme_test()
physeq_relabund <- transform_sample_counts(physeq_unrare, function(x) x/sum(x))
set.seed(2)
# Rarefied
wuni_rare <- distance(physeq_rare, method="wunifrac")
rare_pcoa <- ordinate(physeq_rare, method="PCoA", distance=wuni_rare)
# Relative abundances
wuni_relabund <- distance(physeq_relabund, method="wunifrac")
head(rich_compare)
relabund_pcoa <- ordinate(physeq_relabund, method="PCoA", distance=wuni_relabund)
# Visualize
plot_ordination(physeq_rare, rare_pcoa, color="Day") +
theme_test()
plot_ordination(physeq_relabund, unrare_pcoa, color="Day") +
theme_test()
nongrowth_sams <- filter(meta, Type!="Growth")
nongrowth_sams <- nongrowth_sams$SampleID
# Average technical replicates
relabund_avg <- data.frame(otu_table(physeq_relabund)) %>% # lots of reformatting needed
as.matrix() %>%
t() %>%
as.data.frame() %>%
rownames_to_column(var="SampleID") %>%
pivot_longer(cols=c(-SampleID), names_to="ASV", values_to="relabund") %>% # long format
mutate(SampleID = gsub("sa", "", SampleID),
SampleID = as.numeric(SampleID)) %>%
filter(!(SampleID %in% nongrowth_sams)) %>%
inner_join(meta) %>% # add metadata
mutate(ucosm = paste0(Inoculant, Day)) %>%
group_by(ucosm, ASV) %>%
summarize(relabund_avg = mean(relabund)) %>% # calc. mean
ungroup() %>%
pivot_wider(names_from=ASV, values_from=relabund_avg) %>%
column_to_rownames(var="ucosm") %>% # reformat back
as.matrix() %>%
t()
meta2 <- meta %>%
filter(Type=="Growth") %>%
mutate(ucosm = paste0(Inoculant, Day)) %>%
select(ucosm, Type, Inoculant, Day) %>%
unique() %>%
column_to_rownames(var="ucosm")
physeq_relabund_avg <- phyloseq(otu_table(relabund_avg, taxa_are_rows = TRUE),
sample_data(meta2), phy_tree(physeq_relabund))
# String sorting function stolen from https://gist.github.com/martinctc/56b3fb701a182f5b8dffceecd65b6d86
str_arrange <- function(x) {
x %>%
stringr::str_split("") %>% # Split string into letters
purrr::map(~sort(.) %>% paste(collapse = "")) %>% # Sort and re-combine
as_vector()
} # Convert list into vector
# Calculate distances
wuni_relabund_avg <- distance(physeq_relabund_avg, method="wunifrac")
# Reformat
wuni_dist_df <- wuni_relabund_avg %>%
as.matrix() %>%
as.data.frame() %>%
rownames_to_column(var="Sample1") %>%
pivot_longer(-Sample1, names_to = "Sample2", values_to = "wuni_dist") %>%
filter(wuni_dist!=0) %>% # remove self-comparisons
mutate(foo = as.character(paste0(Sample1, Sample2)), # remove repeated comparisons
foo = str_arrange(foo)) %>%
bind_cols(dup=duplicated(.$foo)) %>% # id duplicated comparisons
filter(dup==FALSE) %>% # remove duplicates
select(Sample1, Sample2, wuni_dist)
# Reformat
groweff_mx <- groweff %>%
mutate(ucosm = paste0(Inoculant, Day)) %>%
filter(!is.na(Day)) %>% # remove NAs
select(ucosm, growth_eff) %>%
column_to_rownames(var="ucosm") %>%
as.matrix()
groweff_diff <- dist(groweff_mx, method="maximum") %>% # calculate difference
as.matrix() %>%
as.data.frame() %>%
rownames_to_column(var="Sample1") %>%
pivot_longer(-Sample1, names_to = "Sample2", values_to = "greff_diff") %>%
filter(greff_diff!=0) %>% # remove self-comparisons
mutate(foo = as.character(paste0(Sample1, Sample2)), # remove repeated comparisons
foo = str_arrange(foo)) %>%
bind_cols(dup=duplicated(.$foo)) %>% # id duplicated comparisons
filter(dup==FALSE) %>% # remove duplicates
select(Sample1, Sample2, greff_diff)
# Add metadata and combine
meta2 <- rownames_to_column(meta2, var="ucosm")
greff_dist <- inner_join(groweff_diff, wuni_dist_df) %>%
inner_join(meta2, by=c("Sample1"="ucosm")) %>%
select(Sample1, Inoc1=Inoculant, Sample2, greff_diff, wuni_dist) %>%
inner_join(meta2, by=c("Sample2"="ucosm")) %>%
select(Sample1, Inoc1, Sample2, Inoc2=Inoculant, Day, greff_diff, wuni_dist)
# Visualize
greff_dist %>%
#mutate(color = if_else(Day==30, "yes", "no")) %>%
ggplot(aes(x=wuni_dist, y=log(greff_diff))) +
geom_point(aes(color=Day)) +
geom_smooth(method="lm", color="black") +
labs(x="Weighted unifrac, relative abundance normalized", y="ln Difference in growth efficiency") +
theme_test()
cor.test(log(greff_dist$greff_diff), greff_dist$wuni_dist, method="pearson")
# Average technical replicates
rare_avg <- data.frame(otu_table(physeq_rare)) %>% # lots of reformatting needed
as.matrix() %>%
t() %>%
as.data.frame() %>%
rownames_to_column(var="SampleID") %>%
pivot_longer(cols=c(-SampleID), names_to="ASV", values_to="rare") %>% # long format
mutate(SampleID = gsub("sa", "", SampleID),
SampleID = as.numeric(SampleID)) %>%
filter(!(SampleID %in% nongrowth_sams)) %>%
inner_join(meta) %>% # add metadata
mutate(ucosm = paste0(Inoculant, Day)) %>%
group_by(ucosm, ASV) %>%
summarize(rare_avg = mean(rare)) %>% # calc. mean
ungroup() %>%
pivot_wider(names_from=ASV, values_from=rare_avg) %>%
column_to_rownames(var="ucosm") %>% # reformat back
as.matrix() %>%
t()
meta2 <- meta %>%
filter(Type=="Growth") %>%
mutate(ucosm = paste0(Inoculant, Day)) %>%
select(ucosm, Type, Inoculant, Day) %>%
unique() %>%
column_to_rownames(var="ucosm")
physeq_rare_avg <- phyloseq(otu_table(rare_avg, taxa_are_rows = TRUE),
sample_data(meta2), phy_tree(physeq_rare))
# String sorting function stolen from https://gist.github.com/martinctc/56b3fb701a182f5b8dffceecd65b6d86
str_arrange <- function(x) {
x %>%
stringr::str_split("") %>% # Split string into letters
purrr::map(~sort(.) %>% paste(collapse = "")) %>% # Sort and re-combine
as_vector()
} # Convert list into vector
# Calculate distances
wuni_rare_avg <- distance(physeq_rare_avg, method="wunifrac")
# Reformat
wuni_dist_df <- wuni_rare_avg %>%
as.matrix() %>%
as.data.frame() %>%
rownames_to_column(var="Sample1") %>%
pivot_longer(-Sample1, names_to = "Sample2", values_to = "wuni_dist") %>%
filter(wuni_dist!=0) %>% # remove self-comparisons
mutate(foo = as.character(paste0(Sample1, Sample2)), # remove repeated comparisons
foo = str_arrange(foo)) %>%
bind_cols(dup=duplicated(.$foo)) %>% # id duplicated comparisons
filter(dup==FALSE) %>% # remove duplicates
select(Sample1, Sample2, wuni_dist)
# Add metadata and combine
meta2 <- rownames_to_column(meta2, var="ucosm")
greff_dist <- inner_join(groweff_diff, wuni_dist_df) %>%
inner_join(meta2, by=c("Sample1"="ucosm")) %>%
select(Sample1, Inoc1=Inoculant, Sample2, greff_diff, wuni_dist) %>%
inner_join(meta2, by=c("Sample2"="ucosm")) %>%
select(Sample1, Inoc1, Sample2, Inoc2=Inoculant, Day, greff_diff, wuni_dist)
# Visualize
greff_dist %>%
#mutate(color = if_else(Day==30, "yes", "no")) %>%
ggplot(aes(x=wuni_dist, y=log(greff_diff))) +
geom_point(aes(color=Day)) +
geom_smooth(method="lm", color="black") +
labs(x="Weighted unifrac, rarefied", y="ln Difference in growth efficiency") +
theme_test()
head(rich_compare)
greff_dist <- inner_join(groweff_diff, wuni_dist_df) %>%
inner_join(meta2, by=c("Sample1"="ucosm")) %>%
select(Sample1, Inoc1=Inoculant, Sample2, greff_diff, wuni_dist) %>%
inner_join(meta2, by=c("Sample2"="ucosm")) %>%
select(Sample1, Inoc1, Sample2, Inoc2=Inoculant, greff_diff, wuni_dist)
# Add metadata and combine
meta2 <- rownames_to_column(meta2, var="ucosm")
# Visualize
greff_dist %>%
#mutate(color = if_else(Day==30, "yes", "no")) %>%
ggplot(aes(x=wuni_dist, y=log(greff_diff))) +
geom_point() +
geom_smooth(method="lm", color="black") +
labs(x="Weighted unifrac, rarefied", y="ln Difference in growth efficiency") +
theme_test()
# Visualize
greff_dist %>%
#mutate(color = if_else(Day==30, "yes", "no")) %>%
ggplot(aes(x=wuni_dist, y=log(greff_diff))) +
geom_point() +
geom_smooth(method="lm") +
labs(x="Weighted unifrac, rarefied", y="ln Difference in growth efficiency") +
theme_test()
# Visualize
greff_dist %>%
#mutate(color = if_else(Day==30, "yes", "no")) %>%
ggplot(aes(x=wuni_dist, y=log(greff_diff))) +
geom_point() +
geom_smooth(method="lm") +
labs(x="Weighted unifrac, relative abundance normalized", y="ln Difference in growth efficiency") +
theme_test()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results = "show")
knitr::opts_chunk$set(message = FALSE)
# Clear working directory, load in packages, generate package info
rm(list=ls())
library("tidyverse")
library("ape")
library("phyloseq")
library("picante")
sessionInfo()
# Phyloseq object with all growth samples
physeq <- readRDS("../data_intermediate/SFA2_physeq_rare.rds")
# Metadata
meta <- data.frame(sample_data(physeq))
# Growth estimates
growth <- readRDS("../data_intermediate/SFA2_growth_estimates_pap.rds")
# Calculate wunifrac distance
wuni_dist <- distance(physeq, method="wunifrac")
meta_sub <- select(meta, SampleID, Inoculant, Day)
# Reformat
wuni_df <- wuni_dist %>%
as.matrix() %>%
as.data.frame() %>%
rownames_to_column(var="Sample1") %>%
pivot_longer(-Sample1, names_to = "Sample2", values_to = "wuni_dist")
wuni_df <- wuni_df[wuni_df$Sample1 != wuni_df$Sample2,] # remove self-comparisons
# Remove duplicates
# SLOW
# Sort sample1 and sample2 to create a unique label for duplicates regardless of order in columns
all_labels <- as.character()
for (i in 1:nrow(wuni_df)) {
string <- wuni_df[i,] %>%
select(Sample1, Sample2) %>%
as.character() %>%
sort()
label <- paste0(string[1], string[2])
all_labels <- append(all_labels, label)
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results = "show")
knitr::opts_chunk$set(message = FALSE)
# Clear working directory, load in packages, generate package info
rm(list=ls())
library("tidyverse")
library("ape")
library("phyloseq")
library("picante")
sessionInfo()
# Phyloseq object with all growth samples
physeq <- readRDS("../data_intermediate/SFA2_physeq_rare.rds")
# Metadata
meta <- data.frame(sample_data(physeq))
# Growth estimates
growth <- readRDS("../data_intermediate/SFA2_growth_estimates_pap.rds")
# Calculate wunifrac distance
wuni_dist <- distance(physeq, method="wunifrac")
meta_sub <- select(meta, SampleID, Inoculant, Day)
# Reformat
wuni_df <- wuni_dist %>%
as.matrix() %>%
as.data.frame() %>%
rownames_to_column(var="Sample1") %>%
pivot_longer(-Sample1, names_to = "Sample2", values_to = "wuni_dist")
wuni_df <- wuni_df[wuni_df$Sample1 != wuni_df$Sample2,] # remove self-comparisons
# Graph formatting to color time points
meta_format <- data.frame(sample_data(physeq)) %>%
mutate(leveloff = if_else(Day >=9, "pre", "post"),
firstlast = if_else(Day==0, "start", if_else(Day==30, "end", "between")))
physeq_format <- phyloseq(physeq@otu_table, physeq@tax_table, physeq@phy_tree, sample_data(meta_format))
# Ordinate
# Using pcoa because no convergence with nmds
ord_pcoa <- ordinate(physeq_format, method="PCoA", distance=wuni_dist)
# Visualize
plot_ordination(physeq_format, ord_pcoa, color="Inoculant") +
facet_wrap(~Day) +
theme_test()
plot_ordination(physeq_format, ord_pcoa, color="firstlast") +
facet_wrap(~Inoculant) +
theme_test()
# Overall
adonis(wuni_dist~Inoculant*Day, data=meta, permutations=999)
# TP 0
meta_day0 <- meta %>% filter(Day==0)
physeq_day0 <- subset_samples(physeq, Day==0)
wuni_day0 <- distance(physeq_day0, method="wunifrac")
adonis(wuni_day0~Inoculant, data=meta_day0, permutations=999)
# TP 30
meta_day30 <- meta %>% filter(Day==30)
physeq_day30 <- subset_samples(physeq, Day==30)
wuni_day30 <- distance(physeq_day30, method="wunifrac")
adonis(wuni_day30~Inoculant, data=meta_day30, permutations=999)
