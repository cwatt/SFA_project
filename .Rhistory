geom_point()
growth_asv %>%
ggplot(aes(x=reorder(Phylum, -k), y=k)) +
geom_point() +
theme_test() +
theme(axis.text.x = element_text(angle=45))
growth_asv %>%
ggplot(aes(x=reorder(Phylum, -k), y=k)) +
geom_point() +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
ggplot(aes(x=reorder(Phylum, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
ggplot(aes(x=reorder(Order, -k), y=k, color=Phylum)) +
geom_jitter(width=0.1, height=0) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
ggplot(aes(x=reorder(Order, Phylum), y=k, color=Phylum)) +
geom_jitter(width=0.1, height=0) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
ggplot(aes(x=reorder(Order, Phylum), y=k)) +
geom_jitter(width=0.1, height=0) +
facet_wrap(~Phylum) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
filter(Phylum=="Actinobacteriota")
growth_asv %>%
filter(Phylum=="Actinobacteriota") +
ggplot(aes(x=reorder(Order, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
facet_wrap(~Phylum) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
filter(Phylum=="Actinobacteriota") %>%
ggplot(aes(x=reorder(Order, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
facet_wrap(~Phylum) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
filter(Order=="Streptomycetales") %>%
ggplot(aes(x=reorder(Order, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
facet_wrap(~Phylum) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
filter(Order=="Streptomycetales") %>%
ggplot(aes(x=reorder(Genus, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
facet_wrap(~Phylum) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
filter(Order=="Streptomycetales") %>%
ggplot(aes(x=reorder(Species, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
facet_wrap(~Phylum) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(phyloseq)
library(vegan)
library(ape)
sessionInfo()
rm(list=ls())
growth <- readRDS("../data_intermediate/SFA2_growth_estimates_pap2.rds")
growth_asv <- growth %>% # average across inoculants
group_by(ASV, Phylum, Class, Order, Family, Genus, Species) %>%
summarize(k = mean(k))
physeq <- readRDS("../data_intermediate/SFA2_physeq_unrare.rds")
growth_asv %>%
ggplot(aes(x=reorder(Phylum, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
ggplot(aes(x=reorder(Order, Phylum), y=k)) +
geom_jitter(width=0.1, height=0) +
facet_wrap(~Phylum) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
filter(Phylum=="Actinobacteriota") %>%
ggplot(aes(x=reorder(Order, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
facet_wrap(~Phylum) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
filter(Order=="Streptomycetales") %>%
ggplot(aes(x=reorder(Species, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
facet_wrap(~Phylum) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
filter(Order=="Streptomycetales") %>%
ggplot(aes(x=reorder(Family, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
facet_wrap(~Phylum) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
filter(Order=="Streptomycetales") %>%
ggplot(aes(x=reorder(Genus, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
facet_wrap(~Phylum) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
filter(Order=="Firmicutes") %>%
ggplot(aes(x=reorder(Genus, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
facet_wrap(~Phylum) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
filter(Phylum=="Firmicutes") %>%
ggplot(aes(x=reorder(Genus, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
facet_wrap(~Phylum) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
filter(Phylum=="Firmicutes") %>%
ggplot(aes(x=reorder(Genus, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
facet_wrap(~Phylum) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
ggplot(aes(x=reorder(Class, Phylum), y=k)) +
geom_jitter(width=0.1, height=0) +
facet_wrap(~Phylum) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv %>%
filter(Order=="Micrococcales") %>%
ggplot(aes(x=reorder(Genus, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
facet_wrap(~Phylum) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1))
growth_asv
growth_asvs <- growth_asv$ASV
physeq_gr <- prune_taxa(physeq, ASV %in% growth_asvs)
physeq
physeq_gr <- prune_taxa(physeq, OTU %in% growth_asvs)
physeq_gr <- prune_taxa(physeq, ASV %in% growth_asvs)
physeq_gr <- filter_taxa(physeq, ASV %in% growth_asvs)
# Calculate phylogenetic distances
tree <- phy_tree(physeq)
tree
physeq
x <- filter_taxa(physeq, ASV %in% growth_asvs)
growth_asvs
x <- subset_taxa(physeq, ASV %in% growth_asvs)
x
physeq_gr <- subset_taxa(physeq, ASV %in% growth_asvs)
tree_gr <- phy_tree(physeq_gr)
# Calculate phylogenetic distances
phylo_dist <- cophenetic(tree_gr)
phylO-dist
phylo_dist
tree_gr$tip.label
growth_asvs
phylo_dist
str(phylo_dist)
phylo_dist[upper.tri(phylo_dist, diag=TRUE)] = NA
phylo_dist
growth_asv
?dist
# Calculate growth rate distances
growth_slim <- select(growth_asv, ASV, k)
growth_slim
growth_slm
growth_slim
growth_asv <- growth %>% # average across inoculants
group_by(ASV, Phylum, Class, Order, Family, Genus, Species) %>%
summarize(k = mean(k)) %>%
ungroup()
# Calculate growth rate distances
growth_slim <- select(growth_asv, ASV, k)
gr_dist <- as.matrix(dist(growth_slim), labels=TRUE)
gr_dist
growth_slim
# Calculate growth rate distances
growth_slim <- select(growth_asv, ASV, k) %>%
column_to_rownames()
?column_to_rownames
library(tibble)
# Calculate growth rate distances
growth_slim <- select(growth_asv, ASV, k) %>%
column_to_rownames(ASV)
# Calculate growth rate distances
growth_slim <- select(growth_asv, ASV, k) %>%
column_to_rownames(var="ASV")
growth_slim
gr_dist <- as.matrix(dist(growth_slim), labels=TRUE)
gr_dist
# Mantel correlog
gr_phylo_crlg <- mantel.correlog(phylo_dist, gr_dist)
gr_phylo_crlg
gr_dist[upper.tri(gr_dist, diag=TRUE)] = NA # remove upper triangle of dist (redundant)
gr_dist
gr_phylo_crlg
View(gr_phylo_crlg)
# Mantel correlog
gr_phylo_crlg <- mantel.correlog(phylo_dist, gr_dist) %>%
gr_phylo_crlg <- data.frame(gr_phylo_crlg)
# Mantel correlog
gr_phylo_crlg <- mantel.correlog(phylo_dist, gr_dist)
gr_phylo_crlg <- data.frame(gr_phylo_crlg)
gr_phylo_crlg <- as.data.frame(gr_phylo_crlg)
gr_phylo_crlg_df <- data.frame(gr_phylo_crlg$mantel.res)
gr_phylo_crlg_df
View(gr_dist)
View(phylo_dist)
tree_gr
tree_gr$tip.label
?mantel.correlog
gr_phylo_crlg_df <- data.frame(gr_phylo_crlg$mantel.res) %>%
mutate(sig = if_else(Pr.corrected. <= 0.05, "sig", "ns")) %>%
filter(!is.na(Pr.corrected.))
gr_phylo_crlg_df
gr_phylo_crlg_df %>%
ggplot(aes(x=class.index, y=Mantel.corr, shape=sig)) +
geom_point() +
theme_test()
gr_phylo_crlg_df %>%
ggplot(aes(x=class.index, y=Mantel.cor, shape=sig)) +
geom_point() +
theme_test()
gr_phylo_crlg_df %>%
ggplot(aes(x=class.index, y=Mantel.cor, shape=sig)) +
geom_point() +
geom_hline(yintercept = 0, linetype=2, color="gray")
gr_phylo_crlg_df %>%
ggplot(aes(x=class.index, y=Mantel.cor, shape=sig)) +
geom_point() +
geom_hline(yintercept = 0, linetype=2, color="gray") +
theme_test()
phylo_dist
str(phylo_dist)
phylo_dist_df <- data.frame(phylo_dist)
phylo_dist_df
?pivot_longer
phylo_dist_df <- data.frame(phylo_dist) %>%
pivot_longer(cols=everything(), names_to="ASV2", values_to="dist")
phylo_dist_df
phylo_dist_df <- data.frame(phylo_dist) %>%
rownames_to_column(var="ASV1")
phylo_dist_df
phylo_dist_df <- data.frame(phylo_dist) %>%
rownames_to_column(var="ASV1") %>%
pivot_longer(cols=-ASV1, names_to="ASV2", values_to="dist")
phylo_dist_df
phylo_dist_df <- data.frame(phylo_dist) %>%
rownames_to_column(var="ASV1") %>%
pivot_longer(cols=-ASV1, names_to="ASV2", values_to="dist") %>%
filter(!is.na(dist))
phylo_dist_df
phylo_dist_long <- data.frame(phylo_dist) %>%
rownames_to_column(var="ASV1") %>%
pivot_longer(cols=-ASV1, names_to="ASV2", values_to="dist") %>%
filter(!is.na(dist)) %>%
mutate(ASV2 = gsub("X", "", match.case=TRUE))
phylo_dist_long <- data.frame(phylo_dist) %>%
rownames_to_column(var="ASV1") %>%
pivot_longer(cols=-ASV1, names_to="ASV2", values_to="dist") %>%
filter(!is.na(dist)) %>%
mutate(ASV2 = gsub("X", "", ASV2, match.case=TRUE))
?gsub
phylo_dist_long <- data.frame(phylo_dist) %>%
rownames_to_column(var="ASV1") %>%
pivot_longer(cols=-ASV1, names_to="ASV2", values_to="dist") %>%
filter(!is.na(dist)) %>%
mutate(ASV2 = gsub("X", "", ASV2))
phylo_dist_long
phylo_dist_long <- data.frame(phylo_dist) %>%
rownames_to_column(var="ASV1") %>%
pivot_longer(cols=-ASV1, names_to="ASV2", values_to="dist") %>%
filter(!is.na(dist)) %>%
mutate(ASV2 = gsub("^X", "", ASV2)) # remove coerced X in asv names
phylo_dist_long
View(phylo_dist_long)
gr_dist_long <- data.frame(gr_dist) %>%
rownames_to_column(var="ASV1") %>%
pivot_longer(cols=-ASV1, names_to="ASV2", values_to="dist") %>%
filter(!is.na(dist)) %>%
mutate(ASV2 = gsub("^X", "", ASV2)) # remove coerced X at start of some ASV names
gr_dist_long
# Long format
phylo_dist_long <- data.frame(phylo_dist) %>%
rownames_to_column(var="ASV1") %>%
pivot_longer(cols=-ASV1, names_to="ASV2", values_to="dist_phylo") %>%
filter(!is.na(dist)) %>%
mutate(ASV2 = gsub("^X", "", ASV2)) # remove coerced X at start of some ASV names
phylo_dist_long
gr_dist_long <- data.frame(gr_dist) %>%
rownames_to_column(var="ASV1") %>%
pivot_longer(cols=-ASV1, names_to="ASV2", values_to="dist_gr") %>%
filter(!is.na(dist)) %>%
mutate(ASV2 = gsub("^X", "", ASV2)) # remove coerced X at start of some ASV names
gr_dist_long
# combine
gr_phylo_dist_long <- inner_join(phylo_dist_long, gr_dist_long)
phylo_dist_long
# Long format
phylo_dist_long <- data.frame(phylo_dist) %>%
rownames_to_column(var="ASV1") %>%
pivot_longer(cols=-ASV1, names_to="ASV2", values_to="dist_phylo") %>%
filter(!is.na(dist_phylo)) %>%
mutate(ASV2 = gsub("^X", "", ASV2)) # remove coerced X at start of some ASV names
phylo_dist_long
gr_dist_long <- data.frame(gr_dist) %>%
rownames_to_column(var="ASV1") %>%
pivot_longer(cols=-ASV1, names_to="ASV2", values_to="dist_gr") %>%
filter(!is.na(dist_gr)) %>%
mutate(ASV2 = gsub("^X", "", ASV2)) # remove coerced X at start of some ASV names
gr_dist_long
# combine
gr_phylo_dist_long <- inner_join(phylo_dist_long, gr_dist_long)
gr_phylo_dist_long
gr_phylo_dist_long %>%
ggplot(aes(x=dist_phylo, y=dist_gr)) +
geom_point() +
theme_test()
gr_phylo_dist_long %>%
ggplot(aes(x=dist_phylo, y=dist_gr)) +
geom_point() +
geom_smooth(method="lm")
gr_phylo_dist_long %>%
ggplot(aes(x=dist_phylo, y=dist_gr)) +
geom_point() +
theme_test()
gr_phylo_dist_long %>%
ggplot(aes(x=dist_phylo, y=log(dist_gr))) +
geom_point() +
theme_test()
gr_phylo_dist_long %>%
ggplot(aes(x=dist_phylo, y=dist_gr)) +
geom_point() +
theme_test()
cor.test(gr_phylo_dist_long$dist_phylo, gr_phylo_dist_long$dist_gr, method="Pearson")
cor.test(gr_phylo_dist_long$dist_phylo, gr_phylo_dist_long$dist_gr, method="pearson")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
growth_asv %>%
ggplot(aes(x=reorder(Phylum, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1, size=10),
axis.text.y = element_text(size=10))
phy_plot <- growth_asv %>%
ggplot(aes(x=reorder(Phylum, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1, size=10),
axis.text.y = element_text(size=10))
phy_plot
ggsave(phy_plot, file="../figures/suppfig_phylak.svg", units="mm", width=90, height=90, device="svg")
ggsave(phy_plot, file="../figures/suppfig_phylak.svg", units="mm", width=90, height=90, device="svg")
ggsave(phy_plot, file="../figures/suppfig_phylak.svg", units="mm", width=120, height=90, device="svg")
phy_plot <- growth_asv %>%
ggplot(aes(x=reorder(Phylum, -k), y=k)) +
geom_jitter(width=0.1, height=0) +
theme_test() +
theme(axis.text.x = element_text(angle=45, hjust=1, size=9),
axis.text.y = element_text(size=10))
phy_plot
ggsave(phy_plot, file="../figures/suppfig_phylak.svg", units="mm", width=120, height=90, device="svg")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
# Clear working directory, load in packages, generate package info
rm(list=ls())
library("phyloseq")
library("vegan")
library("tidyverse")
library("lmerTest")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
# Clear working directory, load in packages, generate package info
rm(list=ls())
library("dplyr")
library("ggplot")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
# Clear working directory, load in packages, generate package info
rm(list=ls())
library("dplyr")
library("ggplot")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
# Clear working directory, load in packages, generate package info
rm(list=ls())
library("dplyr")
library("ggplot")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
# Clear working directory, load in packages, generate package info
rm(list=ls())
library("dplyr")
library("ggplot2")
library("phyloseq")
library("vegan")
library("lmerTest")
library("cowplot")
sessionInfo()
# Rarefied phyloseq
physeq <- readRDS("../data_intermediate/SFA2_physeq_rare.rds")
# Taxonomy (takes a long time to extract from phyloseq as data frame)
tax <- readRDS("../data_intermediate/SFA2_taxonomy.rds")
meta <- data.frame(sample_data(physeq))
meta_expstat <- mutate(meta, phase = if_else(Day <= 9, "exponential", "stationary"))
physeq_expstat <- phyloseq(otu_table(physeq), tax_table(physeq), physeq@phy_tree, sample_data(meta_expstat))
# Extract data from phyloseq
count_expstat <- data.frame(otu_table(physeq_expstat)) %>%
rownames_to_column(var="ASV") %>%
gather(SampleID, count, -ASV)
# Combine
count_tax_meta <- inner_join(count_expstat, tax) %>%
inner_join(meta_expstat, by="SampleID") %>%
mutate(Inoculant = as_factor(Inoculant)) %>%
mutate(across(Domain:Species, ~as.character(.x))) %>%
filter(ASV != "445e8681c3c1a735760e6c394f5f4d0a") # remove spike-in
?as_factor
library("forcats")
# Richness
richday_lm <- lm(log(richness) ~ Day + (1|Inoculant), data=alpha_day)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
# Clear working directory, load in packages, generate package info
rm(list=ls())
library("dplyr")
library("ggplot2")
library("forcats")
library("phyloseq")
library("vegan")
library("lmerTest")
library("cowplot")
sessionInfo()
# Rarefied phyloseq
physeq <- readRDS("../data_intermediate/SFA2_physeq_rare.rds")
# Taxonomy (takes a long time to extract from phyloseq as data frame)
tax <- readRDS("../data_intermediate/SFA2_taxonomy.rds")
meta <- data.frame(sample_data(physeq))
meta_expstat <- mutate(meta, phase = if_else(Day <= 9, "exponential", "stationary"))
physeq_expstat <- phyloseq(otu_table(physeq), tax_table(physeq), physeq@phy_tree, sample_data(meta_expstat))
# Extract data from phyloseq
count_expstat <- data.frame(otu_table(physeq_expstat)) %>%
rownames_to_column(var="ASV") %>%
gather(SampleID, count, -ASV)
# Combine
count_tax_meta <- inner_join(count_expstat, tax) %>%
inner_join(meta_expstat, by="SampleID") %>%
mutate(Inoculant = as_factor(Inoculant)) %>%
mutate(across(Domain:Species, ~as.character(.x))) %>%
filter(ASV != "445e8681c3c1a735760e6c394f5f4d0a") # remove spike-in
# Reformat counts to be compatible with vegan
count_tax_meta_wide <- count_tax_meta %>%
select(ASV, SampleID, count) %>%
pivot_wider(names_from="ASV", values_from="count") %>%
column_to_rownames(var="SampleID")
# Calculate
shannon <- diversity(count_tax_meta_wide, "shannon")
richness <- specnumber(count_tax_meta_wide)
evenness <- shannon/log(richness)
# Add evennness values to data
even_df <- data.frame(evenness) %>%
rownames_to_column(var="SampleID")
alpha_df <- data.frame(richness) %>%
rownames_to_column(var="SampleID") %>%
inner_join(even_df)
# Add Shannon's diversity index
alpha_df <- data.frame(shannon) %>%
rownames_to_column(var="SampleID") %>%
inner_join(alpha_df)
# Add metadata
alpha_df <- inner_join(alpha_df, meta_expstat) %>%
mutate(phase = as_factor(phase),
phase = fct_relevel(phase, levels=c("pre", "post")))
alpha_df
head(alpha_df)
head(meta_expstat)
inner_join(alpha_df, meta_expstat)
# Add metadata
alpha_df <- inner_join(alpha_df, meta_expstat) %>%
mutate(phase = as_factor(phase),
phase = fct_relevel(phase, levels=c("pre", "post")))
