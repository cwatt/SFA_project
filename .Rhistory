amb[[i]] <- raw.data[[i]][rownames(raw.data[[i]]) %in% grep(paste(match, collapse="|"), rownames(raw.data[[i]]), value=TRUE),]
amb[[i]] <- cbind(amb[[i]])
colnames(amb[[i]]) <- "area"
amb[[i]] <- mutate(data.frame(amb[[i]]), date = date[[i]]) # add date info
}
amb.df <- data.frame()
for (i in names(amb)) {
amb.df <- rbind(amb.df, amb[[i]])
}
amb.df$area <- as.numeric(amb.df$area)
# Summary statistics
amb.avg <- mean(amb.df$area)
amb.sd <- sd(amb.df$area)
amb_min <- amb.avg-(2*amb.sd)
amb_max <- amb.avg+(2*amb.sd)
# Remove outliers
amb.rm.df <- filter(amb.df, !(amb.df$area < amb_min | amb.df$area > amb_max))
# no outliers
amb.value <- mean(amb.rm.df$area)
# All ambient data
ggplot(amb.rm.df, aes(x=date, y=area)) +
geom_point() +
labs(title="Ambient air") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Where does ambient fall on stds?
ggplot(stds.rm.df, aes(x=ppm, y=area.conv)) +
geom_point() +
labs(title="CO2 standards without outliers") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_text(aes(label=std),hjust=0, vjust=0) +
geom_hline(yintercept=amb.value)
# Ambient data looks very high to me?
# Extract sample data
samples <- list()
for (i in names(raw.data)) {
match <- c("std.*", "ambient")
samples[[i]] <- raw.data[[i]][!rownames(raw.data[[i]]) %in% grep(paste(match, collapse="|"), rownames(raw.data[[i]]), value=TRUE),]
samples[[i]] <- cbind(samples[[i]])
colnames(samples[[i]]) <- "area"
samples[[i]] <- mutate(data.frame(samples[[i]]), id = rownames(data.frame(samples[[i]]))) # add sample names as column
samples[[i]] <- mutate(data.frame(samples[[i]]), date = date[[i]]) # add date info
}
# Smoosh all samples into one dataframe
samples.df <- data.frame()
for (i in names(samples)) {
samples.df <- rbind(samples.df, samples[[i]])
}
# Split into replicates
rep1 <- c(1:13)
rep2 <- c(14:26)
rep3 <- c(27:39)
rep1.df <- samples.df[samples.df$id %in% rep1,]
rep2.df <- samples.df[samples.df$id %in% rep2,]
rep3.df <- samples.df[samples.df$id %in% rep3,]
# Replicate labelling
rep1.df$id <- as.numeric(rep1.df$id)
rep1.df <- rep1.df[order(rep1.df$id),]
rep1.df <- rep1.df[order(rep1.df$date),]
rep2.df$id <- as.numeric(rep2.df$id)
rep2.df <- rep2.df[order(rep2.df$id),]
rep2.df <- rep2.df[order(rep2.df$date),]
rep3.df$id <- as.numeric(rep3.df$id)
rep3.df <- rep3.df[order(rep3.df$id),]
rep3.df <- rep3.df[order(rep3.df$date),]
rep1.df$rep <- paste(rep(1, nrow(rep1.df)))
rep2.df$rep <- paste(rep(2, nrow(rep2.df)))
rep3.df$rep <- paste(rep(3, nrow(rep3.df)))
# Sample number labeling
samplenum <- c(1:13)
rep1.df$sample <- paste(rep(samplenum, length(unique(rep1.df$date))))
rep2.df$sample <- paste(rep(samplenum, length(unique(rep2.df$date))))
rep3.df$sample <- paste(rep(samplenum, length(unique(rep3.df$date))))
# Rejoin data
samples.df <- rbind(rep1.df, rep2.df, rep3.df)
samples.df$sample <- as.factor(samples.df$sample)
samples.df$rep <- as.factor(samples.df$rep)
samples.df$date <- as.factor(samples.df$date)
samples.df$area <- as.numeric(samples.df$area)
# Apply conversion to samples
samples.df <- mutate(samples.df, ppm = (area - stds.conv.df[1,2])/stds.conv.df[2,2])
presconv <- (34.17/36.17)/(37.3/39.3)
samples.df <- mutate(samples.df, ppm.conv = ppm*presconv)
# EXPLANATION: I used evacuated sample vials to transfer headspace samples from stds and ucosms. Because the stds did not have sand in them, the pressure change when the gas was shared between std and vial was different (lower shared atm) than between ucosm and vial. The ppm value achieved using the standard curve formula is therefore a slight overestimation, which can be corrected by knowing the starting and shared volumes of the std and ucosms during sampling.
# Calculation: Volume of sample vial = 2 mL, volume of stds = 37.3 mL, headspace volume of ucosms = 34.17. Std vial pressure change = 37.3/39.3 while ucosm vial pressure change = 34.17/36.17. This means that the ratio of these is the conversion needed to correct for these pressure change differences.
# Distinguish negative controls
samples.df <- mutate(samples.df, type = ifelse(samples.df$sample==13, "negative", "sample"))
# TP0 value
## using as subtractant for each time point because ambient values are weirdly high
tp0 <- samples.df %>%
filter(date=="062420") %>% # tp0 only
mutate(ppm.conv2 = if_else(ppm.conv < 0, 0, ppm.conv)) %>%
summarize(ppm.mean = mean(ppm.conv2, na.rm=TRUE)) %>%
as.numeric()
# Subtract tp0 CO2 from each time point
samples.df <- mutate(samples.df, ppm.amb = ppm.conv-tp0)
# Convert negative values to 0
samples.df <- mutate(samples.df, ppm.final = if_else(ppm.amb < 0, 0, ppm.amb))
# Graph ppm per day
ggplot(samples.df, aes(x=sample, y=ppm.final, color=type)) +
geom_boxplot() +
facet_wrap(~date) +
labs(title="Headspace sample respiration by day", y="CO2 ppm") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Convert ppm to mol CO2
# Ideal gas law: n=(P*V)/(R*temp)
# NOTE: pressure does not matter for this calulation because it's all relative to the stds
R = 0.082057338 # universal gas constant, (L*atm)/(mol*K)
temp = 296.48 # K, 74F in lab throughout experiment
V = 0.03417 # L, headspace of 30 mL serum bottle with 5 g sand
mwCO2 = 44.01 # molecular weight of CO2
mwC = 12.011 # molecular weight of C
# P = 1 atm, assumes 1 atm in ucosms during sampling
molCO2 <- 1*V/(R*temp)
mgCO2 <- molCO2*mwCO2*1000 # NOTE: This is the mg of CO2 present if the headspace contained 100% (1000000 ppm) CO2 at 1 atm
samples.df <- mutate(samples.df, CO2mg=mgCO2*(ppm.final*10^-6)) # mg CO2 for each sample based on ppm measured at each time point
# Sum all time points
totalresp.df <- samples.df %>% group_by(id, sample, rep) %>% summarize(CO2.total = sum(CO2mg))
# Add DOC phenotype
totalresp.df <- mutate(totalresp.df, DOC_pheno = case_when(sample == "2" ~ "high",
sample == "4" ~ "high",
sample == "19" ~ "high",
sample == "42" ~ "high",
sample == "47" ~ "high",
sample == "50" ~ "high",
sample == "31" ~ "low",
sample == "32" ~ "low",
sample == "41" ~ "low",
sample == "10" ~ "low",
sample == "12" ~ "low",
sample == "17" ~ "low",
sample == "51" ~ "negative"))
head(totalresp.df)
# New sample labels
totalresp.df$id <- rownames(totalresp.df)
head(totalresp.df)
tail(totalresp.df)
meta <- read.csv("data_DOC/SFA1.5/SFA1.5_DOC_metadata.csv")
head(meta)
?inner_join
totalresp.meta <- inner_join(meta, totalresp.df, by=c("id" = "ucosm"))
totalresp.meta <- inner_join(meta, totalresp.df, by=c("ucosm"="id"))
head(meta)
meta <- read_csv("data_DOC/SFA1.5/SFA1.5_DOC_metadata.csv")
totalresp.meta <- inner_join(meta, totalresp.df, by=c("ucosm"="id"))
head(totalresp.df)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(results = "hide")
knitr::opts_knit$set(root.dir = 'home/cassi/SFAgrowthrate/SFAphase1.5/GCMS/data/')
library(tidyverse)
library(broom)
rm(list=ls())
sessionInfo()
# Import data
# List of directories containing data files
dir <- list.dirs(path="~/SFAgrowthrate/data_CO2/SFA1.5/data", full.names=TRUE, recursive=FALSE)
files <- list()
for (i in dir) {
files[[i]] <- list.files(path=i, pattern="*.txt", full.names=TRUE, recursive=FALSE)
}
# NOTE: foo files were removed from directories (do not contain data)
# Extract TIC area
name.list <- list()
area.list <- list()
for (i in names(files)) {
for (x in files[[i]]) {
name <- str_extract(x, "data/.+/.+.txt") # not catching those dates for some reason?
name <- gsub("data/.+/", "", name)
name <- gsub(".txt", "", name)
name.list[[i]] <- append(name.list[[i]], name)
t <- read.table(x, header=FALSE, fill=TRUE, sep="\t", skip=8, nrows=3, comment.char="", stringsAsFactors=FALSE) # error, no lines
t <- t[1,10] # TIC area
t <- as.data.frame(t)
area.list[[i]] <- append(area.list[[i]], t)
}
}
# Convert into dataframes
raw.data <- list()
for (i in names(files)) {
raw.data[[i]] <- cbind(area.list[[i]])
rownames(raw.data[[i]]) <- name.list[[i]]
#raw.data[[i]] <- cbind(raw.data[[i]])
colnames(raw.data[[i]]) <- "area"
}
# Date info
date <- list()
for (i in names(files)) {
date[[i]] <- str_extract(i, "data/.+")
date[[i]] <- gsub("data/", "", date[[i]])
}
# Standards
# Extract standards from each time point
stds <- list()
for (i in names(raw.data)) {
match <- c("std.*")
stds[[i]] <- raw.data[[i]][rownames(raw.data[[i]]) %in% grep(paste(match, collapse="|"), rownames(raw.data[[i]]), value=TRUE),]
stds[[i]] <- cbind(stds[[i]])
colnames(stds[[i]]) <- "area"
stds[[i]] <- mutate(data.frame(stds[[i]]), std = rownames(data.frame(stds[[i]]))) # add std names as column
stds[[i]] <- mutate(data.frame(stds[[i]]), date = date[[i]]) # add date info
}
# Smoosh all stds into one dataframe
stds.df <- data.frame()
for (i in names(stds)) {
stds.df <- rbind(stds.df, stds[[i]])
}
# Add ppm info to stds dataframe
stds.df$ppm <- ifelse(stds.df$std == "std0", 0, ifelse(stds.df$std == "std1", 804.3, ifelse(stds.df$std == "std2", 1609,
ifelse(stds.df$std == "std3", 3217, ifelse(stds.df$std == "std4", 8045,
ifelse(stds.df$std == "std5", 16085, ifelse(stds.df$std == "std6", 32170, ifelse(stds.df$std == "std7", 80430,
ifelse(stds.df$std == "std8", 241300, ifelse(stds.df$std == "std9", 402100, NA))))))))))
# NOTE: ppm is calculated based on the % CO2 used to make the standard (1% for stds1-3, 5% for stds4-6, 100% for stds7-9) and the avg vol of a 30 mL serum bottle (37.3 mL)
# EXAMPLE: 3 mL/37.3 mL = 0.08043, 1% CO2 = 10,000 ppm, 10,000 ppm * 0.08043 = 804.3 ppm in std1
# Adjust for 90% split ratio stds 8 and 9 (too concentrated for GCMS to handle), other stds run at 50% split ratio
# multiplier = 1.8, based on 0.9x=0.5, x=0.5555, 1/x=1.8
stds.df$area <- as.numeric(stds.df$area)
stds.df <- mutate(stds.df, area.conv = ifelse(std=="std8", area*1.8, ifelse(std=="std9", area*1.8, area*1)))
# Graph standards
# by date
ggplot(stds.df, aes(x=ppm, y=area.conv)) +
geom_point() +
facet_wrap(~date) +
labs(title="CO2 standards by date") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_text(aes(label=std),hjust=0, vjust=0)
# all together
ggplot(stds.df, aes(x=ppm, y=area.conv)) +
geom_point() +
labs(title="CO2 standards") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_text(aes(label=std),hjust=0, vjust=0)
# Identify outliers
stds.out.graphs <- list()
for (i in unique(stds.df$std)) {
stds.out.graphs[[i]] <- ggplot(stds.df[stds.df$std==i,], aes(x=ppm, y=area.conv)) +
geom_boxplot() +
facet_grid(.~std, scales="free") +
geom_text(aes(label=date), hjust=1, vjust=0, size=3)
}
# Remove NA values
stds.nona.df <- na.omit(stds.df)
# Summary statistics
stds.summary.df <- stds.nona.df %>% group_by(std) %>% summarise(mean = mean(area.conv), sd=sd(area))
stds.summary.df <- mutate(stds.summary.df, cutoff=sd*2) # defining outliers outside 2 standard deviations of mean
stds.summary.df <- mutate(stds.summary.df, cutoff_min=mean-cutoff)
stds.summary.df <- mutate(stds.summary.df, cutoff_max=mean+cutoff)
# Remove outliers based on cutoffs
stds.rm.df <- data.frame()
for (i in stds.summary.df$std) {
x <- filter(stds.nona.df[stds.nona.df$std==i,], !(area.conv < stds.summary.df$cutoff_min[stds.summary.df$std==i] | area.conv > stds.summary.df$cutoff_max[stds.summary.df$std==i])) # remove outliers
stds.rm.df <- rbind(x, stds.rm.df)
}
# Graph without outliers
ggplot(stds.rm.df, aes(x=ppm, y=area.conv)) +
geom_point() +
labs(title="CO2 standards without outliers") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_text(aes(label=std),hjust=0, vjust=0)
# First, check if standard data has signficant trend across days
## all data
day.anova <- summary(aov(area.conv ~ date, stds.df))
day.anova
# P = 1, not significant
# removed outliers
day.rm.anova <- summary(aov(area.conv ~ date, stds.rm.df))
day.rm.anova
# P = 0.979
# No trend by day, good to combine data across time points
# Linear regression
stds.conv <- lm(area.conv ~ ppm, data=stds.rm.df)
summary(stds.conv)
# Adj. R-squared = 0.985
plot(area.conv ~ ppm, data=stds.rm.df, main="Calibration curve") + abline(stds.conv)
stds.conv.df <- as.data.frame(tidy(stds.conv))
# Isolate ambient samples
amb <- list()
match <- c("ambient")
for (i in names(raw.data)) {
amb[[i]] <- raw.data[[i]][rownames(raw.data[[i]]) %in% grep(paste(match, collapse="|"), rownames(raw.data[[i]]), value=TRUE),]
amb[[i]] <- cbind(amb[[i]])
colnames(amb[[i]]) <- "area"
amb[[i]] <- mutate(data.frame(amb[[i]]), date = date[[i]]) # add date info
}
amb.df <- data.frame()
for (i in names(amb)) {
amb.df <- rbind(amb.df, amb[[i]])
}
amb.df$area <- as.numeric(amb.df$area)
# Summary statistics
amb.avg <- mean(amb.df$area)
amb.sd <- sd(amb.df$area)
amb_min <- amb.avg-(2*amb.sd)
amb_max <- amb.avg+(2*amb.sd)
# Remove outliers
amb.rm.df <- filter(amb.df, !(amb.df$area < amb_min | amb.df$area > amb_max))
# no outliers
amb.value <- mean(amb.rm.df$area)
# All ambient data
ggplot(amb.rm.df, aes(x=date, y=area)) +
geom_point() +
labs(title="Ambient air") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Where does ambient fall on stds?
ggplot(stds.rm.df, aes(x=ppm, y=area.conv)) +
geom_point() +
labs(title="CO2 standards without outliers") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_text(aes(label=std),hjust=0, vjust=0) +
geom_hline(yintercept=amb.value)
# Ambient data looks very high to me?
# Extract sample data
samples <- list()
for (i in names(raw.data)) {
match <- c("std.*", "ambient")
samples[[i]] <- raw.data[[i]][!rownames(raw.data[[i]]) %in% grep(paste(match, collapse="|"), rownames(raw.data[[i]]), value=TRUE),]
samples[[i]] <- cbind(samples[[i]])
colnames(samples[[i]]) <- "area"
samples[[i]] <- mutate(data.frame(samples[[i]]), id = rownames(data.frame(samples[[i]]))) # add sample names as column
samples[[i]] <- mutate(data.frame(samples[[i]]), date = date[[i]]) # add date info
}
# Smoosh all samples into one dataframe
samples.df <- data.frame()
for (i in names(samples)) {
samples.df <- rbind(samples.df, samples[[i]])
}
# Split into replicates
rep1 <- c(1:13)
rep2 <- c(14:26)
rep3 <- c(27:39)
rep1.df <- samples.df[samples.df$id %in% rep1,]
rep2.df <- samples.df[samples.df$id %in% rep2,]
rep3.df <- samples.df[samples.df$id %in% rep3,]
# Replicate labelling
rep1.df$id <- as.numeric(rep1.df$id)
rep1.df <- rep1.df[order(rep1.df$id),]
rep1.df <- rep1.df[order(rep1.df$date),]
rep2.df$id <- as.numeric(rep2.df$id)
rep2.df <- rep2.df[order(rep2.df$id),]
rep2.df <- rep2.df[order(rep2.df$date),]
rep3.df$id <- as.numeric(rep3.df$id)
rep3.df <- rep3.df[order(rep3.df$id),]
rep3.df <- rep3.df[order(rep3.df$date),]
rep1.df$rep <- paste(rep(1, nrow(rep1.df)))
rep2.df$rep <- paste(rep(2, nrow(rep2.df)))
rep3.df$rep <- paste(rep(3, nrow(rep3.df)))
# Sample number labeling
samplenum <- c(1:13)
rep1.df$sample <- paste(rep(samplenum, length(unique(rep1.df$date))))
rep2.df$sample <- paste(rep(samplenum, length(unique(rep2.df$date))))
rep3.df$sample <- paste(rep(samplenum, length(unique(rep3.df$date))))
# Rejoin data
samples.df <- rbind(rep1.df, rep2.df, rep3.df)
samples.df$sample <- as.factor(samples.df$sample)
samples.df$rep <- as.factor(samples.df$rep)
samples.df$date <- as.factor(samples.df$date)
samples.df$area <- as.numeric(samples.df$area)
# Apply conversion to samples
samples.df <- mutate(samples.df, ppm = (area - stds.conv.df[1,2])/stds.conv.df[2,2])
presconv <- (34.17/36.17)/(37.3/39.3)
samples.df <- mutate(samples.df, ppm.conv = ppm*presconv)
# EXPLANATION: I used evacuated sample vials to transfer headspace samples from stds and ucosms. Because the stds did not have sand in them, the pressure change when the gas was shared between std and vial was different (lower shared atm) than between ucosm and vial. The ppm value achieved using the standard curve formula is therefore a slight overestimation, which can be corrected by knowing the starting and shared volumes of the std and ucosms during sampling.
# Calculation: Volume of sample vial = 2 mL, volume of stds = 37.3 mL, headspace volume of ucosms = 34.17. Std vial pressure change = 37.3/39.3 while ucosm vial pressure change = 34.17/36.17. This means that the ratio of these is the conversion needed to correct for these pressure change differences.
# Distinguish negative controls
samples.df <- mutate(samples.df, type = ifelse(samples.df$sample==13, "negative", "sample"))
# TP0 value
## using as subtractant for each time point because ambient values are weirdly high
tp0 <- samples.df %>%
filter(date=="062420") %>% # tp0 only
mutate(ppm.conv2 = if_else(ppm.conv < 0, 0, ppm.conv)) %>%
summarize(ppm.mean = mean(ppm.conv2, na.rm=TRUE)) %>%
as.numeric()
# Subtract tp0 CO2 from each time point
samples.df <- mutate(samples.df, ppm.amb = ppm.conv-tp0)
# Convert negative values to 0
samples.df <- mutate(samples.df, ppm.final = if_else(ppm.amb < 0, 0, ppm.amb))
# Graph ppm per day
ggplot(samples.df, aes(x=sample, y=ppm.final, color=type)) +
geom_boxplot() +
facet_wrap(~date) +
labs(title="Headspace sample respiration by day", y="CO2 ppm") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Convert ppm to mol CO2
# Ideal gas law: n=(P*V)/(R*temp)
# NOTE: pressure does not matter for this calulation because it's all relative to the stds
R = 0.082057338 # universal gas constant, (L*atm)/(mol*K)
temp = 296.48 # K, 74F in lab throughout experiment
V = 0.03417 # L, headspace of 30 mL serum bottle with 5 g sand
mwCO2 = 44.01 # molecular weight of CO2
mwC = 12.011 # molecular weight of C
# P = 1 atm, assumes 1 atm in ucosms during sampling
molCO2 <- 1*V/(R*temp)
mgCO2 <- molCO2*mwCO2*1000 # NOTE: This is the mg of CO2 present if the headspace contained 100% (1000000 ppm) CO2 at 1 atm
samples.df <- mutate(samples.df, CO2mg=mgCO2*(ppm.final*10^-6)) # mg CO2 for each sample based on ppm measured at each time point
# Sum all time points
totalresp.df <- samples.df %>% group_by(sample, rep) %>% summarize(CO2.total = sum(CO2mg))
# New sample labels (bullshit I have to do because of poor planning)
totalresp.df %>% mutate(id = rownames(totalresp.df))
# New sample labels (bullshit I have to do because of poor planning)
totalresp.df %>% mutate("id" = rownames(totalresp.df))
# New sample labels (bullshit I have to do because of poor planning)
totalresp.df %>% mutate(ucosm = rownames(totalresp.df))
# New sample labels (bullshit I have to do because of poor planning)
totalresp.df %>% mutate(ucosm = paste(rownames(totalresp.df)))
# New sample labels (bullshit I have to do because of poor planning)
totalresp.df$ucosm <- rownames(totalresp.df)
head(totalresp.df)
totalresp.df$ucosm <- as.double(totalresp.df$ucosm)
head(totalresp.df)
head(meta)
# Metadata
meta <- read_csv("data_DOC/SFA1.5/SFA1.5_DOC_metadata.csv") #%>%
head(meta)
# Merge
totalresp.meta <- inner_join(meta, totalresp.df)
totalresp.meta
# Merge
totalresp.meta <- inner_join(meta, totalresp.df) %>%
select(-ucosm, -sample -rep)
# Merge
totalresp.meta <- inner_join(meta, totalresp.df) %>%
select(-c(ucosm, sample, rep))
totalresp.meta
head(samples.df)
View(samples.df)
# Sum all time points
totalresp.df <- samples.df %>% group_by(sample, rep) %>% summarize(CO2.total = sum(CO2mg, na.rm=TRUE))
View(totalresp.df)
# New sample labels (bullshit I have to do because of poor planning)
totalresp.df$ucosm <- rownames(totalresp.df)
totalresp.df$ucosm <- as.double(totalresp.df$ucosm)
# Metadata
meta <- read_csv("data_DOC/SFA1.5/SFA1.5_DOC_metadata.csv")
# Merge
totalresp.meta <- inner_join(meta, totalresp.df) %>%
select(-c(ucosm, sample, rep))
# Graph cumulative CO2
totalresp.meta %>%
ggplot(aes(x=DOC, y=CO2.total)) +
geom_point() +
labs(y="CO2 (mg)") +
theme_test()
# Graph cumulative CO2
totalresp.meta %>%
ggplot(aes(x=DOC, y=CO2.total)) +
geom_point() +
geom_text(aes(x=Sample)) +
labs(y="CO2 (mg)") +
theme_test()
# Graph cumulative CO2
totalresp.meta %>%
ggplot(aes(x=DOC, y=CO2.total)) +
geom_point() +
geom_text(aes(label=Sample)) +
labs(y="CO2 (mg)") +
theme_test()
# Graph cumulative CO2
totalresp.meta %>%
ggplot(aes(x=DOC, y=CO2.total)) +
geom_point() +
geom_text(aes(label=Sample), hjust=0, vjust=0) +
labs(y="CO2 (mg)") +
theme_test()
# Summarize
totalresp.summary <- totalresp.meta %>%
group_by(Sample, DOC) %>%
summarize(CO2.mean = mean(CO2.total))
head(totalresp.summary )
# Graph cumulative CO2
totalresp.meta %>%
ggplot(aes(x=DOC, y=CO2.mean)) +
geom_point() +
geom_text(aes(label=Sample), hjust=0, vjust=0) +
labs(y="CO2 (mg)") +
theme_test()
# Graph cumulative CO2
totalresp.summary %>%
ggplot(aes(x=DOC, y=CO2.mean)) +
geom_point() +
geom_text(aes(label=Sample), hjust=0, vjust=0) +
labs(y="CO2 (mg)") +
theme_test()
# Graph cumulative CO2
totalresp.summary %>%
ggplot(aes(x=DOC, y=CO2.mean)) +
geom_point() +
#geom_text(aes(label=Sample), hjust=0, vjust=0) +
labs(y="CO2 (mg)") +
theme_test() +
theme(text=element_text(size=20))
# Graph cumulative CO2
totalresp.summary %>%
ggplot(aes(x=DOC, y=CO2.mean)) +
geom_point() +
#geom_text(aes(label=Sample), hjust=0, vjust=0) +
labs(y="CO2 (mg)", x="DOC phenotype") +
theme_test() +
theme(text=element_text(size=20))
# Graph cumulative CO2
totalresp.summary %>%
ggplot(aes(x=DOC, y=CO2.mean)) +
geom_point() +
#geom_text(aes(label=Sample), hjust=0, vjust=0) +
labs(y="Cumulative CO2 (mg)", x="DOC phenotype") +
theme_test() +
theme(text=element_text(size=20))
# Graph cumulative CO2
totalresp.summary %>%
ggplot(aes(x=DOC, y=CO2.mean)) +
geom_boxplot() +
#geom_text(aes(label=Sample), hjust=0, vjust=0) +
labs(y="Cumulative CO2 (mg)", x="DOC phenotype") +
theme_test() +
theme(text=element_text(size=20))
