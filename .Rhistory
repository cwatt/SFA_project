sessionInfo()
# Phyloseq object with all growth samples
physeq <- readRDS("../data_intermediate/SFA2_physeq_rare_bnti.rds")
# Growth estimates
growth <- readRDS("../data_intermediate/SFA2_growth_estimates_pap.rds")
# Count table
count <- data.frame(otu_table(physeq))
# Tree
tree <- phy_tree(physeq)
# Metadata
meta <- data.frame(sample_data(physeq))
# Inoculant 41 only
meta_inoc41 <- meta %>%
filter(Inoculant==41 & Type=="Growth") %>%
select(SampleID, Sample, Inoculant, Day)
count_inoc41 <- select(count, as.character(meta_inoc41$SampleID))
matched_inoc41_whole <- match.phylo.data(tree, count_inoc41)
# Load calculations
# whole community bNTI
bNTI_inoc41_whole <- readRDS("../data_intermediate/SFA2_bNTI_inoc41_whole.rds") %>%
as.data.frame()
# whole community permuted bMNTD
rand_bMNTD_inoc41_whole <- readRDS("../data_intermediate/SFA2_bMNTD_rand_inoc41_whole.rds")
bNTI_contrasts_inoc41_whole <- data.frame()
for (day in unique(meta_inoc41$Day)) {
meta_subset <- filter(meta_inoc41, Day==day)
samids <- meta_subset$SampleID
bNTI_list_inoc41_whole <- bNTI_inoc41_whole %>%
select(samids) %>% # get columns with samples of interest
rownames_to_column(var="SampleID") %>%
filter(SampleID %in% samids) %>% # get rows with samples of interest
column_to_rownames(var="SampleID") %>%
as.matrix() %>%
as.list() %>%
unlist() %>% # flatten the dataframe into a list
.[!is.na(.)] # remove NAs
bNTI_mean_inoc41_whole <- mean(bNTI_list_inoc41_whole, na.rm=TRUE)
this_row <- data.frame(Inoculant=41, Day=day, bNTI_mean=bNTI_mean_inoc41_whole)
bNTI_contrasts_inoc41_whole <- bind_rows(bNTI_contrasts_inoc41_whole, this_row)
}
bNTI_contrasts_inoc41_whole <- arrange(bNTI_contrasts_inoc41_whole, Day) %>%
mutate(community = "whole")
bNTI_contrasts_inoc41_whole %>%
ggplot(aes(x=Day, y=bNTI_mean)) +
geom_point() +
geom_line() +
geom_hline(yintercept = c(2, -2), linetype=2) +
geom_hline(yintercept = 0) +
theme_test()
# Inoculant 12 only
meta_inoc12 <- meta %>%
filter(Inoculant==12 & Type=="Growth") %>%
select(SampleID, Sample, Inoculant, Day)
count_inoc12 <- select(count, as.character(meta_inoc12$SampleID))
matched_inoc12_whole <- match.phylo.data(tree, count_inoc12)
# Load calculations
# whole community bNTI
bNTI_inoc12_whole <- readRDS("../data_intermediate/SFA2_bNTI_inoc12_whole.rds") %>%
as.data.frame()
# whole community permuted bMNTD
rand_bMNTD_inoc12_whole <- readRDS("../data_intermediate/SFA2_bMNTD_rand_inoc12_whole.rds")
bNTI_contrasts_inoc12_whole <- data.frame()
for (day in unique(meta_inoc12$Day)) {
meta_subset <- filter(meta_inoc12, Day==day)
samids <- meta_subset$SampleID
bNTI_list_inoc12_whole <- bNTI_inoc12_whole %>%
select(samids) %>% # get columns with samples of interest
rownames_to_column(var="SampleID") %>%
filter(SampleID %in% samids) %>% # get rows with samples of interest
column_to_rownames(var="SampleID") %>%
as.matrix() %>%
as.list() %>%
unlist() %>% # flatten the dataframe into a list
.[!is.na(.)] # remove NAs
bNTI_mean_inoc12_whole <- mean(bNTI_list_inoc12_whole)
this_row <- data.frame(Inoculant=12, Day=day, bNTI_mean=bNTI_mean_inoc12_whole)
bNTI_contrasts_inoc12_whole <- bind_rows(bNTI_contrasts_inoc12_whole, this_row)
}
bNTI_contrasts_inoc12_whole <- arrange(bNTI_contrasts_inoc12_whole, Day) %>%
mutate(community = "whole")
bNTI_contrasts_inoc12_whole %>%
ggplot(aes(x=Day, y=bNTI_mean)) +
geom_point() +
geom_line() +
geom_hline(yintercept = c(2, -2), linetype=41) +
geom_hline(yintercept = 0) +
theme_test()
# Inoculant 2 only
meta_inoc2 <- meta %>%
filter(Inoculant==2 & Type=="Growth") %>%
select(SampleID, Sample, Inoculant, Day)
count_inoc2 <- select(count, as.character(meta_inoc2$SampleID))
matched_inoc2_whole <- match.phylo.data(tree, count_inoc2)
# Load calculations
# whole community bNTI
bNTI_inoc2_whole <- readRDS("../data_intermediate/SFA2_bNTI_inoc2_whole.rds") %>%
as.data.frame()
# whole community permuted bMNTD
rand_bMNTD_inoc2_whole <- readRDS("../data_intermediate/SFA2_bMNTD_rand_inoc2_whole.rds")
bNTI_contrasts_inoc2_whole <- data.frame()
for (day in unique(meta_inoc2$Day)) {
meta_subset <- filter(meta_inoc2, Day==day)
samids <- meta_subset$SampleID
bNTI_list_inoc2_whole <- bNTI_inoc2_whole %>%
select(samids) %>% # get columns with samples of interest
rownames_to_column(var="SampleID") %>%
filter(SampleID %in% samids) %>% # get rows with samples of interest
column_to_rownames(var="SampleID") %>%
as.matrix() %>%
as.list() %>%
unlist() %>% # flatten the dataframe into a list
.[!is.na(.)] # remove NAs
bNTI_mean_inoc2_whole <- mean(bNTI_list_inoc2_whole)
this_row <- data.frame(Inoculant=2, Day=day, bNTI_mean=bNTI_mean_inoc2_whole)
bNTI_contrasts_inoc2_whole <- bind_rows(bNTI_contrasts_inoc2_whole, this_row)
}
bNTI_contrasts_inoc2_whole <- arrange(bNTI_contrasts_inoc2_whole, Day) %>%
mutate(community="whole")
bNTI_contrasts_inoc2_whole %>%
ggplot(aes(x=Day, y=bNTI_mean)) +
geom_point() +
geom_line() +
geom_hline(yintercept = c(2, -2), linetype=41) +
geom_hline(yintercept = 0) +
theme_test()
# Inoculant 10 only
meta_inoc10 <- meta %>%
filter(Inoculant==10 & Type=="Growth") %>%
select(SampleID, Sample, Inoculant, Day)
count_inoc10 <- select(count, as.character(meta_inoc10$SampleID))
matched_inoc10_whole <- match.phylo.data(tree, count_inoc10)
# Load calculations
# whole community bNTI
bNTI_inoc10_whole <- readRDS("../data_intermediate/SFA2_bNTI_inoc10_whole.rds") %>%
as.data.frame()
# whole community permuted bMNTD
rand_bMNTD_inoc10_whole <- readRDS("../data_intermediate/SFA2_bMNTD_rand_inoc10_whole.rds")
bNTI_contrasts_inoc10_whole <- data.frame()
for (day in unique(meta_inoc10$Day)) {
meta_subset <- filter(meta_inoc10, Day==day)
samids <- meta_subset$SampleID
bNTI_list_inoc10_whole <- bNTI_inoc10_whole %>%
select(samids) %>% # get columns with samples of interest
rownames_to_column(var="SampleID") %>%
filter(SampleID %in% samids) %>% # get rows with samples of interest
column_to_rownames(var="SampleID") %>%
as.matrix() %>%
as.list() %>%
unlist() %>% # flatten the dataframe into a list
.[!is.na(.)] # remove NAs
bNTI_mean_inoc10_whole <- mean(bNTI_list_inoc10_whole)
this_row <- data.frame(Inoculant=10, Day=day, bNTI_mean=bNTI_mean_inoc10_whole)
bNTI_contrasts_inoc10_whole <- bind_rows(bNTI_contrasts_inoc10_whole, this_row)
}
bNTI_contrasts_inoc10_whole <- arrange(bNTI_contrasts_inoc10_whole, Day) %>%
mutate(community="whole")
bNTI_contrasts_inoc10_whole %>%
ggplot(aes(x=Day, y=bNTI_mean)) +
geom_point() +
geom_line() +
geom_hline(yintercept = c(2, -2), linetype=41) +
geom_hline(yintercept = 0) +
theme_test()
# Inoculant 19 only
meta_inoc19 <- meta %>%
filter(Inoculant==19 & Type=="Growth") %>%
select(SampleID, Sample, Inoculant, Day)
count_inoc19 <- select(count, as.character(meta_inoc19$SampleID))
matched_inoc19_whole <- match.phylo.data(tree, count_inoc19)
# Load calculations
# whole community bNTI
bNTI_inoc19_whole <- readRDS("../data_intermediate/SFA2_bNTI_inoc19_whole.rds") %>%
as.data.frame()
# whole community permuted bMNTD
rand_bMNTD_inoc19_whole <- readRDS("../data_intermediate/SFA2_bMNTD_rand_inoc19_whole.rds")
bNTI_contrasts_inoc19_whole <- data.frame()
for (day in unique(meta_inoc19$Day)) {
meta_subset <- filter(meta_inoc19, Day==day)
samids <- meta_subset$SampleID
bNTI_list_inoc19_whole <- bNTI_inoc19_whole %>%
select(samids) %>% # get columns with samples of interest
rownames_to_column(var="SampleID") %>%
filter(SampleID %in% samids) %>% # get rows with samples of interest
column_to_rownames(var="SampleID") %>%
as.matrix() %>%
as.list() %>%
unlist() %>% # flatten the dataframe into a list
.[!is.na(.)] # remove NAs
bNTI_mean_inoc19_whole <- mean(bNTI_list_inoc19_whole)
this_row <- data.frame(Inoculant=19, Day=day, bNTI_mean=bNTI_mean_inoc19_whole)
bNTI_contrasts_inoc19_whole <- bind_rows(bNTI_contrasts_inoc19_whole, this_row)
}
bNTI_contrasts_inoc19_whole <- arrange(bNTI_contrasts_inoc19_whole, Day) %>%
mutate(community="whole")
bNTI_contrasts_inoc19_whole %>%
ggplot(aes(x=Day, y=bNTI_mean)) +
geom_point() +
geom_line() +
geom_hline(yintercept = c(2, -2), linetype=41) +
geom_hline(yintercept = 0) +
theme_test()
# Inoculant 47 only
meta_inoc47 <- meta %>%
filter(Inoculant==47 & Type=="Growth") %>%
select(SampleID, Sample, Inoculant, Day)
count_inoc47 <- select(count, as.character(meta_inoc47$SampleID))
matched_inoc47_whole <- match.phylo.data(tree, count_inoc47)
# Load calculations
# whole community bNTI
bNTI_inoc47_whole <- readRDS("../data_intermediate/SFA2_bNTI_inoc47_whole.rds") %>%
as.data.frame()
# whole community permuted bMNTD
rand_bMNTD_inoc47_whole <- readRDS("../data_intermediate/SFA2_bMNTD_rand_inoc47_whole.rds")
bNTI_contrasts_inoc47_whole <- data.frame()
for (day in unique(meta_inoc47$Day)) {
meta_subset <- filter(meta_inoc47, Day==day)
samids <- meta_subset$SampleID
bNTI_list_inoc47_whole <- bNTI_inoc47_whole %>%
select(samids) %>% # get columns with samples of interest
rownames_to_column(var="SampleID") %>%
filter(SampleID %in% samids) %>% # get rows with samples of interest
column_to_rownames(var="SampleID") %>%
as.matrix() %>%
as.list() %>%
unlist() %>% # flatten the dataframe into a list
.[!is.na(.)] # remove NAs
bNTI_mean_inoc47_whole <- mean(bNTI_list_inoc47_whole)
this_row <- data.frame(Inoculant=47, Day=day, bNTI_mean=bNTI_mean_inoc47_whole)
bNTI_contrasts_inoc47_whole <- bind_rows(bNTI_contrasts_inoc47_whole, this_row)
}
bNTI_contrasts_inoc47_whole <- arrange(bNTI_contrasts_inoc47_whole, Day) %>%
mutate(community="whole")
bNTI_contrasts_inoc47_whole %>%
ggplot(aes(x=Day, y=bNTI_mean)) +
geom_point() +
geom_line() +
geom_hline(yintercept = c(2, -2), linetype=41) +
geom_hline(yintercept = 0) +
theme_test()
bNTI_all <- bind_rows(bNTI_contrasts_inoc41_whole,
bNTI_contrasts_inoc12_whole,
bNTI_contrasts_inoc2_whole,
bNTI_contrasts_inoc10_whole,
bNTI_contrasts_inoc19_whole,
bNTI_contrasts_inoc47_whole) %>%
mutate(Inoculant = as.character(Inoculant))
# Average across inoculants for whole and growth
bNTI_overall <- bNTI_all %>%
group_by(Day, community) %>%
summarize(bNTI_mean = mean(bNTI_mean, na.rm = TRUE)) %>%
ungroup() %>%
mutate(Inoculant = "overall")
# Combine
bNTI_all <- bind_rows(bNTI_all, bNTI_overall)
saveRDS(bNTI_all, "../data_intermediate/SFA2_bNTI_mean_overall.rds")
eff_proxy <- readRDS("../data_intermediate/SFA2_cellprod.rds")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(tidyverse)
library(cowplot)
sessionInfo()
rm(list=ls())
# Respiration data, remove non-samples
resp <- readRDS("../data_intermediate/SFA2_respiration.rds") %>%
filter(!Inoculant %in% c(0, 51))
# Growth estimates
growth <- readRDS("../data_intermediate/SFA2_growth_estimates_pap.rds")
# Normalized abundances
normabund <- readRDS("../data_intermediate/SFA2_norm_grestimated.rds")
# Combine and clean up growth and normalized abundance data
growth_abund <- full_join(growth, normabund) %>%
select(Inoculant, Day, ASV, start_day, end_day, k, n16S, norm_abund_avg) # remove unneeded columns
# Cumulative mg CO2 and C
resp_total <-  resp %>%
group_by(Sample, Inoculant) %>%
summarize(total_mgCO2 = sum(mgCO2), total_mgC = total_mgCO2*(12/44)) %>% # molar weight ratio of C in CO2
ungroup() %>%
mutate(Inoculant = as.character(Inoculant))
# Visualize
resp_total %>%
filter(!(Inoculant %in% c(0, 51))) %>% # remove controls
ggplot(aes(x=Inoculant, y=total_mgCO2)) +
geom_point() +
theme_test()
# linear model
resp_total_lm <- lm(total_mgCO2 ~ Inoculant, data=resp_total)
hist(resid(resp_total_lm)) # non-normal
# Kruskal-Wallis
kruskal.test(total_mgCO2 ~ Inoculant, data=resp_total)
resp_rate <- resp %>%
select(Sample, Inoculant, Day, Timeframe, mgCO2) %>%
mutate(mgCO2_day = mgCO2/Timeframe) %>%
filter(!is.infinite(mgCO2_day)) # remove day 0 (no rate possible)
# Average replicates for each inoculant
resp_rate_inoc <- resp_rate %>%
group_by(Inoculant, Day) %>%
summarize(mgCO2_day = mean(mgCO2_day))
resp_rate_inoc %>%
filter(!(Inoculant %in% c(0, 51))) %>%  # remove controls
ggplot(aes(x=Day, y=mgCO2_day)) +
geom_boxplot(aes(group=Day)) +
geom_jitter() +
theme_test()
# Correct normalized abundance by 16S copy number
growth_abund <- growth_abund %>%
mutate(norm_abund_corr = norm_abund_avg/n16S)
# Calculate weighted k and summed k
weighted_gr <- data.frame()
for (i in unique(growth_abund$Inoculant)) {
for (d in unique(growth_abund$Day)) {
data_subset <- filter(growth_abund, Inoculant==i & Day==d) %>%
filter(start_day <= d & end_day >= d) # include only ASVs that grew on the given day
weighted_mean <- weighted.mean(data_subset$k, data_subset$norm_abund_corr)
this_row <- bind_cols(Inoculant=i, Day=d, weighted_k=weighted_mean)
weighted_gr <- bind_rows(weighted_gr, this_row)
}
}
# Visualize
weighted_gr %>%
ggplot(aes(x=Day, y=weighted_k)) +
geom_boxplot(aes(group=Day)) +
geom_point() +
#geom_line() +
#facet_wrap(~Inoculant) +
labs(title="Weighted mean growth rates over time") +
theme_test()
growth_resprate <- inner_join(weighted_gr, resp_rate_inoc)
growth_resprate %>%
ggplot(aes(x=mgCO2_day, y=weighted_k)) +
geom_point() +
geom_smooth(method="lm", linetype=2) +
theme_test() +
labs(title="Weighted growth rates vs. respiration rates", x="Respiration rate mean (mgCO2/day)", y="specific growth rate w.mean")
cor.test(growth_resprate$mgCO2_day, growth_resprate$weighted_k)
growth_resprate %>%
mutate(eff = weighted_k/mgCO2_day) %>%
ggplot(aes(x=Day, y=eff)) +
geom_point() +
geom_smooth(method="lm", linetype=2) +
theme_test()
# Calculate total cellular production per day
cell_prod <- data.frame()
for (i in unique(growth_abund$Inoculant)) {
for (d in unique(growth_abund$Day)) {
data_subset <- filter(growth_abund, Inoculant==i & Day==d) %>%
filter(start_day <= d & end_day >= d) %>% # remove taxa that did not grow on given day
mutate(cell_prod = k*log(norm_abund_corr)) # calculate cellular production by multiplying specific growth rate by log abundance
cell_prod_total <- sum(data_subset$cell_prod) # total
add_row <- bind_cols(Inoculant=i, Day=d, cell_prod=cell_prod_total)
cell_prod <- bind_rows(cell_prod, add_row)
}
}
cell_prod %>%
ggplot(aes(x=Day, y=cell_prod)) +
geom_jitter() +
geom_smooth(linetype=2) +
labs(title="Total cellular production over time") +
theme_test()
cell_prod_resp <- cell_prod %>%
inner_join(resp_rate_inoc, by=c("Inoculant", "Day"))
cell_prod_resp %>%
ggplot(aes(x=mgCO2_day, y=cell_prod)) +
geom_point() +
geom_smooth(method="lm", linetype=2) +
#facet_wrap(~Inoculant) +
theme_test()
cor.test(cell_prod_resp$mgCO2_day, cell_prod_resp$cell_prod)
cell_prod_resp <- cell_prod_resp %>%
mutate(eff_proxy = cell_prod/mgCO2_day)
cell_prod_resp %>%
ggplot(aes(x=Day, y=eff_proxy)) +
geom_point() +
geom_smooth(method="lm", linetype=2) +
theme_test()
saveRDS(cell_prod_resp, file="../data_intermediate/SFA2_cellprod_eff.rds")
head(cell_prod_resp)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results = "show")
knitr::opts_chunk$set(message = FALSE)
# Clear working directory, load in packages, generate package info
rm(list=ls())
library("tidyverse")
library("ape")
library("phyloseq")
library("picante")
sessionInfo()
meta <- readRDS("../data_intermediate/SFA2_metadata.rds")
wuni_dist <- readRDS("../data_intermediate/SFA2_wunidist_slim.rds")
growth <- readRDS("../data_intermediate/SFA2_growth_estimates_pap.rds")
norm_gr <- readRDS("../data_intermediate/SFA2_norm_grestimated.rds") # in case want to do weighted mean k
# Calculate average distance per inoculant per day
comm_dist <- data.frame()
for (i in unique(meta$Inoculant)) {
for (d in unique(meta$Day)) {
meta_filt <- filter(meta, Type=="Growth" & Inoculant==i & Day==d)
sams <- meta_filt$SampleID
wuni_filt <- filter(wuni_dist, Sample1 %in% sams & Sample2 %in% sams)
wuni_avg <- mean(wuni_filt$wuni_dist, na.rm=TRUE)
add_row <- bind_cols(Inoculant=i, Day=d, avg_dist=wuni_avg)
comm_dist <- bind_rows(comm_dist, add_row)
}
}
# Remove unnecessary columns and combine
growth <- growth %>%
select(ASV, Inoculant, start_day, end_day, k, n16S)
norm_gr <- norm_gr %>%
select(ASV, Inoculant, Day, norm_abund_avg)
norm_growth <- inner_join(growth, norm_gr)
# Correct normalized abundance by 16S copy numbers
norm_growth <- norm_growth %>%
mutate(norm_abund_corr = norm_abund_avg/n16S)
# Calculate avg k
weighted_k <- data.frame()
for (i in unique(norm_growth$Inoculant)) {
for (d in unique(norm_growth$Day)) {
data_filt <- filter(norm_growth, Inoculant==i & Day==d) %>%
filter(start_day <= d & end_day >= d) # make sure ASV is growing on this day
k_wmean <- weighted.mean(data_filt$k, data_filt$norm_abund_corr)
add_row <- bind_cols(Inoculant=i, Day=d, wmean_k=k_wmean)
weighted_k <- bind_rows(weighted_k, add_row)
}
}
dist_k <- inner_join(comm_dist, weighted_k)
dist_k %>%
ggplot(aes(x=avg_dist, y=wmean_k)) +
geom_point() +
facet_wrap(~Inoculant) +
geom_smooth(method="lm", linetype=2) +
labs(x="Weighted unifrac distance (avg)", y="Weighted mean specific growth rate") +
theme_test()
dist_k %>%
ggplot(aes(x=avg_dist, y=wmean_k)) +
geom_point() +
geom_smooth(method="lm", linetype=2) +
labs(x="Weighted unifrac distance (avg)", y="weighted mean specific growth rate") +
theme_test()
# Overall
cor.test(dist_k$avg_dist, dist_k$wmean_k)
bNTI <- readRDS("../data_intermediate/SFA2_bNTI_overall.rds")
eff_proxy <- readRDS("../data_intermediate/SFA2_cellprod_eff.rds")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(results = "show")
knitr::opts_chunk$set(message = FALSE)
# Clear working directory, load in packages, generate package info
rm(list=ls())
library("tidyverse")
library("ape")
library("phyloseq")
library("picante")
sessionInfo()
meta <- readRDS("../data_intermediate/SFA2_metadata.rds")
wuni_dist <- readRDS("../data_intermediate/SFA2_wunidist_slim.rds")
growth <- readRDS("../data_intermediate/SFA2_growth_estimates_pap.rds")
norm_gr <- readRDS("../data_intermediate/SFA2_norm_grestimated.rds") # in case want to do weighted mean k
# Calculate average distance per inoculant per day
comm_dist <- data.frame()
for (i in unique(meta$Inoculant)) {
for (d in unique(meta$Day)) {
meta_filt <- filter(meta, Type=="Growth" & Inoculant==i & Day==d)
sams <- meta_filt$SampleID
wuni_filt <- filter(wuni_dist, Sample1 %in% sams & Sample2 %in% sams)
wuni_avg <- mean(wuni_filt$wuni_dist, na.rm=TRUE)
add_row <- bind_cols(Inoculant=i, Day=d, avg_dist=wuni_avg)
comm_dist <- bind_rows(comm_dist, add_row)
}
}
# Remove unnecessary columns and combine
growth <- growth %>%
select(ASV, Inoculant, start_day, end_day, k, n16S)
norm_gr <- norm_gr %>%
select(ASV, Inoculant, Day, norm_abund_avg)
norm_growth <- inner_join(growth, norm_gr)
# Correct normalized abundance by 16S copy numbers
norm_growth <- norm_growth %>%
mutate(norm_abund_corr = norm_abund_avg/n16S)
# Calculate avg k
weighted_k <- data.frame()
for (i in unique(norm_growth$Inoculant)) {
for (d in unique(norm_growth$Day)) {
data_filt <- filter(norm_growth, Inoculant==i & Day==d) %>%
filter(start_day <= d & end_day >= d) # make sure ASV is growing on this day
k_wmean <- weighted.mean(data_filt$k, data_filt$norm_abund_corr)
add_row <- bind_cols(Inoculant=i, Day=d, wmean_k=k_wmean)
weighted_k <- bind_rows(weighted_k, add_row)
}
}
dist_k <- inner_join(comm_dist, weighted_k)
dist_k %>%
ggplot(aes(x=avg_dist, y=wmean_k)) +
geom_point() +
facet_wrap(~Inoculant) +
geom_smooth(method="lm", linetype=2) +
labs(x="Weighted unifrac distance (avg)", y="Weighted mean specific growth rate") +
theme_test()
dist_k %>%
ggplot(aes(x=avg_dist, y=wmean_k)) +
geom_point() +
geom_smooth(method="lm", linetype=2) +
labs(x="Weighted unifrac distance (avg)", y="weighted mean specific growth rate") +
theme_test()
# Overall
cor.test(dist_k$avg_dist, dist_k$wmean_k)
bNTI <- readRDS("../data_intermediate/SFA2_bNTI_overall.rds")
haed(wuni_dist)
head(wuni_dist)
head(eff_proxy)
head(eff_proxy)
# Import
eff_proxy <- readRDS("../data_intermediate/SFA2_cellprod_eff.rds")
head(eff_proxy)
head(wuni_dist)
