norm_grp2_ex <- add_column(norm_grp2_ex, group="grp2")
norm_grps_ex <- bind_rows(norm_grp1_ex, norm_grp2_ex)
# Visualize
norm_grps_ex %>%
ggplot(aes(x=Day, y=log(norm_abund_avg))) +
geom_point(size=3, aes(shape=group)) +
geom_line(aes(group=group)) +
geom_vline(xintercept=9, linetype=2) +
# Growth estimates
geom_smooth(method="lm", data=norm_grp1_ex[growth_grp1_ex$start_pt:growth_grp1_ex$end_pt,], linetype=2, alpha=0.2) +
geom_smooth(method="lm", data=norm_grp2_ex[growth_grp2_ex$start_pt:growth_grp2_ex$end_pt,], linetype=2, alpha=0.2) +
#labs(title=paste0("group 3 example -", growth_grp3_ex$Phylum, ", ", growth_grp3_ex$Genus), x="Day", y="ln normalized abundance") +
coord_cartesian(xlim = c(0, 30)) +
theme_test()
# Phylum-level makeup of ASV estimates
growth_phyla <- growth_grp %>%
group_by(Phylum, ASV) %>%
summarize(total=n())
# total number of growth estimates
growth_ests <- nrow(growth_grp)
# Calculate % estimates of each phylum
growth_phyla %>%
group_by(Phylum) %>%
summarize(total=n()) %>%
arrange(desc(total)) %>%
add_column(all = growth_ests) %>%
mutate(perc = (total/all)*100)
# Total ASVs estimated per inoculant/group
gr_inocgrp_totals <- growth_grp %>%
group_by(Inoculant, group) %>%
summarize(total = n()) %>%
ungroup()
# Order level
gr_ord_relabund <- growth_grp %>%
group_by(Inoculant, group, Phylum, Order) %>%
summarize(order_total = n()) %>%
ungroup() %>%
inner_join(gr_inocgrp_totals) %>%
mutate(relabund = order_total/total)
gr_ord_relabund
# Phylum-level makeup of ASV estimates
death_phyla <- death_grp %>%
group_by(Phylum, ASV) %>%
summarize(total=n())
# total number of death estimates
death_ests <- nrow(death_grp)
# Calculate % estimates of each phylum
death_phyla %>%
group_by(Phylum) %>%
summarize(total=n()) %>%
arrange(desc(total)) %>%
add_column(all = death_ests) %>%
mutate(perc = (total/all)*100)
gr_ord_relabund %>%
ggplot(aes(x=group, y=order_total, color=Phylum)) +
geom_jitter() +
geom_vline(xintercept=1.5) +
facet_wrap(~Inoculant) +
theme_test()
gr_ord_relabund %>%
mutate(border = if_else(Phylum=="Actinobacteriota", "yes", "no")) %>%
ggplot(aes(x=group, y=relabund, fill=Order, color=Phylum)) +
geom_col() +
facet_wrap(~Inoculant) +
theme_test()
# Growth estimates
growth_grp3 <- growth %>%
mutate(group = if_else(start_day > 9, "grp3", "not"),
group = as.factor(group)) %>%
filter(group=="grp3")
# Death estimates
norm_grp3_prep <- growth_grp3 %>%
inner_join(norm) %>%
select(label, Sample, Inoculant, Day, ASV, norm_abund) %>%
group_by(label, Inoculant, Day, ASV) %>% # average technical reps
summarize(norm_abund = mean(norm_abund)) %>%
ungroup() %>%
arrange(Inoculant, Day) %>%
filter(norm_abund > 0) %>% # remove drop outs
mutate(norm_abund_ln = log(norm_abund))
# Taxonomy
tax_grp3 <- growth_grp3 %>%
inner_join(norm) %>%
select(ASV, Phylum:Genus) %>%
unique()
count <-  0
for (l in as.character(growth_grp3$label)) {
# Subset time series
count <- count+1
growth_label <- filter(growth_grp3, label==l)
norm_label <- filter(norm_grp3_prep, label==l) %>%
arrange(Day)
# Title information
asv <- growth_label$ASV
tax_info <- filter(tax_grp3, ASV == asv)
title <- paste0(tax_info$Phylum, ", ", tax_info$Genus)
# Graph with estimate
graph <- ggplot(norm_label, aes(x=Day, y=norm_abund_ln)) +
geom_point(shape=1, size=3, color="#6F7378") +
geom_line(color="#6F7378") +
geom_smooth(method="lm", data=norm_label[growth_label$start_pt:growth_label$end_pt,], linetype=2, color="black") +
labs(title=paste0(title), x="Day", y="ln Relational abundance") +
theme_test() +
theme(axis.title = element_blank(),
axis.text = element_text(size=10))
print(graph)
assign(paste0("plot", count, "_grp3"), graph)
}
# k
growth_grp %>%
ggplot(aes(x=group, y=k)) +
geom_boxplot() +
geom_jitter(size=2, alpha=0.5) +
theme_test() +
labs(y="Growth rate (day-1)", x="") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 15))
# change in abundance
growth_grp %>%
ggplot(aes(x=group, y=log(change_abund_corr))) +
geom_boxplot() +
geom_jitter(size=2, alpha=0.5) +
theme_test() +
labs(y="Normalized abundance change (ln)", x="") +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 12))
# n16S
growth_grp %>%
ggplot(aes(x=group, y=log(n16S))) +
geom_boxplot() +
geom_jitter(size=2, alpha=0.5) +
theme_test() +
labs(y="16S copy number (ln)", x="") +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 12))
# Below are baked into definitions, so not super informative
# Length
growth_grp %>%
mutate(length=end_day-start_day) %>%
ggplot(aes(x=group, y=length)) +
geom_boxplot() +
geom_jitter(size=2, alpha=0.5) +
theme_test() +
labs(y="length of growth", x="") +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 12))
# Lag
growth_grp %>%
filter(start_day <= 6) %>% # for group 2 taxa that started same time as group 1
ggplot(aes(x=group, y=start_day)) +
geom_boxplot() +
geom_jitter(size=2, alpha=0.5) +
theme_test() +
labs(y="lag", x="") +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 12))
# k
k_lmer <- lmer(k ~ group + (1 + Inoculant | Inoculant), growth_grp)
hist(resid(k_lmer))
plot(predict(k_lmer), resid(k_lmer))
anova(k_lmer)
# change abund
chg_lmer <- lmer(log(change_abund_corr) ~ group + (1 + Inoculant | Inoculant), growth_grp)
hist(resid(chg_lmer))
plot(predict(chg_lmer), resid(chg_lmer))
anova(chg_lmer)
# 16S
n16s_lmer <- lmer(log(n16S) ~ group + (1 + Inoculant | Inoculant), growth_grp)
hist(resid(n16s_lmer))
plot(predict(n16s_lmer), resid(n16s_lmer)) # heteroskedastic
# Welch t-test
t.test(log(n16S) ~ group, data=growth_grp)
# lag
lag_lmer <- lmer(start_day ~ group + (1 + Inoculant | Inoculant), filter(growth_grp, start_day <= 6))
hist(resid(lag_lmer)) # non-normal
plot(predict(lag_lmer), resid(lag_lmer))
# Welch t-test
t.test(start_day ~ group, filter(growth_grp, start_day <= 6))
# k
death_grp %>%
ggplot(aes(x=group, y=k)) +
geom_boxplot() +
geom_jitter(size=2, alpha=0.5) +
theme_test() +
labs(y="Death rate (day-1)", x="") +
theme(axis.text = element_text(size = 10),
axis.title = element_text(size = 12))
# change in abundance
death_grp %>%
ggplot(aes(x=group, y=log(abs(change_abund_corr)))) +
geom_boxplot() +
geom_jitter(size=2, alpha=0.5) +
theme_test() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 15)) +
labs(y="Normalized abundance change (ln abs. value)", x="")
# n16S
death_grp %>%
ggplot(aes(x=group, y=n16S)) +
geom_boxplot() +
geom_jitter(size=2, alpha=0.5) +
theme_test() +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 15)) +
labs(y="16S copy numbers", x="")
# k
kdeath_lmer <- lmer(log(abs(k)) ~ group + (1 + Inoculant | Inoculant), death_grp)
hist(resid(kdeath_lmer))
plot(predict(kdeath_lmer), resid(kdeath_lmer))
anova(kdeath_lmer)
# change abund
chgdeath_lmer <- lmer(log(abs(change_abund_corr)) ~ group + (1 + Inoculant | Inoculant), death_grp)
hist(resid(chgdeath_lmer))
plot(predict(chgdeath_lmer), resid(chgdeath_lmer))
anova(chgdeath_lmer)
# n16S
n16S_lmer <- lmer(n16S ~ group + (1 + Inoculant | Inoculant), death_grp)
hist(resid(chgdeath_lmer))
plot(predict(chgdeath_lmer), resid(chgdeath_lmer))
anova(chgdeath_lmer)
# Prepare data
growth_slim <- growth %>%
select(Inoculant, ASV, slope, yint, k, g, start_day, end_day, n16S)
growth_norm <- norm %>%
filter(Type=="Growth" & norm_abund!=0) %>% # filter growth estimation samples and remove non-present taxa
select(Inoculant, Day, Replicate, ASV, norm_abund) %>%
group_by(Inoculant, Day, ASV, norm_abund) %>% # average replicates
summarize(norm_abund_avg = mean(norm_abund)) %>%
inner_join(growth_slim) %>%
mutate(norm_abund_corr = norm_abund_avg/n16S) %>%  # normalized abundance corrected
select(Inoculant, Day, ASV, start_day, end_day, slope, yint, g, norm_abund_corr, n16S) %>%
group_by(Inoculant, ASV, Day, slope, yint, g, start_day, end_day, n16S) %>%
summarize(norm_abund_corr = mean(norm_abund_corr)) %>% # average replicate values
ungroup() %>%
mutate(group = if_else(start_day <= 9 & end_day <= 9, "group 1", "group 2"))
head(growth_norm)
# Prepare data
dan_df <- norm %>%
filter(Type=="Growth" & norm_abund!=0) %>% # filter growth estimation samples and remove non-present taxa
select(Inoculant, Day, Replicate, ASV, norm_abund) %>%
group_by(Inoculant, Day, ASV, norm_abund) %>% # average replicates
summarize(norm_abund_avg = mean(norm_abund)) %>%
inner_join(growth_slim) %>%
mutate(norm_abund_corr = norm_abund_avg/n16S) %>%  # normalized abundance corrected
select(Inoculant, Day, ASV, start_day, end_day, k, g, norm_abund_corr) %>%
group_by(Inoculant, ASV, Day, slope, yint, g, start_day, end_day, n16S) %>%
summarize(norm_abund_corr = mean(norm_abund_corr)) %>% # average replicate values
ungroup() %>%
mutate(group = if_else(start_day < 9 & end_day <= 9, "group 1", "group 2"))
# Prepare data
dan_df <- norm %>%
filter(Type=="Growth" & norm_abund!=0) %>% # filter growth estimation samples and remove non-present taxa
select(Inoculant, Day, Replicate, ASV, norm_abund) %>%
group_by(Inoculant, Day, ASV) %>% # average replicates
summarize(norm_abund_avg = mean(norm_abund)) %>%
inner_join(growth_slim) %>%
mutate(norm_abund_corr = norm_abund_avg/n16S) %>%  # normalized abundance corrected
select(Inoculant, Day, ASV, start_day, end_day, g, norm_abund_corr) %>%
ungroup() %>%
mutate(group = if_else(start_day < 9 & end_day <= 9, "group 1", "group 2"))
head(dan_df)
# Prepare data
dan_df <- norm %>%
filter(Type=="Growth" & norm_abund!=0) %>% # filter samples and remove non-present taxa
select(Inoculant, Day, Replicate, ASV, norm_abund) %>%
group_by(Inoculant, Day, ASV) %>% # average replicates
summarize(norm_abund_avg = mean(norm_abund)) %>%
inner_join(growth_slim) %>%
mutate(norm_abund_corr = norm_abund_avg/n16S) %>%  # correct normalized abundance
select(Inoculant, Day, ASV, start_day, end_day, g, norm_abund_corr) %>%
ungroup() %>%
mutate(group = if_else(start_day < 9 & end_day <= 9, "group 1", "group 2")) %>% # group
dan_df_total <- dan_df %>%
mutate(phase = if_else(Day <= 9, "exponential", "stationary")) %>%
group_by(Inoculant, ASV, phase) %>%
summarize(norm_abund_corr = mean(norm_abund_corr)) %>%
ungroup()
# Prepare data
dan_df <- norm %>%
filter(Type=="Growth" & norm_abund!=0) %>% # filter samples and remove non-present taxa
select(Inoculant, Day, Replicate, ASV, norm_abund) %>%
group_by(Inoculant, Day, ASV) %>% # average replicates
summarize(norm_abund_avg = mean(norm_abund)) %>%
inner_join(growth_slim) %>%
mutate(norm_abund_corr = norm_abund_avg/n16S) %>%  # correct normalized abundance
select(Inoculant, Day, ASV, start_day, end_day, g, norm_abund_corr) %>%
ungroup() %>%
mutate(group = if_else(start_day < 9 & end_day <= 9, "group 1", "group 2")) # group
dan_df_total <- dan_df %>%
mutate(phase = if_else(Day <= 9, "exponential", "stationary")) %>%
group_by(Inoculant, ASV, phase) %>%
summarize(norm_abund_corr = mean(norm_abund_corr)) %>%
ungroup()
head(dan_df_total)
head(dan_df)
dan_df2 <- dan_df %>%
mutate(phase = if_else(Day <= 9, "exponential", "stationary"),
length = end_day - start_day) %>%
group_by(Inoculant, ASV, phase, g, start_day, length) %>%
summarize(norm_abund_corr = mean(norm_abund_corr)) %>%
ungroup()
dan_df2
totals <- dan_df2 %>%
group_by(Inoculant, phase) %>%
summarize(norm_abund_total = sum(norm_abund_corr)) %>%
ungroup()
totals
inoc_totals <- dan_df2 %>%
group_by(Inoculant, phase) %>%
summarize(norm_abund_total = sum(norm_abund_corr)) %>%
ungroup()
inoc_totals
dan_df2 <- dan_df %>%
mutate(phase = if_else(Day <= 9, "exponential", "stationary"), # label phase
length = end_day - start_day, # calculate length of growth
label = paste0(Inoculant, phase, "_", ASV)) %>% # unique label
group_by(Inoculant, ASV, phase, g, start_day, length) %>%
summarize(norm_abund_corr = mean(norm_abund_corr)) %>% # average ASV abundance per phase
ungroup()
dan_df2
dan_df2 <- dan_df %>%
mutate(phase = if_else(Day <= 9, "exponential", "stationary"), # label phase
length = end_day - start_day, # calculate length of growth
label = paste0(Inoculant, phase, "_", ASV)) %>% # unique label
group_by(label, Inoculant, ASV, phase, g, start_day, length) %>%
summarize(norm_abund_corr = mean(norm_abund_corr)) %>% # average ASV abundance per phase
ungroup()
head(dan_df2)
head(inoc_totals)
filter(inoc_totals, Inoculant==data_sub$Inoculant & phase==data_sub$phase)
for (l in unique(dan_df2$label)) {
data_sub <- filter(dan_df2, label==l)
relabund <- data_sub$norm_abund_corr/filter(inoc_totals, Inoculant==data_sub$Inoculant & phase==data_sub$phase)$norm_abund_total
}
l
data_sub
filter(inoc_totals, Inoculant==data_sub$Inoculant & phase==data_sub$phase)
filter(inoc_totals, Inoculant==data_sub$Inoculant & phase==data_sub$phase) %>% class()
filter(inoc_totals, Inoculant==data_sub$Inoculant & phase==data_sub$phase)$norm_abund_total
relabund <- data_sub$norm_abund_corr/filter(inoc_totals, Inoculant==data_sub$Inoculant & phase==data_sub$phase)$norm_abund_total
relabund
this_row <- bind_cols(l, data_sub$Inoculant, data_sub$ASV, data_sub$phase,
data_sub$g, data_sub$start_day, data_sub$length)
this_row
this_row <- bind_cols(label=l, data_sub$Inoculant, data_sub$ASV, data_sub$phase,
data_sub$g, data_sub$start_day, data_sub$length)
this_row
dan_df3 <- data.frame()
for (l in unique(dan_df2$label)) {
data_sub <- filter(dan_df2, label==l)
relabund <- data_sub$norm_abund_corr/filter(inoc_totals, Inoculant==data_sub$Inoculant & phase==data_sub$phase)$norm_abund_total # calculate relative abundance
this_row <- bind_cols(label=l, Inoculant=data_sub$Inoculant, ASV=data_sub$ASV,
phase=data_sub$phase, g=data_sub$g, lag=data_sub$start_day,
length=data_sub$length)
dan_df3 <- bind_rows(dan_df3, this_row)
}
head(dan_df3)
this_row <- bind_cols(label=l, Inoculant=data_sub$Inoculant, ASV=data_sub$ASV,
phase=data_sub$phase, g=data_sub$g, lag=data_sub$start_day,
length=data_sub$length, relabund=relabund)
dan_df3 <- data.frame()
for (l in unique(dan_df2$label)) {
data_sub <- filter(dan_df2, label==l)
relabund <- data_sub$norm_abund_corr/filter(inoc_totals, Inoculant==data_sub$Inoculant & phase==data_sub$phase)$norm_abund_total # calculate relative abundance
this_row <- bind_cols(label=l, Inoculant=data_sub$Inoculant, ASV=data_sub$ASV,
phase=data_sub$phase, g=data_sub$g, lag=data_sub$start_day,
length=data_sub$length, relabund=relabund)
dan_df3 <- bind_rows(dan_df3, this_row)
}
head(dan_df3)
head(dan_df2)
dan_df3 <- data.frame()
for (l in unique(dan_df2$label)) {
data_sub <- filter(dan_df2, label==l)
relabund <- data_sub$norm_abund_corr/filter(inoc_totals, Inoculant==data_sub$Inoculant & phase==data_sub$phase)$norm_abund_total # calculate relative abundance
this_row <- bind_cols(label=l, Inoculant=data_sub$Inoculant, ASV=data_sub$ASV,
phase=data_sub$phase, g=data_sub$g, lag=data_sub$start_day,
length=data_sub$length,
mean_abund=data_sub$norm_abund_corr, relabund=relabund)
dan_df3 <- bind_rows(dan_df3, this_row)
}
haed(dan_df3)
head(dan_df3)
dan_df3 <- bind_rows(dan_df3, this_row) %>%
select(Inoculant, ASV, phase, g, lag, length, mean_abund, relabund)
dan_df3 <- select(dan_df3, -label)
# Combine growth estimates and abundances
dan_df <- norm %>%
filter(Type=="Growth" & norm_abund!=0) %>% # filter samples and remove non-present taxa
select(Inoculant, Day, Replicate, ASV, norm_abund) %>%
group_by(Inoculant, Day, ASV) %>% # average replicates
summarize(norm_abund_avg = mean(norm_abund)) %>%
inner_join(growth_slim) %>%
mutate(norm_abund_corr = norm_abund_avg/n16S) %>%  # correct normalized abundance
select(Inoculant, Day, ASV, start_day, end_day, g, norm_abund_corr) %>%
ungroup() %>%
mutate(group = if_else(start_day < 9 & end_day <= 9, "group 1", "group 2")) %>% # group
mutate(phase = if_else(Day <= 9, "exponential", "stationary"), # label phase
length = end_day - start_day, # calculate length of growth
label = paste0(Inoculant, phase, "_", ASV)) %>% # unique label
group_by(label, Inoculant, ASV, phase, g, start_day, length) %>%
summarize(norm_abund_corr = mean(norm_abund_corr)) %>% # average ASV abundance per phase
ungroup()
head(dan_df)
dan_df2 <- data.frame()
for (l in unique(dan_df2$label)) {
data_sub <- filter(dan_df2, label==l)
relabund <- data_sub$norm_abund_corr/filter(inoc_totals, Inoculant==data_sub$Inoculant & phase==data_sub$phase)$norm_abund_total # calculate relative abundance
this_row <- bind_cols(label=l, Inoculant=data_sub$Inoculant, ASV=data_sub$ASV,
phase=data_sub$phase, g=data_sub$g, lag=data_sub$start_day,
length=data_sub$length,
mean_abund=data_sub$norm_abund_corr, relabund=relabund)
dan_df2 <- bind_rows(dan_df2, this_row)
}
dan_df2 <- select(dan_df2, -label)
head(dan_df)
# Prepare data
# Combine growth estimates and abundances
dan_df <- norm %>%
filter(Type=="Growth" & norm_abund!=0) %>% # filter samples and remove non-present taxa
select(Inoculant, Day, Replicate, ASV, norm_abund) %>%
group_by(Inoculant, Day, ASV) %>% # average replicates
summarize(norm_abund_avg = mean(norm_abund)) %>%
inner_join(growth_slim) %>%
mutate(norm_abund_corr = norm_abund_avg/n16S) %>%  # correct normalized abundance
select(Inoculant, Day, ASV, start_day, end_day, g, norm_abund_corr) %>%
ungroup() %>%
mutate(group = if_else(start_day < 9 & end_day <= 9, "group 1", "group 2")) %>% # group
mutate(phase = if_else(Day <= 9, "exponential", "stationary"), # label phase
length = end_day - start_day, # calculate length of growth
label = paste0(Inoculant, phase, "_", ASV)) %>% # unique label
group_by(label, Inoculant, ASV, phase, g, start_day, length) %>%
summarize(norm_abund_corr = mean(norm_abund_corr)) %>% # average ASV abundance per phase
ungroup()
# Calculate relative abundances
inoc_totals <- dan_df2 %>%
group_by(Inoculant, phase) %>%
summarize(norm_abund_total = sum(norm_abund_corr)) %>%
ungroup()
# Prepare data
dan_df <- norm %>% # norm. abundance data
filter(Type=="Growth" & norm_abund!=0) %>% # filter samples and remove non-present taxa
select(Inoculant, Day, Replicate, ASV, norm_abund) %>%
group_by(Inoculant, Day, ASV) %>% # average replicates
summarize(norm_abund_avg = mean(norm_abund)) %>%
inner_join(growth_slim) %>% # add growth estimates
mutate(norm_abund_corr = norm_abund_avg/n16S) %>%  # correct normalized abundance
select(Inoculant, Day, ASV, start_day, end_day, g, norm_abund_corr) %>%
ungroup() %>%
mutate(group = if_else(start_day < 9 & end_day <= 9, "group 1", "group 2")) %>% # group
mutate(phase = if_else(Day <= 9, "exponential", "stationary"), # label phase
length = end_day - start_day, # calculate length of growth
label = paste0(Inoculant, phase, "_", ASV)) %>% # unique label
group_by(label, Inoculant, ASV, phase, g, start_day, length) %>%
summarize(norm_abund_corr = mean(norm_abund_corr)) %>% # average ASV abundance per phase
ungroup()
# Calculate relative abundances
inoc_totals <- dan_df2 %>%
group_by(Inoculant, phase) %>%
summarize(norm_abund_total = sum(norm_abund_corr)) %>%
ungroup()
# Prepare data
dan_df <- norm %>% # norm. abundance data
filter(Type=="Growth" & norm_abund!=0) %>% # filter samples and remove non-present taxa
select(Inoculant, Day, Replicate, ASV, norm_abund) %>%
group_by(Inoculant, Day, ASV) %>% # average replicates
summarize(norm_abund_avg = mean(norm_abund)) %>%
inner_join(growth_slim) %>% # add growth estimates
mutate(norm_abund_corr = norm_abund_avg/n16S) %>%  # correct normalized abundance
select(Inoculant, Day, ASV, start_day, end_day, g, norm_abund_corr) %>%
ungroup() %>%
mutate(group = if_else(start_day < 9 & end_day <= 9, "group 1", "group 2")) %>% # group
mutate(phase = if_else(Day <= 9, "exponential", "stationary"), # label phase
length = end_day - start_day, # calculate length of growth
label = paste0(Inoculant, phase, "_", ASV)) %>% # unique label
group_by(label, Inoculant, ASV, phase, g, start_day, length) %>%
summarize(norm_abund_corr = mean(norm_abund_corr)) %>% # average ASV abundance per phase
ungroup()
# Calculate relative abundances
inoc_totals <- dan_df %>%
group_by(Inoculant, phase) %>%
summarize(norm_abund_total = sum(norm_abund_corr)) %>%
ungroup()
dan_df2 <- data.frame()
for (l in unique(dan_df$label)) {
data_sub <- filter(dan_df, label==l)
relabund <- data_sub$norm_abund_corr/filter(inoc_totals, Inoculant==data_sub$Inoculant & phase==data_sub$phase)$norm_abund_total
this_row <- bind_cols(label=l, Inoculant=data_sub$Inoculant, ASV=data_sub$ASV,
phase=data_sub$phase, g=data_sub$g, lag=data_sub$start_day,
length=data_sub$length,
mean_abund=data_sub$norm_abund_corr, relabund=relabund)
dan_df2 <- bind_rows(dan_df2, this_row)
}
head(dan_df2)
dan_df2 <- data.frame()
for (l in unique(dan_df$label)) {
data_sub <- filter(dan_df, label==l)
relabund <- data_sub$norm_abund_corr/filter(inoc_totals, Inoculant==data_sub$Inoculant & phase==data_sub$phase)$norm_abund_total
this_row <- bind_cols(Inoculant=data_sub$Inoculant, ASV=data_sub$ASV,
phase=data_sub$phase, g=data_sub$g, lag=data_sub$start_day,
length=data_sub$length,
mean_abund=data_sub$norm_abund_corr, relabund=relabund)
dan_df2 <- bind_rows(dan_df2, this_row)
}
haed(dan_df2)
head(dan_df2)
# Add taxonomy
tax <- read_rds("../data_intermediate/SFA2_taxonomy.rds")
head(tax)
dan_df2 <- left_join(dan_df2, tax)
head(dan_df2)
write_csv(dan_df2, "../SFA_growthphase.csv")
