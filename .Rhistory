# Visualize
norm_bins_ex %>%
ggplot(aes(x=Day, y=log(norm_abund_avg))) +
geom_point(size=3, aes(shape=bin)) +
geom_line(aes(group=bin, color="gray")) +
geom_vline(xintercept=9, linetype=2) +
# Bin 1 estimate
geom_smooth(method="lm", data=norm_bin1_ex[growth_bin1_ex$start_pt:growth_bin1_ex$end_pt,], linetype=2, color="black") +
#labs(title=paste0("Bin 3 example -", growth_bin3_ex$Phylum, ", ", growth_bin3_ex$Genus), x="Day", y="ln normalized abundance") +
coord_cartesian(xlim = c(0, 30)) +
theme_test()
# Visualize
norm_bins_ex %>%
ggplot(aes(x=Day, y=log(norm_abund_avg))) +
geom_point(size=3, aes(shape=bin)) +
geom_line(aes(group=bin), color="#6F7378") +
geom_vline(xintercept=9, linetype=2) +
# Bin 1 estimate
geom_smooth(method="lm", data=norm_bin1_ex[growth_bin1_ex$start_pt:growth_bin1_ex$end_pt,], linetype=2, color="black") +
#labs(title=paste0("Bin 3 example -", growth_bin3_ex$Phylum, ", ", growth_bin3_ex$Genus), x="Day", y="ln normalized abundance") +
coord_cartesian(xlim = c(0, 30)) +
theme_test()
# Visualize
norm_bins_ex %>%
ggplot(aes(x=Day, y=log(norm_abund_avg))) +
geom_point(size=3, aes(shape=bin)) +
geom_line(aes(group=bin), color="#6F7378") +
geom_vline(xintercept=9, linetype=2, color="blue") +
# Bin 1 estimate
geom_smooth(method="lm", data=norm_bin1_ex[growth_bin1_ex$start_pt:growth_bin1_ex$end_pt,], linetype=2, color="black") +
#labs(title=paste0("Bin 3 example -", growth_bin3_ex$Phylum, ", ", growth_bin3_ex$Genus), x="Day", y="ln normalized abundance") +
coord_cartesian(xlim = c(0, 30)) +
theme_test()
# Visualize
norm_bins_ex %>%
ggplot(aes(x=Day, y=log(norm_abund_avg))) +
geom_point(size=3, aes(shape=bin)) +
geom_line(aes(group=bin), color="#6F7378") +
geom_vline(xintercept=9, linetype=2) +
# Bin 1 estimate
geom_smooth(method="lm", data=norm_bin1_ex[growth_bin1_ex$start_pt:growth_bin1_ex$end_pt,], linetype=2, color="blue") +
#labs(title=paste0("Bin 3 example -", growth_bin3_ex$Phylum, ", ", growth_bin3_ex$Genus), x="Day", y="ln normalized abundance") +
coord_cartesian(xlim = c(0, 30)) +
theme_test()
# Visualize
norm_bins_ex %>%
ggplot(aes(x=Day, y=log(norm_abund_avg))) +
geom_point(size=3, aes(shape=bin)) +
geom_line(aes(group=bin), color="#6F7378") +
geom_vline(xintercept=9, linetype=2) +
# Bin 1 estimate
geom_smooth(method="lm", data=norm_bin1_ex[growth_bin1_ex$start_pt:growth_bin1_ex$end_pt,], linetype=2, color="blue", alpha=0.5) +
#labs(title=paste0("Bin 3 example -", growth_bin3_ex$Phylum, ", ", growth_bin3_ex$Genus), x="Day", y="ln normalized abundance") +
coord_cartesian(xlim = c(0, 30)) +
theme_test()
# Visualize
norm_bins_ex %>%
ggplot(aes(x=Day, y=log(norm_abund_avg))) +
geom_point(size=3, aes(shape=bin)) +
geom_line(aes(group=bin), color="#6F7378") +
geom_vline(xintercept=9, linetype=2) +
# Bin 1 estimate
geom_smooth(method="lm", data=norm_bin1_ex[growth_bin1_ex$start_pt:growth_bin1_ex$end_pt,], linetype=2, color="blue", alpha=0.2) +
#labs(title=paste0("Bin 3 example -", growth_bin3_ex$Phylum, ", ", growth_bin3_ex$Genus), x="Day", y="ln normalized abundance") +
coord_cartesian(xlim = c(0, 30)) +
theme_test()
# Visualize
norm_bins_ex %>%
ggplot(aes(x=Day, y=log(norm_abund_avg))) +
geom_point(size=3, aes(shape=bin)) +
geom_line(aes(group=bin), color="#6F7378") +
geom_vline(xintercept=9, linetype=2) +
# Growth estimates
geom_smooth(method="lm", data=norm_bin1_ex[growth_bin1_ex$start_pt:growth_bin1_ex$end_pt,], linetype=2, color="blue", alpha=0.2) +
geom_smooth(method="lm", data=norm_bin2_ex[growth_bin2_ex$start_pt:growth_bin2_ex$end_pt,], linetype=2, color="red", alpha=0.2) +
#labs(title=paste0("Bin 3 example -", growth_bin3_ex$Phylum, ", ", growth_bin3_ex$Genus), x="Day", y="ln normalized abundance") +
coord_cartesian(xlim = c(0, 30)) +
theme_test()
# Visualize
norm_bins_ex %>%
ggplot(aes(x=Day, y=log(norm_abund_avg))) +
geom_point(size=3, aes(shape=bin)) +
geom_line(aes(group=bin), color="#6F7378") +
geom_vline(xintercept=9, linetype=2) +
# Growth estimates
geom_smooth(method="lm", data=norm_bin1_ex[growth_bin1_ex$start_pt:growth_bin1_ex$end_pt,], linetype=2, color="blue", alpha=0.2) +
geom_smooth(method="lm", data=norm_bin2_ex[growth_bin2_ex$start_pt:growth_bin2_ex$end_pt,], linetype=2, color="red", alpha=0.2) +
geom_smooth(method="lm", data=norm_bin3_ex[growth_bin3_ex$start_pt:growth_bin3_ex$end_pt,], linetype=2, color="green", alpha=0.2) +
#labs(title=paste0("Bin 3 example -", growth_bin3_ex$Phylum, ", ", growth_bin3_ex$Genus), x="Day", y="ln normalized abundance") +
coord_cartesian(xlim = c(0, 30)) +
theme_test()
# Visualize
norm_bins_ex %>%
ggplot(aes(x=Day, y=log(norm_abund_avg))) +
geom_point(size=3, aes(shape=bin, color=bin)) +
geom_line(aes(group=bin), color="#6F7378") +
geom_vline(xintercept=9, linetype=2) +
# Growth estimates
geom_smooth(method="lm", data=norm_bin1_ex[growth_bin1_ex$start_pt:growth_bin1_ex$end_pt,], linetype=2, color="blue", alpha=0.2) +
geom_smooth(method="lm", data=norm_bin2_ex[growth_bin2_ex$start_pt:growth_bin2_ex$end_pt,], linetype=2, color="red", alpha=0.2) +
geom_smooth(method="lm", data=norm_bin3_ex[growth_bin3_ex$start_pt:growth_bin3_ex$end_pt,], linetype=2, color="green", alpha=0.2) +
#labs(title=paste0("Bin 3 example -", growth_bin3_ex$Phylum, ", ", growth_bin3_ex$Genus), x="Day", y="ln normalized abundance") +
coord_cartesian(xlim = c(0, 30)) +
theme_test()
# Visualize
norm_bins_ex %>%
ggplot(aes(x=Day, y=log(norm_abund_avg))) +
geom_point(size=3, aes(shape=bin, color=bin)) +
geom_line(aes(group=bin, color=bin)) +
geom_vline(xintercept=9, linetype=2) +
# Growth estimates
geom_smooth(method="lm", data=norm_bin1_ex[growth_bin1_ex$start_pt:growth_bin1_ex$end_pt,], linetype=2, color="blue", alpha=0.2) +
geom_smooth(method="lm", data=norm_bin2_ex[growth_bin2_ex$start_pt:growth_bin2_ex$end_pt,], linetype=2, color="red", alpha=0.2) +
geom_smooth(method="lm", data=norm_bin3_ex[growth_bin3_ex$start_pt:growth_bin3_ex$end_pt,], linetype=2, color="green", alpha=0.2) +
#labs(title=paste0("Bin 3 example -", growth_bin3_ex$Phylum, ", ", growth_bin3_ex$Genus), x="Day", y="ln normalized abundance") +
coord_cartesian(xlim = c(0, 30)) +
theme_test()
# Visualize
norm_bins_ex %>%
ggplot(aes(x=Day, y=log(norm_abund_avg))) +
geom_point(size=3, aes(shape=bin, color=bin)) +
geom_line(aes(group=bin, color=bin)) +
geom_vline(xintercept=9, linetype=2) +
# Growth estimates
geom_smooth(method="lm", data=norm_bin1_ex[growth_bin1_ex$start_pt:growth_bin1_ex$end_pt,], linetype=2, color=1, alpha=0.2) +
geom_smooth(method="lm", data=norm_bin2_ex[growth_bin2_ex$start_pt:growth_bin2_ex$end_pt,], linetype=2, color=2, alpha=0.2) +
geom_smooth(method="lm", data=norm_bin3_ex[growth_bin3_ex$start_pt:growth_bin3_ex$end_pt,], linetype=2, color=3, alpha=0.2) +
#labs(title=paste0("Bin 3 example -", growth_bin3_ex$Phylum, ", ", growth_bin3_ex$Genus), x="Day", y="ln normalized abundance") +
coord_cartesian(xlim = c(0, 30)) +
theme_test()
# Visualize
norm_bins_ex %>%
ggplot(aes(x=Day, y=log(norm_abund_avg))) +
geom_point(size=3, aes(shape=bin, color=bin)) +
geom_line(aes(group=bin, color=bin)) +
geom_vline(xintercept=9, linetype=2) +
# Growth estimates
geom_smooth(method="lm", data=norm_bin1_ex[growth_bin1_ex$start_pt:growth_bin1_ex$end_pt,], linetype=2, color=2, alpha=0.2) +
geom_smooth(method="lm", data=norm_bin2_ex[growth_bin2_ex$start_pt:growth_bin2_ex$end_pt,], linetype=2, color=3, alpha=0.2) +
geom_smooth(method="lm", data=norm_bin3_ex[growth_bin3_ex$start_pt:growth_bin3_ex$end_pt,], linetype=2, color=4, alpha=0.2) +
#labs(title=paste0("Bin 3 example -", growth_bin3_ex$Phylum, ", ", growth_bin3_ex$Genus), x="Day", y="ln normalized abundance") +
coord_cartesian(xlim = c(0, 30)) +
theme_test()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(tidyverse)
library(cowplot)
sessionInfo()
rm(list=ls())
meta <- readRDS("../data_intermediate/SFA2_metadata.rds")
# Respiration data, remove non-samples
resp <- readRDS("../data_intermediate/SFA2_respiration.rds") %>%
filter(!Inoculant %in% c(0, 51))
# Growth estimates
growth <- readRDS("../data_intermediate/SFA2_growth_estimates_pap.rds")
# Normalized abundances
normabund <- readRDS("../data_intermediate/SFA2_norm_grestimated.rds")
# Combine and clean up growth and normalized abundance data
growth_abund <- full_join(growth, normabund) %>%
select(Inoculant, Day, ASV, start_day, end_day, k, n16S, norm_abund_avg) # remove unneeded columns
# community dissimilarity
wuni_dist <- readRDS("../data_intermediate/SFA2_wunidist_slim.rds")
# Cumulative mg CO2 and C
resp_total <-  resp %>%
group_by(Sample, Inoculant) %>%
summarize(total_mgCO2 = sum(mgCO2), total_mgC = total_mgCO2*(12/44)) %>% # molar weight ratio of C in CO2
ungroup() %>%
mutate(Inoculant = as.character(Inoculant))
# Visualize
resp_total %>%
filter(!(Inoculant %in% c(0, 51))) %>% # remove controls
ggplot(aes(x=Inoculant, y=total_mgCO2)) +
geom_point() +
theme_test()
# linear model
resp_total_lm <- lm(total_mgCO2 ~ Inoculant, data=resp_total)
hist(resid(resp_total_lm)) # non-normal
# Kruskal-Wallis
kruskal.test(total_mgCO2 ~ Inoculant, data=resp_total)
# Correct normalized abundance by 16S copy number
growth_abund <- growth_abund %>%
mutate(norm_abund_corr = norm_abund_avg/n16S)
# Calculate weighted k and summed k
weighted_gr <- data.frame()
for (i in unique(growth_abund$Inoculant)) {
for (d in unique(growth_abund$Day)) {
data_subset <- filter(growth_abund, Inoculant==i & Day==d) %>%
filter(start_day <= d & end_day >= d) # include only ASVs that grew on the given day
weighted_mean <- weighted.mean(data_subset$k, data_subset$norm_abund_corr)
this_row <- bind_cols(Inoculant=i, Day=d, weighted_k=weighted_mean)
weighted_gr <- bind_rows(weighted_gr, this_row)
}
}
# Visualize
weighted_gr %>%
ggplot(aes(x=Day, y=weighted_k)) +
geom_boxplot(aes(group=Day)) +
geom_point() +
#geom_line() +
#facet_wrap(~Inoculant) +
labs(title="Weighted mean growth rates over time") +
theme_test()
growth_resprate <- inner_join(weighted_gr, resp_rate_inoc)
resp_rate <- resp %>%
select(Sample, Inoculant, Day, Timeframe, mgCO2) %>%
mutate(mgCO2_day = mgCO2/Timeframe) %>%
filter(!is.infinite(mgCO2_day)) # remove day 0 (no rate possible)
# Average replicates for each inoculant
resp_rate_inoc <- resp_rate %>%
group_by(Inoculant, Day) %>%
summarize(mgCO2_day = mean(mgCO2_day))
resp_rate_inoc %>%
filter(!(Inoculant %in% c(0, 51))) %>%  # remove controls
ggplot(aes(x=Day, y=mgCO2_day)) +
geom_boxplot(aes(group=Day)) +
geom_jitter() +
theme_test()
growth_resprate <- inner_join(weighted_gr, resp_rate_inoc)
growth_resprate %>%
ggplot(aes(x=mgCO2_day, y=weighted_k)) +
geom_point() +
geom_smooth(method="lm", linetype=2) +
theme_test() +
labs(title="Weighted growth rates vs. respiration rates", x="Respiration rate mean (mgCO2/day)", y="specific growth rate w.mean")
growth_eff <- data.frame()
times <- as.data.frame(unique(growth_abund$Day)) %>%
select(Day = `unique(growth_abund$Day)`) %>%
arrange(Day) %>%
rownames_to_column(var="TP") %>%
mutate(TP = as.numeric(TP))
resp_times <- as.data.frame(unique(resp_rate$Day)) %>%
select(Day = `unique(resp_rate$Day)`) %>%
arrange(Day) %>%
rownames_to_column(var="TP") %>%
mutate(TP = as.numeric(TP))
for (i in unique(growth_abund$Inoculant)) {
for (d in unique(growth_abund$Day)) {
# Calculate time frame
next_tp <- times[times$Day==d,]$TP + 1
next_day <- times[next_tp, 2]
t <- next_day - d
# Calculate gained abundance for each taxon
gained_abund <- filter(growth_abund, Inoculant==i & Day==d) %>%
filter(start_day <= d & end_day >= d) %>% # remove taxa that did not grow on given day
mutate(g = log(2)/k, # calculate doubling time (ln2 / specific growth rate)
t = t, # timeframe
n = t/g, # number of generations
Nt = norm_abund_corr*2^n,
deltaN = Nt - norm_abund_corr) %>% # biomass at end of timeframe
summarize(total = sum(deltaN)) %>%
select(total) %>%
as.numeric()
# Calculate respired CO2
times_subset <- filter(resp_times, Day > d) # use the rate calculated for the timeframe, associated with next tp value
resp_d <- times_subset[1,] %>% # will choose d or nearest time point after d
select(Day) %>%
as.numeric()
respired <- filter(resp_rate, Inoculant==i & Day==resp_d) %>%
summarize(rate = mean(mgCO2_day)) %>% # average technical replicates
mutate(t = t,
total = rate*t) %>%
select(total) %>%
as.numeric()
# Combine dataframes
add_row <- bind_cols(Inoculant=i, Day=next_day, deltaN_total=gained_abund, CO2=respired)
growth_eff <- bind_rows(growth_eff, add_row)
}
}
# Calculate growth efficiency
growth_eff <- mutate(growth_eff, growth_eff = deltaN_total/CO2)
head(growth_eff)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(tidyverse)
library(cowplot)
sessionInfo()
rm(list=ls())
meta <- readRDS("../data_intermediate/SFA2_metadata.rds")
# Respiration data, remove non-samples
resp <- readRDS("../data_intermediate/SFA2_respiration.rds") %>%
filter(!Inoculant %in% c(0, 51))
# Growth estimates
growth <- readRDS("../data_intermediate/SFA2_growth_estimates_pap.rds")
# Normalized abundances
normabund <- readRDS("../data_intermediate/SFA2_norm_grestimated.rds")
# Combine and clean up growth and normalized abundance data
growth_abund <- full_join(growth, normabund) %>%
select(Inoculant, Day, ASV, start_day, end_day, k, n16S, norm_abund_avg) # remove unneeded columns
# community dissimilarity
wuni_dist <- readRDS("../data_intermediate/SFA2_wunidist_slim.rds")
# Cumulative mg CO2 and C
resp_total <-  resp %>%
group_by(Sample, Inoculant) %>%
summarize(total_mgCO2 = sum(mgCO2), total_mgC = total_mgCO2*(12/44)) %>% # molar weight ratio of C in CO2
ungroup() %>%
mutate(Inoculant = as.character(Inoculant))
# Visualize
resp_total %>%
filter(!(Inoculant %in% c(0, 51))) %>% # remove controls
ggplot(aes(x=Inoculant, y=total_mgCO2)) +
geom_point() +
theme_test()
# linear model
resp_total_lm <- lm(total_mgCO2 ~ Inoculant, data=resp_total)
hist(resid(resp_total_lm)) # non-normal
# Kruskal-Wallis
kruskal.test(total_mgCO2 ~ Inoculant, data=resp_total)
resp_rate <- resp %>%
select(Sample, Inoculant, Day, Timeframe, mgCO2) %>%
mutate(mgCO2_day = mgCO2/Timeframe) %>%
filter(!is.infinite(mgCO2_day)) # remove day 0 (no rate possible)
# Average replicates for each inoculant
resp_rate_inoc <- resp_rate %>%
group_by(Inoculant, Day) %>%
summarize(mgCO2_day = mean(mgCO2_day))
resp_rate_inoc %>%
filter(!(Inoculant %in% c(0, 51))) %>%  # remove controls
ggplot(aes(x=Day, y=mgCO2_day)) +
geom_boxplot(aes(group=Day)) +
geom_jitter() +
theme_test()
# Correct normalized abundance by 16S copy number
growth_abund <- growth_abund %>%
mutate(norm_abund_corr = norm_abund_avg/n16S)
# Calculate weighted k and summed k
weighted_gr <- data.frame()
for (i in unique(growth_abund$Inoculant)) {
for (d in unique(growth_abund$Day)) {
data_subset <- filter(growth_abund, Inoculant==i & Day==d) %>%
filter(start_day <= d & end_day >= d) # include only ASVs that grew on the given day
weighted_mean <- weighted.mean(data_subset$k, data_subset$norm_abund_corr)
this_row <- bind_cols(Inoculant=i, Day=d, weighted_k=weighted_mean)
weighted_gr <- bind_rows(weighted_gr, this_row)
}
}
# Visualize
weighted_gr %>%
ggplot(aes(x=Day, y=weighted_k)) +
geom_boxplot(aes(group=Day)) +
geom_point() +
#geom_line() +
#facet_wrap(~Inoculant) +
labs(title="Weighted mean growth rates over time") +
theme_test()
growth_resprate <- inner_join(weighted_gr, resp_rate_inoc)
growth_resprate %>%
ggplot(aes(x=mgCO2_day, y=weighted_k)) +
geom_point() +
geom_smooth(method="lm", linetype=2) +
theme_test() +
labs(title="Weighted growth rates vs. respiration rates", x="Respiration rate mean (mgCO2/day)", y="specific growth rate w.mean")
cor.test(growth_resprate$mgCO2_day, growth_resprate$weighted_k)
growth_eff <- data.frame()
times <- as.data.frame(unique(growth_abund$Day)) %>%
select(Day = `unique(growth_abund$Day)`) %>%
arrange(Day) %>%
rownames_to_column(var="TP") %>%
mutate(TP = as.numeric(TP))
resp_times <- as.data.frame(unique(resp_rate$Day)) %>%
select(Day = `unique(resp_rate$Day)`) %>%
arrange(Day) %>%
rownames_to_column(var="TP") %>%
mutate(TP = as.numeric(TP))
for (i in unique(growth_abund$Inoculant)) {
for (d in unique(growth_abund$Day)) {
# Calculate time frame
next_tp <- times[times$Day==d,]$TP + 1
next_day <- times[next_tp, 2]
t <- next_day - d
# Calculate gained abundance for each taxon
gained_abund <- filter(growth_abund, Inoculant==i & Day==d) %>%
filter(start_day <= d & end_day >= d) %>% # remove taxa that did not grow on given day
mutate(g = log(2)/k, # calculate doubling time (ln2 / specific growth rate)
t = t, # timeframe
n = t/g, # number of generations
Nt = norm_abund_corr*2^n,
deltaN = Nt - norm_abund_corr) %>% # biomass at end of timeframe
summarize(total = sum(deltaN)) %>%
select(total) %>%
as.numeric()
# Calculate respired CO2
times_subset <- filter(resp_times, Day > d) # use the rate calculated for the timeframe, associated with next tp value
resp_d <- times_subset[1,] %>% # will choose d or nearest time point after d
select(Day) %>%
as.numeric()
respired <- filter(resp_rate, Inoculant==i & Day==resp_d) %>%
summarize(rate = mean(mgCO2_day)) %>% # average technical replicates
mutate(t = t,
total = rate*t) %>%
select(total) %>%
as.numeric()
# Combine dataframes
add_row <- bind_cols(Inoculant=i, Day=next_day, deltaN_total=gained_abund, CO2=respired)
growth_eff <- bind_rows(growth_eff, add_row)
}
}
# Calculate growth efficiency
growth_eff <- mutate(growth_eff, growth_eff = deltaN_total/CO2)
# gained abundance vs CO2 produced
growth_eff %>%
ggplot(aes(x=log(deltaN_total), y=CO2)) +
geom_point() +
geom_smooth(method="lm", linetype=2) +
theme_test()
# Growth efficiency over time
growth_eff %>%
ggplot(aes(x=Day, y=log(growth_eff))) +
geom_point() +
#geom_smooth(method="lm", linetype=2) +
theme_test()
# Growth efficiency over time
growth_eff %>%
ggplot(aes(x=Day, y=log(growth_eff))) +
geom_point() +
geom_smooth(method="lm", linetype=2) +
theme_test()
# Growth efficiency over time
growth_eff %>%
ggplot(aes(x=Day, y=log(growth_eff))) +
geom_point() +
geom_smooth(linetype=2) +
theme_test()
# Growth efficiency over time
growth_eff %>%
ggplot(aes(x=Day, y=log(growth_eff))) +
geom_point() +
geom_boxplot() +
geom_smooth(linetype=2) +
theme_test()
# Growth efficiency over time
growth_eff %>%
ggplot(aes(x=Day, y=log(growth_eff))) +
geom_point() +
geom_boxplot(aes(group(Day))) +
geom_smooth(linetype=2) +
theme_test()
# Growth efficiency over time
growth_eff %>%
ggplot(aes(x=Day, y=log(growth_eff))) +
geom_point() +
geom_boxplot(aes(group=`Day)) +
geom_smooth(linetype=2) +
theme_test()
# Growth efficiency over time
growth_eff %>%
ggplot(aes(x=Day, y=log(growth_eff))) +
geom_point() +
geom_boxplot(aes(group=Day)) +
geom_smooth(linetype=2) +
theme_test()
# gained abundance vs CO2 produced
growth_eff %>%
ggplot(aes(x=log(deltaN_total), y=CO2)) +
geom_point() +
geom_smooth(method="lm", linetype=2) +
theme_test()
# Growth efficiency over time
growth_eff %>%
ggplot(aes(x=Day, y=log(growth_eff))) +
geom_point() +
geom_boxplot(aes(group=Day)) +
geom_smooth(linetype=2) +
theme_test()
# Growth efficiency over time
growth_eff %>%
ggplot(aes(x=Day, y=log(growth_eff))) +
geom_point() +
geom_boxplot(aes(group=Day)) +
geom_smooth(linetype=2) +
theme_test()
# Growth efficiency over time
growth_eff %>%
ggplot(aes(x=Day, y=log(growth_eff))) +
geom_boxplot(aes(group=Day)) +
geom_point() +
geom_smooth(linetype=2) +
theme_test()
head(resp_rate)
head(growth_eff)
deltaN_resprate <- growth_eff %>%
inner_join(resp_rate) %>%
select(Inoculant, Day, deltaN_total, mgCO2_day)
deltaN_resprate
# Visualize
deltaN_resprate %>%
ggplot(aes(x=mgCO23_day, y=deltaN_total)) +
geom_point() +
theme_test()
# Visualize
deltaN_resprate %>%
ggplot(aes(x=mgCO2_day, y=deltaN_total)) +
geom_point() +
theme_test()
# Visualize
deltaN_resprate %>%
ggplot(aes(x=mgCO2_day, y=log(deltaN_total))) +
geom_point() +
theme_test()
# Visualize
deltaN_resprate %>%
ggplot(aes(x=mgCO2_day, y=log(deltaN_total))) +
geom_point() +
geom_smooth(method="lm") +
theme_test()
# Visualize
deltaN_resprate %>%
ggplot(aes(x=mgCO2_day, y=log(deltaN_total))) +
geom_point() +
geom_smooth(method="lm", linetype=2) +
theme_test()
