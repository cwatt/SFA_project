geom_point(aes(color=group, shape=group)) +
geom_smooth(method="lm", linetype=2, color="black", alpha=0.5) +
scale_color_manual(values=grp_colors) +
theme_test() +
theme(title = element_text(size=12),
axis.title = element_blank(),
axis.text = element_text(size=10),
legend.position = "none")
plot_length1
plot_length2 <- growth_grp_avg %>%
ggplot(aes(x=length, y=log(change_abund_corr), color=group, shape=group)) +
geom_point() +
geom_smooth(method="lm", linetype=2, alpha=0.5, aes(group=group)) +
scale_color_manual(values=grp_colors) +
theme_test() +
theme(title = element_text(size=12),
axis.title = element_blank(),
axis.text = element_text(size=10),
legend.position = "none")
plot_length2
plot_k1 <- growth_grp %>%
ggplot(aes(x=k, y=log(change_abund_corr))) +
geom_point(aes(color=group, shape=group)) +
geom_smooth(method="lm", linetype=2, alpha=0.5, color="black") +
scale_color_manual(values=grp_colors) +
theme_test() +
theme(title = element_text(size=12),
axis.title = element_blank(),
axis.text = element_text(size=10),
legend.position = "none")
plot_k1
plot_k2 <- growth_grp %>%
ggplot(aes(x=k, y=log(change_abund_corr), color=group, shape=group)) +
geom_point() +
geom_smooth(method="lm", linetype=2, alpha=0.5, aes(group=group)) +
scale_color_manual(values=grp_colors) +
theme_test() +
theme(title = element_text(size=12),
axis.title = element_blank(),
axis.text = element_text(size=10),
legend.position = "none")
plot_k2
# Combine
plot_lengthk <- plot_grid(plot_length1,  plot_k1, plot_length2, plot_k2, nrow=2)
plot_lengthk
plotx <- imputed_deltaN %>%
mutate(phase2 = if_else(phase=="exp", "Exponential", "Stationary"),
type2 = if_else(type=="death", "Death", "Growth")) %>%
ggplot(aes(x=phase2, y=log(deltaN))) +
geom_boxplot() +
theme_test() +
facet_wrap(~type2) +
theme_test() +
theme(title = element_text(size=12),
axis.title = element_blank(),
axis.text = element_text(size=10))
plotx
ggsave("../figures/fig_deltaexpstat.svg", plotx, height=120, width=210, units="mm", device="svg")
head(growth_grp)
head(pap_all)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
# Clear working directory, load in packages, generate package info
rm(list=ls())
library("phyloseq")
library("vegan")
library("tidyverse")
library("lmerTest")
library("cowplot")
sessionInfo()
# I can't type "head" apparently so I'm going to make an alias
h <- function(x) {head(x)}
# Metadata
meta <- readRDS("../data_intermediate/SFA2_metadata.rds")
# Growth estimates
growth <- readRDS("../data_intermediate/SFA2_growth_estimates_pap2.rds")
# Death estimates
death <- readRDS("../data_intermediate/SFA2_death_estimates_pap2.rds")
# All paprica estimates
pap_all <- readRDS("../data_intermediate/SFA2_paprica_all.rds")
head(growth)
head9death
head(death)
growth_death <- growth %>%
select(Inoculant, ASV, gr_k=k, deltaNg=change_abund_corr) %>%
inner_join(death) %>%
select(Inocualnt, ASV, gr_k, de_k=k, deltaNg, deltaNd=change_abund_corr)
growth_death <- growth %>%
select(Inoculant, ASV, gr_k=k, deltaNg=change_abund_corr) %>%
inner_join(death) %>%
select(Inoculant, ASV, gr_k, de_k=k, deltaNg, deltaNd=change_abund_corr)
head(growth_death)
nrow(growth_death)
growth_death <- growth %>%
select(Inoculant, ASV, gr_k=k, deltaNg=change_abund_corr) %>%
inner_join(death) %>%
select(Inoculant, ASV, gr_k, de_k=k, deltaNg, deltaNd=change_abund_corr) %>%
group_by(ASV) %>% # average ASVs across inoculant (for independence)
summarize(gr_k = mean(gr_k),
de_k = mean(de_k),
deltaNg = mean(deltaNg),
deltaNd = mean(deltaNd))
head(growth_death)
nrow(growth_death)
growth_death %>%
ggplot(aes(x=gr_k, y=de_k)) +
geom_point() +
theme_test()
# deltaN
growth_death %>%
ggplot(aes(x=deltaNg, y=deltaNd)) +
geom_point() +
theme_test()
# deltaN
growth_death %>%
ggplot(aes(x=log(deltaNg), y=log(deltaNd))) +
geom_point() +
theme_test()
# deltaN
growth_death %>%
ggplot(aes(x=log(deltaNg), y=log(abs(deltaNd)))) +
geom_point() +
theme_test()
# deltaN
growth_death %>%
ggplot(aes(x=log(deltaNg), y=log(abs(deltaNd)))) +
geom_point() +
geom_smooth(method="lm", linetype=2) +
theme_test()
# deltaN
growth_death %>%
ggplot(aes(x=log(deltaNg), y=log(abs(deltaNd)))) +
geom_point() +
geom_smooth(method="lm", linetype=2) +
theme_test() +
theme(axis.text = element_text(size=10),
axis.title = element_blank())
# deltaN
growth_death %>%
ggplot(aes(x=log(deltaNg), y=log(abs(deltaNd)))) +
geom_point() +
geom_smooth(method="lm", linetype=2, color="black") +
theme_test() +
theme(axis.text = element_text(size=10),
axis.title = element_blank())
# deltaN
growth_death %>%
ggplot(aes(x=log(deltaNg), y=log(abs(deltaNd)))) +
geom_point() +
geom_smooth(method="lm", linetype=2, color="gray") +
theme_test() +
theme(axis.text = element_text(size=10),
axis.title = element_blank())
# deltaN
growth_death %>%
ggplot(aes(x=log(deltaNg), y=log(abs(deltaNd)))) +
geom_point() +
geom_smooth(method="lm", linetype=2, color="darkgray") +
theme_test() +
theme(axis.text = element_text(size=10),
axis.title = element_blank())
cor.test(log(growth_death$deltaNg), log(growth_death$deltaNd), data=growth_death)
cor.test(log(growth_death$deltaNg), log(abs(growth_death$deltaNd)), data=growth_death)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
# Clear working directory, load in packages, generate package info
rm(list=ls())
library("phyloseq")
library("vegan")
library("tidyverse")
library("lmerTest")
library("cowplot")
sessionInfo()
# Rarefied phyloseq
physeq <- readRDS("../data_intermediate/SFA2_physeq_rare.rds")
# Taxonomy (takes a long time to extract from phyloseq as data frame)
tax <- readRDS("../data_intermediate/SFA2_taxonomy.rds")
meta <- data.frame(sample_data(physeq))
meta_expstat <- mutate(meta, phase = if_else(Day <= 9, "exponential", "stationary"))
physeq_expstat <- phyloseq(otu_table(physeq), tax_table(physeq), physeq@phy_tree, sample_data(meta_expstat))
# Extract data from phyloseq
count_expstat <- data.frame(otu_table(physeq_expstat)) %>%
rownames_to_column(var="ASV") %>%
gather(SampleID, count, -ASV)
# Combine
count_tax_meta <- inner_join(count_expstat, tax) %>%
inner_join(meta_expstat, by="SampleID") %>%
mutate(Inoculant = as_factor(Inoculant)) %>%
mutate(across(Domain:Species, ~as.character(.x), {.col})) %>%
filter(ASV != "445e8681c3c1a735760e6c394f5f4d0a") # remove spike-in
# Extract data from phyloseq
count_expstat <- data.frame(otu_table(physeq_expstat)) %>%
rownames_to_column(var="ASV") %>%
gather(SampleID, count, -ASV)
# Combine
count_tax_meta <- inner_join(count_expstat, tax) %>%
inner_join(meta_expstat, by="SampleID") %>%
mutate(Inoculant = as_factor(Inoculant)) %>%
mutate(across(Domain:Species, ~as.character(.x))) %>%
filter(ASV != "445e8681c3c1a735760e6c394f5f4d0a") # remove spike-in
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(tidyverse)
library(cowplot)
sessionInfo()
rm(list=ls())
meta <- readRDS("../data_intermediate/SFA2_metadata.rds")
# Respiration data, remove non-samples
resp <- readRDS("../data_intermediate/SFA2_respiration.rds") %>%
filter(!Inoculant %in% c(0, 51)) # remove controls
# Growth estimates
growth <- readRDS("../data_intermediate/SFA2_growth_estimates_pap2.rds")
# Normalized abundances
norm_gr <- readRDS("../data_intermediate/SFA2_norm_grestimated.rds")
norm_all <- readRDS("../data_intermediate/SFA2_normalized.rds")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
# Clear working directory, load in packages, generate package info
rm(list=ls())
library("phyloseq")
library("vegan")
library("tidyverse")
library("lmerTest")
library("cowplot")
sessionInfo()
# I can't type "head" apparently so I'm going to make an alias
h <- function(x) {head(x)}
# Metadata
meta <- readRDS("../data_intermediate/SFA2_metadata.rds")
# Growth estimates
growth <- readRDS("../data_intermediate/SFA2_growth_estimates_pap2.rds")
# Death estimates
death <- readRDS("../data_intermediate/SFA2_death_estimates_pap2.rds")
# All paprica estimates
pap_all <- readRDS("../data_intermediate/SFA2_paprica_all.rds")
growth_death <- growth %>%
select(Inoculant, ASV, gr_k=k, deltaNg=change_abund_corr) %>%
inner_join(death) %>%
select(Inoculant, ASV, gr_k, de_k=k, deltaNg, deltaNd=change_abund_corr) %>%
group_by(ASV) %>% # average ASVs across inoculant (for independence)
summarize(gr_k = mean(gr_k),
de_k = mean(de_k),
deltaNg = mean(deltaNg),
deltaNd = mean(deltaNd))
# rate
growth_death %>%
ggplot(aes(x=gr_k, y=de_k)) +
geom_point() +
theme_test()
# deltaN
growth_death %>%
ggplot(aes(x=log(deltaNg), y=log(abs(deltaNd)))) +
geom_point() +
geom_smooth(method="lm", linetype=2, color="darkgray") +
theme_test() +
theme(axis.text = element_text(size=10),
axis.title = element_blank())
# deltaN
growth_death %>%
ggplot(aes(x=log(deltaNg), y=log(abs(deltaNd)))) +
geom_point(size=10) +
geom_smooth(method="lm", linetype=2, color="darkgray") +
theme_test() +
theme(axis.text = element_text(size=10),
axis.title = element_blank())
# rate
growth_death %>%
ggplot(aes(x=gr_k, y=de_k)) +
geom_point() +
theme_test()
# deltaN
growth_death %>%
ggplot(aes(x=log(deltaNg), y=log(abs(deltaNd)))) +
geom_point(size=10) +
geom_smooth(method="lm", linetype=2, color="black") +
theme_test() +
theme(axis.text = element_text(size=10),
axis.title = element_blank())
# deltaN
growth_death %>%
ggplot(aes(x=log(deltaNg), y=log(abs(deltaNd)))) +
geom_point(size=5) +
geom_smooth(method="lm", linetype=2, color="black") +
theme_test() +
theme(axis.text = element_text(size=10),
axis.title = element_blank())
# deltaN
growth_death %>%
ggplot(aes(x=log(deltaNg), y=log(abs(deltaNd)))) +
geom_point(size=5) +
geom_smooth(method="lm", linetype=2, color="black") +
theme_test() +
theme(axis.text = element_text(size=10),
axis.title = element_blank())
# deltaN
growth_death %>%
ggplot(aes(x=log(deltaNg), y=log(abs(deltaNd)))) +
geom_point(size=3) +
geom_smooth(method="lm", linetype=2, color="black") +
theme_test() +
theme(axis.text = element_text(size=10),
axis.title = element_blank())
cor.test(log(growth_death$deltaNg), log(abs(growth_death$deltaNd)), data=growth_death)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(tidyverse)
library(cowplot)
sessionInfo()
rm(list=ls())
meta <- readRDS("../data_intermediate/SFA2_metadata.rds")
# Respiration data, remove non-samples
resp <- readRDS("../data_intermediate/SFA2_respiration.rds") %>%
filter(!Inoculant %in% c(0, 51)) # remove controls
# Growth estimates
growth <- readRDS("../data_intermediate/SFA2_growth_estimates_pap2.rds")
# Normalized abundances
norm_gr <- readRDS("../data_intermediate/SFA2_norm_grestimated.rds")
norm_all <- readRDS("../data_intermediate/SFA2_normalized.rds")
# All paprica estimates
pap_all <- readRDS("../data_intermediate/SFA2_paprica_all.rds")
# Combine and clean up growth and normalized abundance data
growth_abund <- left_join(growth, norm_gr) %>%
select(Inoculant, Day, ASV, slope, yint, start_day, end_day, k, n16S, norm_abund_avg)
# Cumulative mg CO2 and C for each replicate
resp_total <-  resp %>%
group_by(Sample, Inoculant) %>%
summarize(total_mgCO2 = sum(mgCO2), total_mgC = total_mgCO2*(12/44)) %>% # molar weight ratio of C in CO2
ungroup() %>%
mutate(Inoculant = as.character(Inoculant))
# Visualize
resp_total %>%
filter(!(Inoculant %in% c(0, 51))) %>% # remove controls
ggplot(aes(x=Inoculant, y=total_mgCO2)) +
geom_point() +
theme_test()
mean(resp_total$total_mgC)
sd(resp_total$total_mgC)
# linear model
resp_total_lm <- lm(total_mgCO2 ~ Inoculant, data=resp_total)
hist(resid(resp_total_lm)) # non-normal
# Kruskal-Wallis
kruskal.test(total_mgCO2 ~ Inoculant, data=resp_total)
# Each replicate rate
resp_rate <- resp %>%
select(Sample, Inoculant, Day, Timeframe, mgCO2) %>%
mutate(mgCO2_day = mgCO2/Timeframe) %>%
filter(!is.infinite(mgCO2_day)) # remove day 0 (no rate possible)
# Average replicates per day
resp_rate_inoc <- resp_rate %>%
group_by(Inoculant, Day) %>%
summarize(mgCO2_day = mean(mgCO2_day))
resp_rate_inoc %>%
filter(!(Inoculant %in% c(0, 51))) %>%  # remove controls
ggplot(aes(x=Day, y=mgCO2_day)) +
geom_boxplot(aes(group=Day)) +
geom_jitter() +
geom_vline(xintercept = 5, linetype=2) +
theme_test()
# Add 16S copies to normalized abundance data
pap_slim <- pap_all %>%
select(ASV, n16S)
norm_pap <- inner_join(norm_all, pap_slim)
# Average replicates and sum ASVs
norm_total <- norm_pap %>%
filter(Type=="Growth") %>%
select(Inoculant, Day, Replicate, ASV, norm_abund, n16S) %>%
group_by(Inoculant, Day, ASV, n16S) %>% # average reps
summarize(norm_abund_avg = mean(norm_abund, na.rm=TRUE)) %>%
ungroup() %>%
mutate(norm_abund_cor = norm_abund_avg/n16S) %>% # correct by rrn copies
group_by(Inoculant, Day) %>%  # sum ASV abundances for total
summarize(norm_total = sum(norm_abund_cor, na.rm=TRUE)) %>%
ungroup()
# CO2 averages
resp_rate_avg <- resp_rate %>%
group_by(Inoculant, Day) %>%
summarize(mgCO2 = mean(mgCO2),
mgCO2_day = mean(mgCO2_day)) %>%
ungroup()
# combine
norm_total_resp <- inner_join(norm_total, resp_rate_avg)
norm_total_resp %>%
ggplot(aes(x=log(norm_total), y=mgCO2_day)) +
geom_point() +
geom_smooth(method="lm") +
theme_test()
cor.test(log(norm_total_resp$norm_total), norm_total_resp$mgCO2_day)
# Correct normalized abundance by 16S copy number
growth_abund <- growth_abund %>%
mutate(norm_abund_corr = norm_abund_avg/n16S)
# Calculate weighted k
weighted_gr <- data.frame()
for (i in unique(growth_abund$Inoculant)) {
for (d in unique(growth_abund$Day)) {
data_subset <- filter(growth_abund, Inoculant==i & Day==d) %>%
filter(start_day <= d & end_day >= d) # include only ASVs that grew on the given day
weighted_mean <- weighted.mean(data_subset$k, data_subset$norm_abund_corr) # weight by corrected abundance
this_row <- bind_cols(Inoculant=i, Day=d, weighted_k=weighted_mean)
weighted_gr <- bind_rows(weighted_gr, this_row)
}
}
# Visualize
weighted_gr %>%
ggplot(aes(x=Day, y=weighted_k)) +
geom_boxplot(aes(group=Day)) +
geom_point() +
#geom_line() +
#facet_wrap(~Inoculant) +
labs(title="Weighted mean growth rates over time") +
theme_test()
growth_resprate <- inner_join(weighted_gr, resp_rate_inoc)
growth_resprate %>%
ggplot(aes(x=mgCO2_day, y=weighted_k)) +
geom_point() +
geom_smooth(method="lm", linetype=2) +
theme_test() +
labs(title="Weighted growth rates vs. respiration rates", x="Respiration rate mean (mgCO2/day)", y="specific growth rate w.mean")
# Averaged across inoculants
# growth_resprate %>%
#   group_by(Day) %>%
#   summarize(weighted_k = mean(weighted_k, na.rm=TRUE),
#             mgCO2_day = mean(mgCO2_day, na.rm=TRUE)) %>%
#   ungroup() %>%
#   ggplot(aes(x=mgCO2_day, y=weighted_k)) +
#   geom_point() +
#   geom_smooth(method="lm", linetype=2) +
#   theme_test() +
#   labs(title="Weighted growth rates vs. respiration rates", x="Respiration rate mean (mgCO2/day)", y="specific growth rate w.mean")
cor.test(growth_resprate$mgCO2_day, growth_resprate$weighted_k)
# How frequent are drop outs?
drop_outs <- growth_abund %>%
group_by(Inoculant, ASV) %>%
summarize(count = n()) %>%
ungroup() %>%
filter(count < 20) %>%
nrow()
total <- growth_abund %>%
group_by(Inoculant, ASV) %>%
summarize(count = 1) %>%
ungroup() %>%
summarize(sum(count))
drop_outs/total
# Prep growth data
growth_slim <- growth %>%
select(label, Inoculant, ASV, slope, yint, start_day, end_day, n16S)
# Prep respiration tps
resp_tps <- as.data.frame(unique(resp$Day)) %>%
select(Day = `unique(resp$Day)`) %>%
arrange(Day) %>%
rownames_to_column(var="TP") %>%
mutate(TP = as.numeric(TP))
# Build growth df with respiration time points
growth_resptps <- data.frame()
for (l in unique(growth_slim$label)) {
for (d in unique(resp_tps$Day)) {
growth_l <- filter(growth_slim, label==l)
this_row <- add_column(growth_l, Day=d)
growth_resptps <- bind_rows(growth_resptps, this_row)
}
}
# Impute
growth_impute <- growth_resptps %>%
# add respiration measurement tps
mutate(growing = if_else(Day >= start_day & Day <= end_day, "yes", "no"), # label if during growth period
impute_abund = if_else(growing=="yes", slope*Day+yint, NULL), # impute using linear estimate
impute_abund_corr = exp(impute_abund)/n16S) %>% # un-ln and correct by n16S
select(Inoculant, ASV, Day, start_day, end_day, impute_abund_corr) %>%
filter(!is.na(impute_abund_corr))
growth_resprate
head(growth_resprate)
head(greff)
# Impute
growth_impute <- growth_resptps %>%
# add respiration measurement tps
mutate(growing = if_else(Day >= start_day & Day <= end_day, "yes", "no"), # label if during growth period
impute_abund = if_else(growing=="yes", slope*Day+yint, NULL), # impute using linear estimate
impute_abund_corr = exp(impute_abund)/n16S) %>% # un-ln and correct by n16S
select(Inoculant, ASV, Day, start_day, end_day, impute_abund_corr) %>%
filter(!is.na(impute_abund_corr))
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library("ggtree")
library("ape")
library("tidyverse")
library("tidyverse")
library("ggtree")
install.packages("ggtree")
BiocManager::install("ggtree")
BiocManager::install("ggtree")
getwd()
readRDS("data_intermediate/SFA2_taxonomy.rds")
tree <- readRDS("data_intermediate/SFA2_taxonomy.rds")
tree
head(tree)
tax <- readRDS("data_intermediate/SFA2_taxonomy.rds")
head(tax)
str(tax)
write_csv(tax, "data_intermediate/SFA_taxonomy.csv")
library(tidyverse)
write_csv(tax, "data_intermediate/SFA_taxonomy.csv")
tax
tax
head(tax)
