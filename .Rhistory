doc = c(rep("low", 3), rep("high", 3), rep("low", 3), rep("low", 3), rep("high", 3), rep("high", 3), rep(NA, 3))
# Add metadata
sample.totals = sample.totals %>%
mutate(Sample = parse_number(Sample)) %>% # convert class of samples
arrange(Sample) %>% # reorder order by sample number
bind_cols("innoculant" = innoculant) %>%
bind_cols("doc" = doc)
sample.totals %>%
ggplot(aes(x=innoculant, y=totalCO2mg, color=doc)) +
geom_point() +
labs(title="Cumulative CO2 respiration", y="CO2 mg", x="Innoculant") +
theme_test()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(tidyverse)
library(cowplot)
sessionInfo()
rm(list=ls())
# List of directories containing data files
dir = list.dirs(path="data_CO2/SFA2/data", full.names=TRUE, recursive=FALSE)
# Create lists of .txt files from directories
files = list()
for (i in dir) {
files[[i]] <- list.files(path=i, pattern="*.txt", full.names=TRUE, recursive=FALSE)
}
# Extract area data
# TIC, w/z44 (12C), w/z45 (13C)
# Construct data frame containing all data
area.df = tibble() # initialize empty tibble
for (i in names(files)) { # for each list of files (refers to a directory)
for (x in files[[i]]) { # for each file in the selected list (directory)
# Create sample names based on file names
# Strips the rest of the path from the sample name at the end
name = str_remove(x, "data_CO2/SFA2/data/.+/") %>%
str_remove(".txt")
#name.list[[i]] = append(name.list[[i]], name)
# Isolate time point info
date = str_remove(x, "data_CO2/SFA2/data/") %>%
str_remove("/.+.txt") %>%
str_remove(".+_")
tp = str_remove(x, "data_CO2/SFA2/data/") %>%
str_remove("/.+.txt") %>%
str_remove("_.+")
# Isolate the area data and clean up
dat = read_tsv(x, skip=7, col_names=TRUE) %>%
select("Measurement" = Name, Area) %>% # keep only the name of sample and the area measurements collected
drop_na() %>%
mutate(Measurement = case_when(Measurement == "TIC" ~ "Ctotal", # more explicit measurement labels
Measurement == "m/z 44" ~ "C12",
Measurement == "m/z 45" ~ "C13"),
TP = tp, # adding additional metadata...
Date = date,
Sample = name)
area.df = rbind(area.df, dat) # add to master data frame
}
}
# Parse dates
area.df = area.df %>%
mutate(Date = gsub("([0-2]{2})([0-9]{2})([0-2]{2})", "\\1-\\2-20\\3", Date)) %>%
mutate(Date = parse_date(Date, "%m-%d-%Y"))
# Calculate
area.df = area.df %>%
pivot_wider(names_from = Measurement, values_from = Area) %>%
mutate(C1213 = C12+C13)
std.df = area.df %>%
filter(str_detect(Sample, "std"))
# Calculate adjusted areas
std.df = std.df %>%
mutate(Area.adj = if_else(str_detect(Sample, "[7-9]"), C1213*1.8, C1213, missing=NULL), # correct split-ratio
ppm = case_when(Sample == "std0" ~ 0, # add ppm
Sample == "std1" ~ 769,
Sample == "std2" ~ 1538,
Sample == "std3" ~ 3077,
Sample == "std4" ~ 7692,
Sample == "std5" ~ 15385,
Sample == "std6" ~ 30769,
Sample == "std7" ~ 76923,
Sample == "std7.5" ~ 153856,
Sample == "std8" ~ 230769,
Sample == "std8.5" ~ 307692,
Sample == "std9" ~ 384615))
std.df %>%
ggplot(aes(x=ppm, y=Area.adj)) +
geom_point() +
geom_smooth(method="lm") +
facet_wrap(~Date, scales="free") +
theme_test()
# Linear regressions
std.cal = tibble()
for (x in unique(std.df$Date)) {
dat = filter(std.df, Date==x)
std.lm = lm(Area.adj ~ ppm, dat)
this.row = bind_cols(Date = unique(dat$Date), # save results
intercept = summary(std.lm)$coefficients[1,1],
slope = summary(std.lm)$coefficients[2,1],
adjR2 = summary(std.lm)$adj.r.squared,
pval = summary(std.lm)$coefficients[2,4])
std.cal = bind_rows(std.cal, this.row)
}
std.cal
std.df %>%
filter(Sample != "std1") %>%
ggplot(aes(x=ppm, y=Area.adj)) +
geom_point() +
geom_smooth(method="lm") +
facet_wrap(~Date, scales="free") +
theme_test()
# Linear regressions
std.cal1 = tibble()
for (x in unique(std.df$Date)) {
dat1 = filter(std.df, Date==x & Sample != "std1")
std.lm1 = lm(Area.adj ~ ppm, dat)
date1 = unique(dat1$Date)
this.row1 = bind_cols(Date = date, coeff = summary(std.lm1)$coefficients[2,1], adjR2 = summary(std.lm1)$adj.r.squared , pval = summary(std.lm1)$coefficients[2,4]) # save coefficent, adj. R2, and p-value
std.cal1 = bind_rows(std.cal, this.row)
}
std.cal1
std.df %>%
filter(!(Sample %in% c("std1", "std4"))) %>%
ggplot(aes(x=ppm, y=Area.adj)) +
geom_point() +
geom_smooth(method="lm") +
facet_wrap(~Date, scales="free") +
theme_test()
# Linear regressions
std.cal14 = tibble()
for (x in unique(std.df$Date)) {
dat14 = filter(std.df, Date==x & Sample != "std1")
std.lm14 = lm(Area.adj ~ ppm, dat14)
this.row14 = bind_cols(coeff = summary(std.lm14)$coefficients[2,1], adjR2 = summary(std.lm14)$adj.r.squared , pval = summary(std.lm14)$coefficients[2,4]) # save coefficent, adj. R2, and p-value
std.cal14 = bind_rows(std.cal14, this.row14)
}
std.cal14
sample.df = anti_join(area.df, std.df) %>%
mutate(dummy_ppm = 0) %>% # dummy ppm for graphing with standards on ppm axis
filter(!str_detect(Sample, "[a-z]")) %>% # exclude other non-samples
mutate(Sample, Sample = parse_number(Sample))# convert to numeric
# Import metadata
meta = read_csv("SFA2_headspace_metadata.csv")
# Merge with CO2 data
sample.df = full_join(sample.df, meta, by="Sample")
# Compare samples against range of standards
std.df %>%
ggplot(aes(x=ppm, y=Area.adj)) +
geom_point(shape=1) +
geom_point(aes(y=C1213, x=dummy_ppm, color=Date), data=sample.df) +
labs(title="Samples vs. standards") +
theme_test()
# Observe progression of CO2 production
sample.df %>%
mutate(Control = if_else(Sample %in% c(379:384), "Y", "N")) %>% # distinguish negative control
ggplot(aes(y=C1213, x=Date)) +
labs(y="Area") +
geom_jitter(aes(color = Control)) +
labs(title="Quick look - respiration over time") +
theme_test()
# Isolate outlier and correct
outlier = sample.df %>%
subset(Sample==363 & TP=="tp6") %>%
mutate(Ctotal = Ctotal/2, C12 = C12/2, C13 = C13/2, C1213 = C1213/2) # halve measurements
# Replace in dataframe
sample.df = sample.df %>%
filter(!(Sample==363 & TP=="tp6")) %>%
bind_rows(outlier)
# Convert sample area to ppm using calibration curves
sample.conv = tibble()
for (d in unique(sample.df$Date)) {
cal = std.cal %>% filter(Date==d)
conv = sample.df %>%
filter(Date==d) %>%
mutate(ppm = (C1213 - cal$intercept)/cal$slope)
sample.conv = rbind(sample.conv, conv)
}
# Sanity check, plot against standards
std.df %>%
ggplot(aes(x=ppm, y=Area.adj)) +
geom_point(shape=1) +
geom_point(aes(y=C1213, x=ppm, color=Date), data=sample.conv) +
#scale_y_continuous(limits=c(0,500000)) +
#scale_x_continuous(limits=c(0, 20000)) +
theme_test() +
theme()
# Ideal gas law: n=(P*V)/(R*temp)
# NOTE: pressure does not matter for this calulation because it's all relative to the stds
R = 0.082057338 # universal gas constant, (L*atm)/(mol*K)
temp = 296.48 # K, 74F in lab throughout experiment
V = 0.013 # L, headspace of 30 mL serum bottle with sand ########### NEED TO DBL CHECK##########
mwCO2 = 44.01 # molecular weight (g/mol) of CO2
P = 1 #atm, assumes 1 atm in ucosms during sampling
# Calculate per time point
molCO2100 = P*V/(R*temp) # total mol of CO2 in headspace, if it were 100% CO2
mgCO2100 = molCO2100 * mwCO2*1000 # mol * g/mol * 1000mg/g = mg, mg of CO2 present if it were 100% CO2
sample.conv = mutate(sample.conv, mgCO2 = mgCO2100*(ppm*10^-6)) # actual mg CO2 based on ppm
# Cumulative mg CO2 and C
sample.totals = sample.conv %>%
group_by(Sample) %>%
summarize(totalCO2mg = sum(mgCO2), totalCmg = totalCO2mg*(12/44))
sample.totals %>%
ggplot(aes(x=innoculant, y=totalCO2mg, color=doc)) +
geom_point() +
labs(title="Cumulative CO2 respiration", y="CO2 mg", x="Innoculant") +
theme_test()
head(sample.totals)
head(sample.conv)
head(sample.totals)
# Add metadata (again)
# Merge with CO2 data
sample.totals = full_join(sample.conv, meta, by="Sample")
head(sample.totals)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
library(tidyverse)
library(cowplot)
sessionInfo()
rm(list=ls())
# List of directories containing data files
dir = list.dirs(path="data_CO2/SFA2/data", full.names=TRUE, recursive=FALSE)
# Create lists of .txt files from directories
files = list()
for (i in dir) {
files[[i]] <- list.files(path=i, pattern="*.txt", full.names=TRUE, recursive=FALSE)
}
# Extract area data
# TIC, w/z44 (12C), w/z45 (13C)
# Construct data frame containing all data
area.df = tibble() # initialize empty tibble
for (i in names(files)) { # for each list of files (refers to a directory)
for (x in files[[i]]) { # for each file in the selected list (directory)
# Create sample names based on file names
# Strips the rest of the path from the sample name at the end
name = str_remove(x, "data_CO2/SFA2/data/.+/") %>%
str_remove(".txt")
#name.list[[i]] = append(name.list[[i]], name)
# Isolate time point info
date = str_remove(x, "data_CO2/SFA2/data/") %>%
str_remove("/.+.txt") %>%
str_remove(".+_")
tp = str_remove(x, "data_CO2/SFA2/data/") %>%
str_remove("/.+.txt") %>%
str_remove("_.+")
# Isolate the area data and clean up
dat = read_tsv(x, skip=7, col_names=TRUE) %>%
select("Measurement" = Name, Area) %>% # keep only the name of sample and the area measurements collected
drop_na() %>%
mutate(Measurement = case_when(Measurement == "TIC" ~ "Ctotal", # more explicit measurement labels
Measurement == "m/z 44" ~ "C12",
Measurement == "m/z 45" ~ "C13"),
TP = tp, # adding additional metadata...
Date = date,
Sample = name)
area.df = rbind(area.df, dat) # add to master data frame
}
}
# Parse dates
area.df = area.df %>%
mutate(Date = gsub("([0-2]{2})([0-9]{2})([0-2]{2})", "\\1-\\2-20\\3", Date)) %>%
mutate(Date = parse_date(Date, "%m-%d-%Y"))
# Calculate
area.df = area.df %>%
pivot_wider(names_from = Measurement, values_from = Area) %>%
mutate(C1213 = C12+C13)
std.df = area.df %>%
filter(str_detect(Sample, "std"))
# Calculate adjusted areas
std.df = std.df %>%
mutate(Area.adj = if_else(str_detect(Sample, "[7-9]"), C1213*1.8, C1213, missing=NULL), # correct split-ratio
ppm = case_when(Sample == "std0" ~ 0, # add ppm
Sample == "std1" ~ 769,
Sample == "std2" ~ 1538,
Sample == "std3" ~ 3077,
Sample == "std4" ~ 7692,
Sample == "std5" ~ 15385,
Sample == "std6" ~ 30769,
Sample == "std7" ~ 76923,
Sample == "std7.5" ~ 153856,
Sample == "std8" ~ 230769,
Sample == "std8.5" ~ 307692,
Sample == "std9" ~ 384615))
std.df %>%
ggplot(aes(x=ppm, y=Area.adj)) +
geom_point() +
geom_smooth(method="lm") +
facet_wrap(~Date, scales="free") +
theme_test()
# Linear regressions
std.cal = tibble()
for (x in unique(std.df$Date)) {
dat = filter(std.df, Date==x)
std.lm = lm(Area.adj ~ ppm, dat)
this.row = bind_cols(Date = unique(dat$Date), # save results
intercept = summary(std.lm)$coefficients[1,1],
slope = summary(std.lm)$coefficients[2,1],
adjR2 = summary(std.lm)$adj.r.squared,
pval = summary(std.lm)$coefficients[2,4])
std.cal = bind_rows(std.cal, this.row)
}
std.cal
std.df %>%
filter(Sample != "std1") %>%
ggplot(aes(x=ppm, y=Area.adj)) +
geom_point() +
geom_smooth(method="lm") +
facet_wrap(~Date, scales="free") +
theme_test()
# Linear regressions
std.cal1 = tibble()
for (x in unique(std.df$Date)) {
dat1 = filter(std.df, Date==x & Sample != "std1")
std.lm1 = lm(Area.adj ~ ppm, dat)
date1 = unique(dat1$Date)
this.row1 = bind_cols(Date = date, coeff = summary(std.lm1)$coefficients[2,1], adjR2 = summary(std.lm1)$adj.r.squared , pval = summary(std.lm1)$coefficients[2,4]) # save coefficent, adj. R2, and p-value
std.cal1 = bind_rows(std.cal, this.row)
}
std.cal1
std.df %>%
filter(!(Sample %in% c("std1", "std4"))) %>%
ggplot(aes(x=ppm, y=Area.adj)) +
geom_point() +
geom_smooth(method="lm") +
facet_wrap(~Date, scales="free") +
theme_test()
# Linear regressions
std.cal14 = tibble()
for (x in unique(std.df$Date)) {
dat14 = filter(std.df, Date==x & Sample != "std1")
std.lm14 = lm(Area.adj ~ ppm, dat14)
this.row14 = bind_cols(coeff = summary(std.lm14)$coefficients[2,1], adjR2 = summary(std.lm14)$adj.r.squared , pval = summary(std.lm14)$coefficients[2,4]) # save coefficent, adj. R2, and p-value
std.cal14 = bind_rows(std.cal14, this.row14)
}
std.cal14
sample.df = anti_join(area.df, std.df) %>%
mutate(dummy_ppm = 0) %>% # dummy ppm for graphing with standards on ppm axis
filter(!str_detect(Sample, "[a-z]")) %>% # exclude other non-samples
mutate(Sample, Sample = parse_number(Sample))# convert to numeric
# Import metadata
meta = read_csv("SFA2_headspace_metadata.csv")
# Merge with CO2 data
sample.df = full_join(sample.df, meta, by="Sample")
# Compare samples against range of standards
std.df %>%
ggplot(aes(x=ppm, y=Area.adj)) +
geom_point(shape=1) +
geom_point(aes(y=C1213, x=dummy_ppm, color=Date), data=sample.df) +
labs(title="Samples vs. standards") +
theme_test()
# Observe progression of CO2 production
sample.df %>%
mutate(Control = if_else(Sample %in% c(379:384), "Y", "N")) %>% # distinguish negative control
ggplot(aes(y=C1213, x=Date)) +
labs(y="Area") +
geom_jitter(aes(color = Control)) +
labs(title="Quick look - respiration over time") +
theme_test()
# Isolate outlier and correct
outlier = sample.df %>%
subset(Sample==363 & TP=="tp6") %>%
mutate(Ctotal = Ctotal/2, C12 = C12/2, C13 = C13/2, C1213 = C1213/2) # halve measurements
# Replace in dataframe
sample.df = sample.df %>%
filter(!(Sample==363 & TP=="tp6")) %>%
bind_rows(outlier)
# Convert sample area to ppm using calibration curves
sample.conv = tibble()
for (d in unique(sample.df$Date)) {
cal = std.cal %>% filter(Date==d)
conv = sample.df %>%
filter(Date==d) %>%
mutate(ppm = (C1213 - cal$intercept)/cal$slope)
sample.conv = rbind(sample.conv, conv)
}
# Sanity check, plot against standards
std.df %>%
ggplot(aes(x=ppm, y=Area.adj)) +
geom_point(shape=1) +
geom_point(aes(y=C1213, x=ppm, color=Date), data=sample.conv) +
#scale_y_continuous(limits=c(0,500000)) +
#scale_x_continuous(limits=c(0, 20000)) +
theme_test() +
theme()
# Ideal gas law: n=(P*V)/(R*temp)
# NOTE: pressure does not matter for this calulation because it's all relative to the stds
R = 0.082057338 # universal gas constant, (L*atm)/(mol*K)
temp = 296.48 # K, 74F in lab throughout experiment
V = 0.013 # L, headspace of 30 mL serum bottle with sand ########### NEED TO DBL CHECK##########
mwCO2 = 44.01 # molecular weight (g/mol) of CO2
P = 1 #atm, assumes 1 atm in ucosms during sampling
# Calculate per time point
molCO2100 = P*V/(R*temp) # total mol of CO2 in headspace, if it were 100% CO2
mgCO2100 = molCO2100 * mwCO2*1000 # mol * g/mol * 1000mg/g = mg, mg of CO2 present if it were 100% CO2
sample.conv = mutate(sample.conv, mgCO2 = mgCO2100*(ppm*10^-6)) # actual mg CO2 based on ppm
head(sample.conv)
# Cumulative mg CO2 and C
sample.totals = sample.conv %>%
group_by(Sample, Innoculant, DOC_predict) %>%
summarize(totalCO2mg = sum(mgCO2), totalCmg = totalCO2mg*(12/44))
head(sample.totals)
sample.totals %>%
ggplot(aes(x=Innoculant, y=totalCO2mg, color=DOC_predict)) +
geom_point() +
labs(title="Cumulative CO2 respiration", y="CO2 mg", x="Innoculant") +
theme_test()
sample.totals %>%
ggplot(aes(x=DOC_predict, y=totalCO2mg)) +
geom_point() +
labs(title="Cumulative CO2 respiration", y="CO2 mg", x="DOC predicted") +
theme_test()
head(sample.conv)
# Split into early and late
sample.early = subset(sample.conv, TP %in% c("TP0","TP1","TP2","TP3","TP4","TP5","TP6","TP7"))
View(sample.early)
head(sampple.conv)
head(sample.conv)
# Split into early and late
sample.early = subset(sample.conv, tp %in% c("tp0","tp1","tp2","tp3","tp4","tp5","tp6","tp7"))
head(sample.early)
# Split into early and late
sample.early = subset(sample.conv, TP %in% c("tp0","tp1","tp2","tp3","tp4","tp5","tp6","tp7"))
sample.late = anti_join(sample.conv, sample.early)
head(sample.early)
dim(sample.early)
dim(sample.conv)
dim(sample.late)
# Cumulative
sample.total.early = subset(sample.totals, TP %in% c("tp0","tp1","tp2","tp3","tp4","tp5","tp6","tp7"))
# Split into early and late
sample.conv = mutate(sample.conv, Time = if_else(TP, ends_with(0-7), "early", "late")))
# Split into early and late
sample.conv = mutate(sample.conv, Time = if_else(TP, ends_with(0-7), "early", "late")))
# Split into early and late
sample.conv = mutate(sample.conv, Time = if_else(TP, ends_with(0-7), "early", "late"))
# Split into early and late
sample.conv = mutate(sample.conv, Time = if_else(ends_with(TP, 0-7), "early", "late"))
?ends_with
?grep
# Split into early and late
sample.conv = mutate(sample.conv, Time = if_else(grep([0-7], TP), "early", "late"))
# Split into early and late
sample.conv = mutate(sample.conv, Time = if_else(grep("[0-7]", TP), "early", "late"))
# Split into early and late
sample.conv = mutate(sample.conv, Incubation = if_else(grep("[0-7]", TP), "early", "late"))
head(sample.conv)
# Split into early and late
sample.conv = mutate(sample.conv, Incubation = if_else(grep("tp[0-7]", TP), "early", "late"))
?mutate
?if_else
?mutate
# Split into early and late
mutate(sample.conv, Incubation = if_else(grep("[0-7]", TP), "early", "late"))
# Split into early and late
mutate(sample.conv, Incubation = if_else(grep("tp[0-7]", TP), "early", "late"))
# Split into early and late
sample.early = subset(sample.conv, TP %in% c("tp0","tp1","tp2","tp3","tp4","tp5","tp6","tp7"))
sample.late = anti_join(sample.conv, sample.early)
# Calculate cumulative CO2 for early and late
sample.total.early = sample.early %>%
group_by(Sample, Innoculant, DOC_predict) %>%
summarize(totalCO2mg = sum(mgCO2), totalCmg = totalCO2mg*(12/44))
haed(sample.total.early)
head(sample.total.early)
?add_column
# Calculate cumulative CO2 for early and late
sample.total.early = sample.early %>%
group_by(Sample, Innoculant, DOC_predict) %>%
summarize(totalCO2mg = sum(mgCO2), totalCmg = totalCO2mg*(12/44)) %>%
add_column(Incubation_stage = "early")
head(sample.total.early)
head(sample.df)
# Observe progression of CO2 production
sample.df %>%
mutate(Control = if_else(Sample %in% c(379:384), "Y", "N")) %>% # distinguish negative control
ggplot(aes(y=C1213, x=Date)) +
labs(y="Area") +
geom_jitter(aes(color = Control, shape=DOC_predict)) +
labs(title="Quick look - respiration over time") +
theme_test()
# Compare samples against range of standards
std.df %>%
ggplot(aes(x=ppm, y=Area.adj)) +
geom_point(shape=1) +
geom_point(aes(y=C1213, x=dummy_ppm, color=Date), data=sample.df) +
labs(title="Samples vs. standards") +
theme_test()
# Observe progression of CO2 production
sample.df %>%
mutate(Control = if_else(Sample %in% c(379:384), "Y", "N")) %>% # distinguish negative control
ggplot(aes(y=C1213, x=Date)) +
labs(y="Area") +
geom_jitter(aes(color = Control)) +
labs(title="Quick look - respiration over time") +
theme_test()
sample.total.late = sample.late %>%
group_by(Sample, Innoculant, DOC_predict) %>%
summarize(totalCO2mg = sum(mgCO2), totalCmg = totalCO2mg*(12/44)) %>%
add_column(Incubation_stage = "late")
sample.total.split = bind_rows(sample.total.early, sample.total.late)
head(sample.total.split)
sample.total.split %>%
ggplot(aes(x=Innoculant, y=totalCO2mg, color=Incubation_stage)) +
geom_point()
sample.total.split %>%
ggplot(aes(x=Incubation_stage, y=totalCO2mg, color=DOC_predict)) +
geom_point()
sample.total.split %>%
ggplot(aes(x=Incubation_stage, y=totalCO2mg, color=DOC_predict)) +
geom_jitter() +
theme_test()
sample.total.split %>%
ggplot(aes(x=Incubation_stage, y=totalCO2mg, color=DOC_predict)) +
geom_boxplot() +
theme_test()
